{"version":3,"sources":["views/pages/Admin/Absensi/AbsensiPTTB.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/webpack/buildin/module.js","context/actions/Absensi/getRekapAbsensiPerTahun.js","context/actions/Absensi/getRiwayatAbsensiPegawai.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","context/actions/DownloadFile/printAbsensi.js","views/pages/Admin/Absensi/TambahAbsen.js","context/actions/Absensi/insertOrUpdateAbsensi.js","context/actions/Absensi/insertAbsensi.js","context/actions/Pegawai/PTTB/getPTTB.js","views/pages/Admin/Absensi/ExpandableComponent.js","context/actions/Absensi/getAbsensiByPegawai.js"],"names":["TextField","styled","input","ClearButton","button","FilterComponent","filterText","onFilter","onClear","id","type","placeholder","aria-label","value","onChange","onClick","AbsensiPTTB","history","useHistory","useState","setFilterText","resetPaginationToggle","setResetPaginationToggle","useContext","GlobalContext","pttbState","pttbDispatch","data","loading","useEffect","getPTTB","filteredData","filter","item","nama","nip","toLowerCase","includes","columns","name","selector","sortable","wrap","maxWidth","cell","row","data-tag","color","className","goToRiwayat","id_pegawai","customStyles","headCells","style","fontSize","SubHeaderComponentMemo","React","useMemo","e","target","content","utton","printRekapAbsensiByStatusPegawai","cilPrint","exportExcel","push","length","noHeader","responsive","pagination","paginationResetDefaultPage","subHeader","subHeaderComponent","expandableRows","highlightOnHover","expandOnRowClicked","expandableRowsComponent","width","src","LoadAnimationBlue","alt","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","module","exports","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","l","i","getRekapAbsensiPerTahun","idPegawai","setLoading","setData","axiosInstance","then","res","console","log","catch","err","response","getRiwayatAbsensiPegawai","values","startDate","endDate","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","status","tahun","window","open","localStorage","baseURL","TambahAbsen","modal","setRiwayatAbsen","setRekapAbsensi","setLoadingRiwayatAbsen","setLoadingRekapAbsensi","formattedDateRiwayatAbsen","tglAbsen","setTglAbsen","absen","setAbsen","keterangan","setKeterangan","namaHari","setNamaHari","getNamaHari","useCallback","$tgl","hari","format","Date","filterYear","filterMonth","tgl","tgl_absen","handleOnSubmit","preventDefault","saveData","id_absensi","parseInt","trigger","setModal","post","header","_boundary","prevState","insertOrUpdateAbsensi","setTriggerUpdateData","insertAbsensi","onSubmit","md","readOnly","custom","required","disabled","selected","document","getElementById","setAttribute","dispatch","LOADING","SUCCESS","payload","ERROR","message","ExpandableComponent","days","setDays","current_year","getFullYear","current_month","getMonth","setFilterYear","setFilterMonth","dayAbsen","setDayAbsen","increment","triggerUpdateData","bulan","getAbsensiByPegawai","forEach","years","old_year","range_year","months","getDaysInMonth","month","year","getDate","padding","handleChangeYear","defaultValue","map","index","handleChangeMonth","arr_index","getDays","data_keterangan","data_absen_index","data_absen","toString","lg","sm","xs","show","onClose","size","closeButton"],"mappings":"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","file":"static/js/18.df0c1363.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CButton,\r\n  CPopover,\r\n  CRow,\r\n  CCol,\r\n} from \"@coreui/react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { cilPrint } from \"@coreui/icons\";\r\nimport ExpandableComponent from \"./ExpandableComponent\";\r\nimport { GlobalContext } from \"src/context/Provider\";\r\nimport { LoadAnimationBlue } from \"src/assets\";\r\nimport { printRekapAbsensiByStatusPegawai } from \"src/context/actions/DownloadFile/printAbsensi\";\r\nimport { getPTTB } from \"src/context/actions/Pegawai/PTTB/getPTTB\";\r\nimport exportExcel from \"src/context/actions/DownloadFile/Excel/Pegawai/exportExcel\";\r\n// const TambahAbsen = React.lazy(() => import(\"./TambahAbsen\"));\r\n\r\nconst TextField = styled.input`\r\n  height: 37px;\r\n  width: 200px;\r\n  border-radius: 3px;\r\n  border-top-left-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  border: 1px solid #e5e5e5;\r\n  padding: 0 32px 0 16px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ClearButton = styled.button`\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  height: 37px;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #3e5973;\r\n  border: none;\r\n  color: white;\r\n  padding: 0 10px;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #283c4f;\r\n  }\r\n`;\r\n\r\n// Handle filter pencarian\r\n\r\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\r\n  <>\r\n    <TextField\r\n      id=\"search\"\r\n      type=\"text\"\r\n      placeholder=\"Cari pegawai\"\r\n      aria-label=\"Search Input\"\r\n      value={filterText}\r\n      onChange={onFilter}\r\n    />\r\n    <ClearButton type=\"button\" onClick={onClear}>\r\n      Reset\r\n    </ClearButton>\r\n  </>\r\n);\r\n\r\nconst AbsensiPTTB = () => {\r\n  const history = useHistory();\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  const { pttbState, pttbDispatch } = useContext(GlobalContext);\r\n  const { data, loading } = pttbState;\r\n\r\n  useEffect(() => {\r\n    // Get All Pegawai\r\n    getPTTB(pttbDispatch);\r\n  }, [pttbDispatch]);\r\n\r\n  const filteredData = data.filter((item) =>\r\n    // (\r\n    //   item.nama && item.sub_bidang &&\r\n    //   item.nama.toLowerCase().includes(filterText.toLowerCase())\r\n\r\n    // )\r\n    {\r\n      if (item.nama && item.nip) {\r\n        if (\r\n          item.nama.toLowerCase().includes(filterText.toLowerCase()) ||\r\n          item.nip.toLowerCase().includes(filterText.toLowerCase())\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"NIP\",\r\n      selector: \"nip\",\r\n      sortable: true,\r\n      // maxWidth: \"200px\",\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Nama\",\r\n      selector: \"nama\",\r\n      sortable: true,\r\n      // maxWidth: \"200px\",\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Jabatan\",\r\n      selector: \"jabatan\",\r\n      sortable: true,\r\n      // maxWidth: \"200px\",\r\n      wrap: true,\r\n    },\r\n    {\r\n      maxWidth: \"150px\",\r\n      name: \"Action\",\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <div data-tag=\"allowRowEvents\">\r\n          <CButton\r\n            color=\"success\"\r\n            className=\"btn btn-sm\"\r\n            onClick={() => goToRiwayat(row.id_pegawai)}\r\n          >\r\n            Absensi\r\n          </CButton>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headCells: {\r\n      style: {\r\n        fontSize: \"1.15em\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const SubHeaderComponentMemo = React.useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <FilterComponent\r\n          onFilter={(e) => setFilterText(e.target.value)}\r\n          onClear={handleClear}\r\n          filterText={filterText}\r\n        />\r\n\r\n        <CPopover content=\"Cetak Rekapan Absensi Pegawai\">\r\n          <CButton\r\n            utton\r\n            type=\"button\"\r\n            color=\"info\"\r\n            className=\"ml-2\"\r\n            onClick={() => printRekapAbsensiByStatusPegawai(\"pttb\")}\r\n          >\r\n            <span className=\"my-text-button\">Cetak Rekapan Absensi</span>{\" \"}\r\n            <CIcon content={cilPrint} />\r\n          </CButton>\r\n        </CPopover>\r\n        <CPopover content=\"Export Rekap Absensi ke Excel\">\r\n          <CButton\r\n            utton\r\n            type=\"button\"\r\n            color=\"success\"\r\n            className=\"ml-2\"\r\n            onClick={() => exportExcel(\"absensi-pegawai/pttb\")}\r\n          >\r\n            <span className=\"my-text-button\">Excel</span>{\" \"}\r\n            <CIcon content={cilPrint} />\r\n          </CButton>\r\n        </CPopover>\r\n      </>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  const goToRiwayat = (id) => {\r\n    history.push(`/epekerja/admin/absensi/riwayat-absensi/${id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <h3>Absensi Pegawai Tidak Tetap Bulanan (PTTB)</h3>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          {data.length > 0 ? (\r\n            <DataTable\r\n              columns={columns}\r\n              data={filteredData}\r\n              noHeader\r\n              responsive={true}\r\n              customStyles={customStyles}\r\n              pagination\r\n              // paginationRowsPerPageOptions={[5, 10, 15]}\r\n              // paginationPerPage={5}\r\n              paginationResetDefaultPage={resetPaginationToggle}\r\n              subHeader\r\n              subHeaderComponent={SubHeaderComponentMemo}\r\n              expandableRows\r\n              highlightOnHover\r\n              expandOnRowClicked\r\n              expandableRowsComponent={<ExpandableComponent />}\r\n            />\r\n          ) : loading ? (\r\n            <div>\r\n              <CRow>\r\n                <CCol className=\"text-center\">\r\n                  <img\r\n                    className=\"mt-4 ml-3\"\r\n                    width={30}\r\n                    src={LoadAnimationBlue}\r\n                    alt=\"load-animation\"\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            </div>\r\n          ) : (\r\n            <DataTable\r\n              columns={columns}\r\n              data={filteredData}\r\n              noHeader\r\n              responsive={true}\r\n              customStyles={customStyles}\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle}\r\n              subHeader\r\n              subHeaderComponent={SubHeaderComponentMemo}\r\n              highlightOnHover\r\n            />\r\n          )}\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AbsensiPTTB;\r\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getRekapAbsensiPerTahun = (idPegawai, setLoading, setData) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .get(`admin/pegawai/${idPegawai}/rekap-absensi`)\r\n    .then((res) => {\r\n      setData(res.data.data);\r\n      setLoading(false);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getRiwayatAbsensiPegawai = (\r\n  idPegawai,\r\n  setLoading,\r\n  setData,\r\n  values\r\n) => {\r\n  setLoading(true);\r\n\r\n  console.log(values);\r\n\r\n  axiosInstance\r\n    .get(\r\n      `admin/pegawai/${idPegawai}/absensi?first_date=${values.startDate}&last_date=${values.endDate}`\r\n    )\r\n    .then((res) => {\r\n      setData(res.data.data);\r\n      setLoading(false);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const printRekapAbsensiByStatusPegawai = (status, tahun = \"\") => {\r\n  window.open(\r\n    `${localStorage.baseURL}print-rekap-absensi/${status}?tahun=${tahun}`,\r\n    \"_blank\"\r\n  );\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CCol,\r\n  CSelect,\r\n  CForm,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport { format } from \"date-fns\";\r\nimport { insertOrUpdateAbsensi } from \"src/context/actions/Absensi/insertOrUpdateAbsensi\";\r\nimport { insertAbsensi } from \"src/context/actions/Absensi/insertAbsensi\";\r\n\r\nconst TambahAbsen = ({\r\n  data,\r\n  modal,\r\n  idPegawai,\r\n  setRiwayatAbsen,\r\n  setRekapAbsensi,\r\n  setLoadingRiwayatAbsen,\r\n  setLoadingRekapAbsensi,\r\n  formattedDateRiwayatAbsen,\r\n}) => {\r\n  const [tglAbsen, setTglAbsen] = useState(\"\");\r\n  const [absen, setAbsen] = useState(\"\");\r\n  const [keterangan, setKeterangan] = useState(\"\");\r\n  const [namaHari, setNamaHari] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const getNamaHari = useCallback(\r\n    ($tgl = null) => {\r\n      let hari = \"\";\r\n      if (data) {\r\n        hari = format(\r\n          new Date(data.filterYear, data.filterMonth, data.tgl),\r\n          \"EEEEEE\"\r\n        );\r\n      } else {\r\n        hari = format(new Date(), \"EEEEEE\");\r\n      }\r\n\r\n      if ($tgl) {\r\n        hari = format(new Date($tgl), \"EEEEEE\");\r\n      }\r\n\r\n      switch (hari) {\r\n        case \"Su\":\r\n          hari = \"minggu\";\r\n          break;\r\n        case \"Mo\":\r\n          hari = \"senin\";\r\n          break;\r\n        case \"Tu\":\r\n          hari = \"selasa\";\r\n          break;\r\n        case \"We\":\r\n          hari = \"rabu\";\r\n          break;\r\n        case \"Th\":\r\n          hari = \"kamis\";\r\n          break;\r\n        case \"Fr\":\r\n          hari = \"jumat\";\r\n          break;\r\n        case \"Sa\":\r\n          hari = \"sabtu\";\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      return hari;\r\n    },\r\n    [data]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let tgl_absen = null;\r\n\r\n    // Cek apakah data dan properti tgl ada\r\n    if (!data) {\r\n      tgl_absen = format(new Date(), \"yyyy-MM-dd\");\r\n      setTglAbsen(tgl_absen);\r\n      // Get Nama Hari\r\n      setNamaHari(getNamaHari());\r\n    }\r\n    if (data && data.tgl) {\r\n      tgl_absen = format(\r\n        new Date(data.filterYear, data.filterMonth, data.tgl),\r\n        \"yyyy-MM-dd\"\r\n      );\r\n      setTglAbsen(tgl_absen);\r\n      setAbsen(data.absen);\r\n      setKeterangan(data.keterangan);\r\n      // Get Nama Hari\r\n      setNamaHari(getNamaHari());\r\n    }\r\n  }, [data, getNamaHari]);\r\n\r\n  useEffect(() => {\r\n    setNamaHari(getNamaHari(tglAbsen));\r\n  }, [tglAbsen, getNamaHari]);\r\n\r\n  // Handle kosongkan input keterangan ketika tombol close modal diklik\r\n  const handleCloseModal = () => {\r\n    setKeterangan(\"\");\r\n    modal.setModal(!modal.modal);\r\n\r\n    let inputKeterangan = document.getElementById(\"keterangan\");\r\n    inputKeterangan.setAttribute(\"value\", \"\");\r\n  };\r\n\r\n  // Handle ketika data disimpan\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // let valTanggal = document.getElementById(\"tgl_absen\").getAttribute(\"value\");\r\n    // let valHari = document.getElementById(\"hari\").getAttribute(\"value\");\r\n    // let valAbsen = document.getElementById(\"absen\").getAttribute(\"value\");\r\n\r\n    // let valKeterangan = document\r\n    //   .getElementById(\"keterangan\")\r\n    //   .getAttribute(\"value\");\r\n\r\n    let id_pegawai = data ? data.id_pegawai : idPegawai;\r\n\r\n    const saveData = {\r\n      // id_pegawai: idPegawai ? idPegawai : data.id_pegawai,\r\n      id_absensi: data ? data.id_absensi : \"\",\r\n      tgl_absen: tglAbsen,\r\n      hari: namaHari,\r\n      absen: absen === \"empty\" ? \"\" : parseInt(absen),\r\n      keterangan: keterangan,\r\n    };\r\n\r\n    console.log(saveData);\r\n    // Insert or Update Absensi\r\n\r\n    if (data) {\r\n      insertOrUpdateAbsensi(\r\n        id_pegawai,\r\n        setLoading,\r\n        saveData,\r\n        data.setTriggerUpdateData,\r\n        modal.setModal\r\n      );\r\n    } else {\r\n      insertAbsensi(\r\n        id_pegawai,\r\n        setLoading,\r\n        saveData,\r\n        modal.setModal,\r\n        setRiwayatAbsen,\r\n        setRekapAbsensi,\r\n        setLoadingRiwayatAbsen,\r\n        setLoadingRekapAbsensi,\r\n        formattedDateRiwayatAbsen\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CForm onSubmit={(e) => handleOnSubmit(e)}>\r\n        <CModalBody>\r\n          <CFormGroup row>\r\n            <CCol md=\"2\">\r\n              <CLabel>Tanggal Absen</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n              <CInput\r\n                type=\"date\"\r\n                name=\"tgl_absen\"\r\n                id=\"tgl_absen\"\r\n                value={tglAbsen || \"\"}\r\n                onChange={(e) => setTglAbsen(e.target.value)}\r\n                placeholder=\"Masukkan tanggal absen\"\r\n                readOnly={data && data.tgl ? true : false}\r\n              />\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"2\">\r\n              <CLabel>Hari</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n              {data ? (\r\n                // Jika ada nama hari\r\n                <CInput\r\n                  name=\"hari\"\r\n                  id=\"hari\"\r\n                  value={namaHari || \"\"}\r\n                  onChange={(e) => setNamaHari(e.target.value)}\r\n                  readOnly={data && data.tgl ? true : false}\r\n                />\r\n              ) : (\r\n                // Jika Tidak Ada nama hari\r\n                <CSelect\r\n                  custom\r\n                  name=\"hari\"\r\n                  id=\"hari\"\r\n                  required\r\n                  value={namaHari || \"\"}\r\n                  onChange={(e) => setNamaHari(e.target.value)}\r\n                  disabled\r\n                >\r\n                  <option value=\"\">-- Pilih Hari --</option>\r\n                  <option value=\"senin\">Senin</option>\r\n                  <option value=\"selasa\">Selasa</option>\r\n                  <option value=\"rabu\">Rabu</option>\r\n                  <option value=\"kamis\">Kamis</option>\r\n                  <option value=\"jumat\">Jumat</option>\r\n                  <option value=\"sabtu\">Sabtu</option>\r\n                  <option value=\"minggu\">Minggu</option>\r\n                </CSelect>\r\n              )}\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"2\">\r\n              <CLabel>Absen</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n              {data ? (\r\n                <CSelect\r\n                  custom\r\n                  name=\"absen\"\r\n                  id=\"absen\"\r\n                  onChange={(e) => setAbsen(e.target.value)}\r\n                  required={true}\r\n                >\r\n                  <option value=\"\" selected={absen === \"empty\" ? true : false}>\r\n                    -- Pilih Absen --\r\n                  </option>\r\n                  <option value=\"5\" selected={absen === 5 ? true : false}>\r\n                    Tanpa Keterangan\r\n                  </option>\r\n                  <option value=\"1\" selected={absen === 1 ? true : false}>\r\n                    Hadir\r\n                  </option>\r\n                  <option value=\"2\" selected={absen === 2 ? true : false}>\r\n                    Izin\r\n                  </option>\r\n                  <option value=\"3\" selected={absen === 3 ? true : false}>\r\n                    Sakit\r\n                  </option>\r\n                  <option value=\"4\" selected={absen === 4 ? true : false}>\r\n                    Cuti\r\n                  </option>\r\n                </CSelect>\r\n              ) : (\r\n                <CSelect\r\n                  custom\r\n                  name=\"absen\"\r\n                  id=\"absen\"\r\n                  required\r\n                  value={absen}\r\n                  onChange={(e) => setAbsen(e.target.value)}\r\n                >\r\n                  <option value=\"\">-- Pilih Absen --</option>\r\n                  <option value=\"5\">Tanpa Keterangan</option>\r\n                  <option value=\"1\">Hadir</option>\r\n                  <option value=\"2\">Izin</option>\r\n                  <option value=\"3\">Sakit</option>\r\n                  <option value=\"4\">Cuti</option>\r\n                </CSelect>\r\n              )}\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"2\">\r\n              <CLabel>Keterangan</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n              {keterangan ? (\r\n                <CInput\r\n                  type=\"text\"\r\n                  name=\"keterangan\"\r\n                  id=\"keterangan\"\r\n                  value={keterangan || \"\"}\r\n                  onChange={(e) => setKeterangan(e.target.value)}\r\n                  required\r\n                />\r\n              ) : (\r\n                <CInput\r\n                  type=\"text\"\r\n                  name=\"keterangan\"\r\n                  id=\"keterangan\"\r\n                  value={keterangan || \"\"}\r\n                  onChange={(e) => setKeterangan(e.target.value)}\r\n                  required\r\n                />\r\n              )}\r\n            </CCol>\r\n          </CFormGroup>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            disabled={loading ? true : false}\r\n          >\r\n            {loading ? \"Sedang menyimpan...\" : \"Simpan\"}\r\n          </CButton>{\" \"}\r\n          <CButton type=\"button\" color=\"secondary\" onClick={handleCloseModal}>\r\n            Batal\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CForm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TambahAbsen;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const insertOrUpdateAbsensi = (\r\n  idPegawai,\r\n  setLoading,\r\n  values,\r\n  trigger,\r\n  setModal\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(`admin/pegawai/${idPegawai}/absensi/insert-update`, values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      setLoading(false);\r\n      trigger((prevState) => !prevState);\r\n      setModal((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          modal: !prevState.modal,\r\n        };\r\n      });\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n","import axiosInstance from \"src/helpers/axios\";\r\nimport { getRekapAbsensiPerTahun } from \"./getRekapAbsensiPerTahun\";\r\nimport { getRiwayatAbsensiPegawai } from \"./getRiwayatAbsensiPegawai\";\r\n\r\nexport const insertAbsensi = (\r\n  idPegawai,\r\n  setLoading,\r\n  values,\r\n  setModal,\r\n  setRiwayatAbsen,\r\n  setRekapAbsensi,\r\n  setLoadingRiwayatAbsen,\r\n  setLoadingRekapAbsensi,\r\n  formattedDateRiwayatAbsen\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(`admin/pegawai/${idPegawai}/absensi`, values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      setLoading(false);\r\n      setModal(false);\r\n      getRiwayatAbsensiPegawai(\r\n        idPegawai,\r\n        setLoadingRiwayatAbsen,\r\n        setRiwayatAbsen,\r\n        formattedDateRiwayatAbsen\r\n      );\r\n      getRekapAbsensiPerTahun(\r\n        idPegawai,\r\n        setLoadingRekapAbsensi,\r\n        setRekapAbsensi\r\n      );\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n","import { ERROR, LOADING, SUCCESS } from \"src/context/actionTypes\";\r\nimport axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getPTTB = (dispatch) => {\r\n  dispatch({\r\n    type: LOADING,\r\n  });\r\n\r\n  axiosInstance\r\n    .get(\"admin/pegawai/pttb\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n      // console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ERROR,\r\n        payload: err.response.data.message,\r\n      });\r\n      // console.log(err.response.data);\r\n    });\r\n};\r\n","import {\r\n  CForm,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CCol,\r\n  CRow,\r\n  CInput,\r\n  CButton,\r\n  CInputGroupText,\r\n  CModal,\r\n  CModalHeader,\r\n  CSelect,\r\n  CFormGroup,\r\n  CModalTitle,\r\n} from \"@coreui/react\";\r\nimport { format } from \"date-fns\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getAbsensiByPegawai } from \"src/context/actions/Absensi/getAbsensiByPegawai\";\r\nimport TambahAbsen from \"./TambahAbsen\";\r\n\r\n// Expandable Component\r\nconst ExpandableComponent = ({ data }) => {\r\n  const [modal, setModal] = useState({\r\n    modal: false,\r\n    tgl: null,\r\n    absen: null,\r\n    keterangan: null,\r\n  });\r\n  const [days, setDays] = useState([]);\r\n  const current_year = new Date().getFullYear();\r\n  const current_month = new Date().getMonth();\r\n  const [filterYear, setFilterYear] = useState(current_year);\r\n  const [filterMonth, setFilterMonth] = useState(current_month);\r\n  const [absen, setAbsen] = useState([]);\r\n  const [dayAbsen, setDayAbsen] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  console.log(loading);\r\n  let increment = 0;\r\n  // State untuk mentrigger komponen absen agar terupdate setelah proses tambah/update absen berhasil\r\n  const [triggerUpdateData, setTriggerUpdateData] = useState(true);\r\n  // const [saveDay, setSaveDay] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Trigger Update Data\r\n    if (triggerUpdateData === true || triggerUpdateData === false) {\r\n      // Get absensi by id pegawai\r\n      getAbsensiByPegawai(data.id_pegawai, setLoading, setAbsen, {\r\n        tahun: filterYear,\r\n        bulan: filterMonth + 1,\r\n      });\r\n    }\r\n  }, [data, triggerUpdateData, filterYear, filterMonth]);\r\n\r\n  useEffect(() => {\r\n    if (absen.length > 0) {\r\n      absen.forEach((item) => {\r\n        setDayAbsen((prevState) => [\r\n          ...prevState,\r\n          format(new Date(item.tgl_absen), \"d\"),\r\n        ]);\r\n      });\r\n    }\r\n  }, [absen]);\r\n\r\n  // Get Years\r\n  const years = [];\r\n  const old_year = 2015;\r\n  let range_year = current_year - old_year;\r\n\r\n  // Isi tahun dari 2015 sd tahun sekarang\r\n  for (let i = 0; i <= range_year; i++) {\r\n    years.push(old_year + i);\r\n  }\r\n\r\n  // Get Months\r\n  const months = [];\r\n\r\n  // Isi bulan dari Januari sd Desember\r\n  for (let i = 0; i < 12; i++) {\r\n    months.push(format(new Date(old_year, i, 1), \"MMMM\"));\r\n  }\r\n\r\n  // Get total days\r\n  const getDays = (month, year) => {\r\n    let arr_index = [];\r\n    for (let i = 1; i <= getDaysInMonth(month + 1, year); i++) {\r\n      arr_index.push(i);\r\n    }\r\n    setDays(arr_index);\r\n  };\r\n\r\n  // Dapatkan jumlah tanggal setiap bulan berdasarkan tahun\r\n  const getDaysInMonth = (month, year) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  // Tangani perubahan nilai pada select\r\n  const handleChangeYear = (e) => {\r\n    setDays([]);\r\n    setDayAbsen([]);\r\n    setFilterYear(parseInt(e.target.value));\r\n  };\r\n\r\n  const handleChangeMonth = (e) => {\r\n    setDays([]);\r\n    setDayAbsen([]);\r\n    setFilterMonth(parseInt(e.target.value));\r\n  };\r\n\r\n  const getDaysOnTampil = () => {\r\n    getDays(filterMonth, filterYear);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"10px 63px\" }}>\r\n        <CForm>\r\n          <CRow>\r\n            <CCol>\r\n              <CFormGroup row>\r\n                <CCol md=\"2\" className=\"mb-2\">\r\n                  <CSelect\r\n                    custom\r\n                    name=\"year\"\r\n                    id=\"year\"\r\n                    onChange={(e) => handleChangeYear(e)}\r\n                    // onClick={(e) => handleChangeYear(e)}\r\n                    defaultValue={current_year}\r\n                  >\r\n                    {years.map((item, index) => (\r\n                      <option key={index} value={item}>\r\n                        {item}\r\n                      </option>\r\n                    ))}\r\n                  </CSelect>\r\n                </CCol>\r\n                <CCol md=\"2\" className=\"mb-2\">\r\n                  <CSelect\r\n                    custom\r\n                    name=\"month\"\r\n                    id=\"month\"\r\n                    onChange={(e) => handleChangeMonth(e)}\r\n                    // onClick={(e) => handleChangeMonth(e)}\r\n                    defaultValue={current_month}\r\n                  >\r\n                    {months.map((item, index) => (\r\n                      <option key={index} value={index}>\r\n                        {item}\r\n                      </option>\r\n                    ))}\r\n                  </CSelect>\r\n                </CCol>\r\n                <CCol>\r\n                  <CButton\r\n                    type=\"button\"\r\n                    color=\"info\"\r\n                    onClick={getDaysOnTampil}\r\n                    className=\"mr-2\"\r\n                  >\r\n                    Tampilkan Absen\r\n                  </CButton>\r\n                </CCol>\r\n              </CFormGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow>\r\n            {days.length > 0 &&\r\n              days.map((item, index) => {\r\n                // Get filter tanggal\r\n                // let filter_tgl = format(\r\n                //   new Date(filterYear, filterMonth, 1),\r\n                //   \"yyyy-MM\"\r\n                // );\r\n\r\n                // Get tgl absen ketika modal muncul\r\n                // let data_tgl = absen[index]\r\n                //   ? format(new Date(absen[index].tgl_absen), \"yyyy-MM\")\r\n                //   : null;\r\n\r\n                let id_absensi = \"\";\r\n                let data_keterangan = \"\";\r\n                let data_absen_index = \"\";\r\n                let data_absen = \"\";\r\n\r\n                // Get keterangan\r\n                // let data_keterangan =\r\n                //   filter_tgl === data_tgl ? absen[index].keterangan : \"\";\r\n\r\n                // let data_absen_index =\r\n                //   filter_tgl === data_tgl ? absen[index].absen : \"empty\";\r\n\r\n                // let data_absen =\r\n                //   filter_tgl === data_tgl ? absen[index].absen : \"\";\r\n\r\n                if (dayAbsen.includes(item.toString())) {\r\n                  id_absensi = absen[increment].id_absensi;\r\n                  data_keterangan = absen[increment].keterangan;\r\n\r\n                  data_absen_index = absen[increment].absen;\r\n\r\n                  data_absen = absen[increment].absen;\r\n\r\n                  increment++;\r\n                } else {\r\n                  id_absensi = \"\";\r\n                  data_keterangan = \"\";\r\n\r\n                  data_absen_index = \"empty\";\r\n\r\n                  data_absen = \"\";\r\n                }\r\n                // Ubah data absen dari integer menjadi String text\r\n                switch (data_absen) {\r\n                  case 5:\r\n                    data_absen = \"TK\";\r\n                    break;\r\n                  case 1:\r\n                    data_absen = \"Hadir\";\r\n                    break;\r\n                  case 2:\r\n                    data_absen = \"Izin\";\r\n                    break;\r\n                  case 3:\r\n                    data_absen = \"Sakit\";\r\n                    break;\r\n                  case 4:\r\n                    data_absen = \"Cuti\";\r\n                    break;\r\n\r\n                  default:\r\n                    data_absen = \"\";\r\n                    break;\r\n                }\r\n\r\n                return (\r\n                  <>\r\n                    <CCol\r\n                      lg=\"2\"\r\n                      md=\"3\"\r\n                      sm=\"3\"\r\n                      xs=\"6\"\r\n                      key={index}\r\n                      className=\"mb-2\"\r\n                    >\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>{item}</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput\r\n                          type=\"text\"\r\n                          name={item}\r\n                          id={item}\r\n                          readOnly\r\n                          value={data_absen}\r\n                          onClick={() =>\r\n                            setModal({\r\n                              ...modal,\r\n                              modal: !modal.modal,\r\n                              tgl: item,\r\n                              id_absensi: id_absensi,\r\n                              absen: data_absen_index,\r\n                              keterangan: data_keterangan,\r\n                            })\r\n                          }\r\n                        />\r\n                      </CInputGroup>\r\n                    </CCol>\r\n                  </>\r\n                );\r\n              })}\r\n          </CRow>\r\n        </CForm>\r\n      </div>\r\n\r\n      {/* Modal */}\r\n      <CModal\r\n        show={modal.modal}\r\n        onClose={() => setModal({ ...modal, modal: !modal.modal })}\r\n        size=\"lg\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Tambah Absensi Pegawai</CModalTitle>\r\n        </CModalHeader>\r\n\r\n        <TambahAbsen\r\n          data={{\r\n            filterMonth: filterMonth,\r\n            filterYear: filterYear,\r\n            id_pegawai: data.id_pegawai,\r\n            tgl: modal.tgl,\r\n            id_absensi: modal.id_absensi,\r\n            absen: modal.absen,\r\n            keterangan: modal.keterangan,\r\n            setDayAbsen: setDayAbsen,\r\n            setTriggerUpdateData: setTriggerUpdateData,\r\n          }}\r\n          modal={{\r\n            setModal: setModal,\r\n            modal: modal,\r\n          }}\r\n        />\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpandableComponent;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getAbsensiByPegawai = (idPegawai, setLoading, setData, values) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .get(\r\n      `admin/pegawai/${idPegawai}/absensi-params?tahun=${values.tahun}&bulan=${values.bulan}`\r\n    )\r\n    .then((res) => {\r\n      setData(res.data.data);\r\n      setLoading(false);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n"],"sourceRoot":""}