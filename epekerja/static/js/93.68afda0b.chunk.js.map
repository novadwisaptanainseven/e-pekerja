{"version":3,"sources":["views/pages/Admin/MasterData/StatusPegawai/TambahStatusPegawai.js","context/actions/StatusPegawai/insertStatusPegawai.js"],"names":["MySwal","withReactContent","swal2","TambahStatusPegawai","history","useHistory","useState","loading","setLoading","goBackToParent","goBack","showAlertSuccess","useCallback","fire","icon","title","showConfirmButton","timer","then","res","push","showAlertError","message","err_message","key","text","result","validationSchema","Yup","shape","status_pegawai","required","keterangan","handleFormSubmit","values","formData","FormData","append","entries","pair","console","log","axiosInstance","post","header","_boundary","data","catch","err","response","insertStatusPegawai","initialValues","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","xs","md","htmlFor","type","id","placeholder","name","onChange","onBlur","value","className","maxLength","color","disabled","width","src","LoadAnimationWhite","alt","onClick"],"mappings":"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","file":"static/js/93.68afda0b.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Formik } from \"formik\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\nimport { insertStatusPegawai } from \"src/context/actions/StatusPegawai/insertStatusPegawai\";\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst TambahStatusPegawai = () => {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Kembali ke menu utama\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  // Inisialisasi State Formik\r\n  const initState = {\r\n    status_pegawai: \"\",\r\n    keterangan: \"\",\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success tambah data\r\n  const showAlertSuccess = useCallback(() => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Tambah Data Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/admin/master-data/status-pegawai\");\r\n    });\r\n  }, [history]);\r\n\r\n  // Fungsi untuk menampilkan alert error tambah data\r\n  const showAlertError = useCallback(\r\n    (message) => {\r\n      let err_message = \"\";\r\n\r\n      for (const key in message) {\r\n        err_message += `${message[key]}, `;\r\n      }\r\n\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: \"Tambah Data Gagal\",\r\n        text: err_message,\r\n      }).then((result) => {\r\n        setLoading(false);\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // Setting validasi form menggunakan YUP & FORMIK\r\n  const validationSchema = Yup.object().shape({\r\n    status_pegawai: Yup.string().required(\"Status pegawai harus diisi!\"),\r\n    keterangan: Yup.string().required(\"Keterangan harus diisi\"),\r\n  });\r\n\r\n  // Handle form submit\r\n  const handleFormSubmit = (values) => {\r\n    const formData = new FormData();\r\n    formData.append(\"status_pegawai\", values.status_pegawai);\r\n    formData.append(\"keterangan\", values.keterangan);\r\n\r\n    for (var pair of formData.entries()) {\r\n      console.log(pair);\r\n    }\r\n\r\n    // Insert StatusPegawai\r\n    insertStatusPegawai(formData, setLoading, showAlertSuccess, showAlertError);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <h3>Tambah Status Pegawai</h3>\r\n        </CCardHeader>\r\n        <Formik\r\n          initialValues={initState}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleFormSubmit(values)}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol xs=\"12\" md=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"status_pegawai\">Status Pegawai</CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"status_pegawai\"\r\n                        placeholder=\"Masukkan Status Pegawai\"\r\n                        name=\"status_pegawai\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.status_pegawai}\r\n                        className={\r\n                          errors.status_pegawai && touched.status_pegawai\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                        maxLength={10}\r\n                      />\r\n                      {errors.status_pegawai && touched.status_pegawai && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.status_pegawai}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"keterangan\">Keterangan</CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"keterangan\"\r\n                        placeholder=\"Masukkan Keterangan\"\r\n                        name=\"keterangan\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.keterangan}\r\n                        className={\r\n                          errors.keterangan && touched.keterangan\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.keterangan && touched.keterangan && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.keterangan}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter>\r\n                <CButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className=\"mr-1\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  {loading ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>\r\n                <CButton type=\"button\" color=\"danger\" onClick={goBackToParent}>\r\n                  Kembali\r\n                </CButton>\r\n              </CCardFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TambahStatusPegawai;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const insertStatusPegawai = (\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(\"admin/master-data/status-pegawai\", values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError();\r\n    });\r\n};\r\n"],"sourceRoot":""}