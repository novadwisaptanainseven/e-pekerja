{
  "version": 3,
  "sources": [
    "reusable/SubHeaderComponentMemo/index.js",
    "context/actions/DataSK/deleteSK.js",
    "context/actions/DataSK/editSK.js",
    "context/actions/DataSK/getSK.js",
    "context/actions/DataSK/insertSK.js",
    "context/actions/DataSK/getSKById.js",
    "views/pages/Admin/DataSK/EditDataSK/Formik/initState.js",
    "views/pages/Admin/DataSK/EditDataSK/Formik/validationSchema.js",
    "views/pages/Admin/DataSK/EditDataSK/index.js",
    "views/pages/Admin/DataSK/TambahDataSK/Formik/initState.js",
    "views/pages/Admin/DataSK/TambahDataSK/Formik/validationSchema.js",
    "views/pages/Admin/DataSK/TambahDataSK/index.js",
    "views/pages/Admin/DataSK/index.js",
    "../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js",
    "reusable/Loading.js",
    "reusable/FilterSearchComponent/ClearButton.js",
    "reusable/FilterSearchComponent/TextField.js",
    "reusable/FilterSearchComponent/FilterComponent.js",
    "helpers/getFilename.js",
    "../node_modules/@coreui/icons/js/free/cil-pen.js",
    "context/actions/DownloadFile/getSK.js",
    "context/actions/Pegawai/SemuaPegawai/getSelectPegawai.js",
    "reusable/customStyles.js"
  ],
  "names": [
    "SubHeaderComponentMemo",
    "filterText",
    "setFilterText",
    "setResetPaginationToggle",
    "resetPaginationToggle",
    "titleTombol",
    "titleCari",
    "handleTambahButton",
    "className",
    "style",
    "width",
    "type",
    "color",
    "onClick",
    "FilterComponent",
    "onFilter",
    "e",
    "target",
    "value",
    "onClear",
    "React",
    "memo",
    "deleteSK",
    "idPegawai",
    "id",
    "dispatch",
    "axiosInstance",
    "get",
    "then",
    "res",
    "console",
    "log",
    "data",
    "getSK",
    "catch",
    "err",
    "response",
    "editSK",
    "values",
    "setLoading",
    "showAlertSuccess",
    "showAlertError",
    "post",
    "header",
    "_boundary",
    "errors",
    "LOADING",
    "SUCCESS",
    "payload",
    "ERROR",
    "message",
    "insertSK",
    "getSKById",
    "setData",
    "initState",
    "no_sk",
    "id_pegawai",
    "validationSchema",
    "Yup",
    "shape",
    "required",
    "MySwal",
    "withReactContent",
    "swal2",
    "EditDataSK",
    "modal",
    "setModal",
    "useState",
    "loadingSubmit",
    "setLoadingSubmit",
    "pegawai",
    "setPegawai",
    "touchedSelect",
    "setTouchedSelect",
    "useEffect",
    "getSelectPegawai",
    "optionsData",
    "useMemo",
    "options",
    "forEach",
    "item",
    "push",
    "label",
    "nama",
    "getDataOptions",
    "fire",
    "icon",
    "title",
    "showConfirmButton",
    "timer",
    "err_message",
    "key",
    "text",
    "result",
    "customStyles",
    "control",
    "provided",
    "state",
    "border",
    "initialValues",
    "onSubmit",
    "formData",
    "FormData",
    "append",
    "entries",
    "pair",
    "touched",
    "handleChange",
    "handleBlur",
    "handleSubmit",
    "setFieldValue",
    "styles",
    "name",
    "onChange",
    "opt",
    "onFocus",
    "placeholder",
    "isSearchable",
    "isClearable",
    "defaultValue",
    "fontSize",
    "onBlur",
    "disabled",
    "src",
    "LoadAnimationWhite",
    "alt",
    "Loading",
    "file",
    "FILE_SUPPORTED_FORMATS",
    "test",
    "size",
    "includes",
    "TambahDataSK",
    "files",
    "DataSK",
    "modalTambah",
    "setModalTambah",
    "modalEdit",
    "setModalEdit",
    "useContext",
    "GlobalContext",
    "dataSKState",
    "dataSKDispatch",
    "filteredData",
    "filter",
    "toLowerCase",
    "columns",
    "selector",
    "sortable",
    "wrap",
    "cell",
    "row",
    "href",
    "getSK",
    "rel",
    "getFilename",
    "data-tag",
    "id_riwayat_sk",
    "content",
    "cilPen",
    "handleDelete",
    "cilTrash",
    "idSK",
    "showCancelButton",
    "confirmButtonColor",
    "cancelButtonColor",
    "confirmButtonText",
    "isConfirmed",
    "noHeader",
    "responsive",
    "pagination",
    "paginationResetDefaultPage",
    "subHeader",
    "subHeaderComponent",
    "highlightOnHover",
    "show",
    "onClose",
    "closeButton",
    "_taggedTemplateLiteral",
    "strings",
    "raw",
    "slice",
    "Object",
    "freeze",
    "defineProperties",
    "LoadAnimationBlue",
    "ClearButton",
    "styled",
    "button",
    "TextField",
    "input",
    "aria-label",
    "arr",
    "split",
    "length",
    "arr_file",
    "localStorage",
    "baseURL",
    "headCells"
  ],
  "mappings": "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",
  "file": "static/js/22.46ee4eb3.chunk.js",
  "sourcesContent": [
    "import { CButton } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport FilterComponent from \"../FilterSearchComponent/FilterComponent\";\r\n\r\nconst SubHeaderComponentMemo = ({\r\n  filterText,\r\n  setFilterText,\r\n  setResetPaginationToggle,\r\n  resetPaginationToggle,\r\n  titleTombol,\r\n  titleCari,\r\n  handleTambahButton,\r\n}) => {\r\n\r\n  const handleClear = () => {\r\n    if (filterText) {\r\n      setResetPaginationToggle(!resetPaginationToggle);\r\n      setFilterText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-between\" style={{ width: \"100%\" }}>\r\n        <CButton type=\"button\" color=\"primary\" onClick={handleTambahButton}>\r\n          {titleTombol}\r\n        </CButton>\r\n        <div className=\"d-flex\">\r\n          <FilterComponent\r\n            onFilter={(e) => setFilterText(e.target.value)}\r\n            onClear={handleClear}\r\n            filterText={filterText}\r\n            titleCari={titleCari}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(SubHeaderComponentMemo);\r\n",
    "import axiosInstance from \"src/helpers/axios\";\r\nimport { getSK } from \".\";\r\n\r\nconst deleteSK = (idPegawai, id, dispatch) => {\r\n  axiosInstance\r\n    .get(`admin/pegawai/${idPegawai}/pembaruan-sk/${id}/delete`)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      getSK(dispatch);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n\r\nexport default deleteSK;\r\n",
    "import axiosInstance from \"src/helpers/axios\";\r\nimport { getSK } from \".\";\r\n\r\nconst editSK = (\r\n  id,\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError,\r\n  dispatch\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(`admin/pegawai/sk/${id}`, values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n      getSK(dispatch);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n\r\nexport default editSK;\r\n",
    "import { ERROR, LOADING, SUCCESS } from \"src/context/actionTypes\";\r\nimport axiosInstance from \"src/helpers/axios\";\r\n\r\nconst getSK = (dispatch) => {\r\n  dispatch({\r\n    type: LOADING,\r\n  });\r\n\r\n  axiosInstance\r\n    .get(\"admin/pegawai/sk\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ERROR,\r\n        payload: err.response.data.message,\r\n      });\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n\r\nexport default getSK;\r\n",
    "import axiosInstance from \"src/helpers/axios\";\r\nimport { getSK } from \".\";\r\n\r\nconst insertSK = (\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError,\r\n  dispatch\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(\"admin/pegawai/upload-sk\", values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n      getSK(dispatch);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n\r\nexport default insertSK;\r\n",
    "import axiosInstance from \"src/helpers/axios\";\r\n\r\nconst getSKById = (id, setData) => {\r\n  axiosInstance\r\n    .get(`admin/pegawai/sk/${id}`)\r\n    .then((res) => {\r\n      setData(res.data.data);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n\r\nexport default getSKById;\r\n",
    "const initState = (data = \"\") => ({\r\n  no_sk: data ? data.no_sk : \"\",\r\n  id_pegawai: data ? data.id_pegawai : \"\",\r\n});\r\n\r\nexport default initState;\r\n",
    "import * as Yup from \"yup\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  no_sk: Yup.string().required(\"No. SK harus diisi\"),\r\n  id_pegawai: Yup.string().required(\"Penerima harus diisi\"),\r\n});\r\n\r\nexport default validationSchema;\r\n",
    "import {\r\n  CButton,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CModalBody,\r\n  CModalFooter,\r\n} from \"@coreui/react\";\r\nimport { Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\nimport { getSKById, editSK } from \"src/context/actions/DataSK\";\r\nimport { getSelectPegawai } from \"src/context/actions/Pegawai/SemuaPegawai/getSelectPegawai\";\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport initState from \"./Formik/initState\";\r\nimport validationSchema from \"./Formik/validationSchema\";\r\nimport Loading from \"src/reusable/Loading\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst EditDataSK = ({ modal, setModal, dispatch }) => {\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [pegawai, setPegawai] = useState([]);\r\n  const [data, setData] = useState(\"\");\r\n  const [touchedSelect, setTouchedSelect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (modal.id) {\r\n      // Get Select Pegawai\r\n      getSelectPegawai(setPegawai);\r\n\r\n      // Get SK Pegawai By ID\r\n      getSKById(modal.id, setData);\r\n\r\n      return () => {\r\n        setData(\"\");\r\n        setTouchedSelect(false);\r\n      };\r\n    }\r\n  }, [modal]);\r\n\r\n  const getDataOptions = (pegawai) => {\r\n    let options = [];\r\n\r\n    pegawai.forEach((item) => {\r\n      options.push({\r\n        value: item.id_pegawai,\r\n        label: item.nama,\r\n      });\r\n    });\r\n    return options;\r\n  };\r\n  const optionsData = React.useMemo(() => getDataOptions(pegawai), [pegawai]);\r\n\r\n  // Fungsi untuk menampilkan alert success Edit Data\r\n  const showAlertSuccess = () => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Edit Data Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      setModal(!modal);\r\n      // history.push(`/epekerja/admin/pegawai-detail/${id}`);\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert error edit data\r\n  const showAlertError = (message) => {\r\n    let err_message = \"\";\r\n\r\n    for (const key in message) {\r\n      err_message += `${message[key]}, `;\r\n    }\r\n\r\n    MySwal.fire({\r\n      icon: \"error\",\r\n      title: \"Edit Data Gagal\",\r\n      text: err_message,\r\n    }).then((result) => {\r\n      setLoadingSubmit(false);\r\n    });\r\n  };\r\n\r\n  // Menangani value dari form submit\r\n  const handleFormSubmit = (values) => {\r\n    const formData = new FormData();\r\n    formData.append(\"id_pegawai\", values.id_pegawai);\r\n    formData.append(\"no_sk\", values.no_sk);\r\n\r\n    for (var pair of formData.entries()) {\r\n      console.log(pair);\r\n    }\r\n\r\n    editSK(\r\n      modal.id,\r\n      formData,\r\n      setLoadingSubmit,\r\n      showAlertSuccess,\r\n      showAlertError,\r\n      dispatch\r\n    );\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (provided, state) => ({\r\n      // none of react-select's styles are passed to <Control />\r\n      ...provided,\r\n      border: !touchedSelect ? provided.border : \"1px solid #e55353\",\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!data ? (\r\n        <Loading />\r\n      ) : (\r\n        <Formik\r\n          initialValues={initState(data)}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleFormSubmit}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            setFieldValue,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit} className=\"form-horizontal\">\r\n              <CModalBody>\r\n                <CFormGroup>\r\n                  <CLabel>Pegawai</CLabel>\r\n                  <Select\r\n                    styles={customStyles}\r\n                    name=\"id_pegawai\"\r\n                    onChange={(opt) => {\r\n                      setTouchedSelect(false);\r\n                      setFieldValue(\"id_pegawai\", opt ? opt.value : \"\");\r\n                    }}\r\n                    onFocus={() =>\r\n                      !values.id_pegawai\r\n                        ? setTouchedSelect(true)\r\n                        : setTouchedSelect(false)\r\n                    }\r\n                    placeholder=\"-- Pilih Pegawai --\"\r\n                    isSearchable\r\n                    isClearable\r\n                    options={optionsData}\r\n                    defaultValue={{\r\n                      value: data ? data.id_pegawai : \"\",\r\n                      label: data ? data.nama : \"\",\r\n                    }}\r\n                  />\r\n                  {!values.id_pegawai && touchedSelect && (\r\n                    <div\r\n                      className=\"text-danger mt-1\"\r\n                      style={{ fontSize: \"0.8em\" }}\r\n                    >\r\n                      Nama penerima harus diisi\r\n                    </div>\r\n                  )}\r\n                </CFormGroup>\r\n                <CFormGroup>\r\n                  <CLabel>No. SK</CLabel>\r\n                  <CInput\r\n                    type=\"text\"\r\n                    name=\"no_sk\"\r\n                    placeholder=\"Masukkan No. SK\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.no_sk}\r\n                    className={\r\n                      errors.no_sk && touched.no_sk ? \"is-invalid\" : null\r\n                    }\r\n                  />\r\n                  {errors.no_sk && touched.no_sk && (\r\n                    <div className=\"invalid-feedback\">{errors.no_sk}</div>\r\n                  )}\r\n                </CFormGroup>\r\n              </CModalBody>\r\n              <CModalFooter>\r\n                <CButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  disabled={loadingSubmit ? true : false}\r\n                  onClick={() => {\r\n                    !values.id_pegawai\r\n                      ? setTouchedSelect(true)\r\n                      : setTouchedSelect(false);\r\n                  }}\r\n                >\r\n                  {loadingSubmit ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>{\" \"}\r\n                <CButton\r\n                  type=\"button\"\r\n                  color=\"secondary\"\r\n                  onClick={() => setModal(!modal)}\r\n                >\r\n                  Batal\r\n                </CButton>\r\n              </CModalFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditDataSK;\r\n",
    "const initState = {\r\n  no_sk: \"\",\r\n  id_pegawai: \"\",\r\n  file: \"\",\r\n};\r\n\r\nexport default initState;\r\n",
    "import * as Yup from \"yup\";\r\n\r\nconst FILE_SIZE = 2048000; // Bytes => 2 mb x 1000 kb x 1000 bytes\r\nconst FILE_SUPPORTED_FORMATS = [\r\n  \"application/msword\",\r\n  \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n  \"application/pdf\",\r\n];\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  no_sk: Yup.string().required(\"No. SK harus diisi\"),\r\n  id_pegawai: Yup.string().required(\"Penerima harus diisi\"),\r\n  file: Yup.mixed()\r\n    .required(\"File SK harus diisi\")\r\n    .test(\"size\", \"Kapasitas file maksimal 2 mb\", (value) => {\r\n      if (value) {\r\n        return value && value.size <= FILE_SIZE;\r\n      }\r\n      return true;\r\n    })\r\n    .test(\r\n      \"type\",\r\n      \"Eksistensi yang diperbolehkan hanya PDF, DOC, dan DOCX\",\r\n      (value) => {\r\n        if (value) {\r\n          return value && FILE_SUPPORTED_FORMATS.includes(value.type);\r\n        }\r\n        return true;\r\n      }\r\n    ),\r\n});\r\n\r\nexport default validationSchema;\r\n",
    "import {\r\n  CButton, CForm, CFormGroup, CFormText, CInput, CLabel, CModalBody, CModalFooter\r\n} from \"@coreui/react\";\r\nimport { Formik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\nimport { insertSK } from \"src/context/actions/DataSK\";\r\nimport { getSelectPegawai } from \"src/context/actions/Pegawai/SemuaPegawai/getSelectPegawai\";\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport initState from \"./Formik/initState\";\r\nimport validationSchema from \"./Formik/validationSchema\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst TambahDataSK = ({ modal, setModal, dispatch }) => {\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [pegawai, setPegawai] = useState([]);\r\n  const [touchedSelect, setTouchedSelect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Get Select Pegawai\r\n    getSelectPegawai(setPegawai);\r\n  }, []);\r\n\r\n  const getDataOptions = (pegawai) => {\r\n    let options = [];\r\n\r\n    pegawai.forEach((item) => {\r\n      options.push({\r\n        value: item.id_pegawai,\r\n        label: item.nama,\r\n      });\r\n    });\r\n    return options;\r\n  };\r\n  const optionsData = React.useMemo(() => getDataOptions(pegawai), [pegawai]);\r\n\r\n  // Fungsi untuk menampilkan alert success tambah data\r\n  const showAlertSuccess = () => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Upload SK Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      setModal(!modal);\r\n      // history.push(`/epekerja/admin/pegawai-detail/${id}`);\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert error tambah data\r\n  const showAlertError = (message) => {\r\n    let err_message = \"\";\r\n\r\n    for (const key in message) {\r\n      err_message += `${message[key]}, `;\r\n    }\r\n\r\n    MySwal.fire({\r\n      icon: \"error\",\r\n      title: \"Upload SK Gagal\",\r\n      text: err_message,\r\n    }).then((result) => {\r\n      setLoadingSubmit(false);\r\n    });\r\n  };\r\n\r\n  // Menangani value dari form submit\r\n  const handleFormSubmit = (values) => {\r\n    const formData = new FormData();\r\n    formData.append(\"id_pegawai\", values.id_pegawai);\r\n    formData.append(\"no_sk\", values.no_sk);\r\n    formData.append(\"file\", values.file);\r\n\r\n    for (var pair of formData.entries()) {\r\n      console.log(pair);\r\n    }\r\n\r\n    insertSK(\r\n      formData,\r\n      setLoadingSubmit,\r\n      showAlertSuccess,\r\n      showAlertError,\r\n      dispatch\r\n    );\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (provided, state) => ({\r\n      // none of react-select's styles are passed to <Control />\r\n      ...provided,\r\n      border: !touchedSelect ? provided.border : \"1px solid #e55353\",\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initState}\r\n        validationSchema={validationSchema}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          setFieldValue,\r\n        }) => (\r\n          <CForm onSubmit={handleSubmit} className=\"form-horizontal\">\r\n            <CModalBody>\r\n              <CFormGroup>\r\n                <CLabel>Pegawai</CLabel>\r\n                <Select\r\n                  styles={customStyles}\r\n                  name=\"id_pegawai\"\r\n                  onChange={(opt) => {\r\n                    setTouchedSelect(false);\r\n                    setFieldValue(\"id_pegawai\", opt ? opt.value : \"\");\r\n                  }}\r\n                  onFocus={() =>\r\n                    !values.id_pegawai\r\n                      ? setTouchedSelect(true)\r\n                      : setTouchedSelect(false)\r\n                  }\r\n                  placeholder=\"-- Pilih Pegawai --\"\r\n                  isSearchable\r\n                  isClearable\r\n                  options={optionsData}\r\n                />\r\n                {!values.id_pegawai && touchedSelect && (\r\n                  <div\r\n                    className=\"text-danger mt-1\"\r\n                    style={{ fontSize: \"0.8em\" }}\r\n                  >\r\n                    Nama penerima harus diisi\r\n                  </div>\r\n                )}\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel>No. SK</CLabel>\r\n                <CInput\r\n                  type=\"text\"\r\n                  name=\"no_sk\"\r\n                  placeholder=\"Masukkan No. SK\"\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.no_sk}\r\n                  className={\r\n                    errors.no_sk && touched.no_sk ? \"is-invalid\" : null\r\n                  }\r\n                />\r\n                {errors.no_sk && touched.no_sk && (\r\n                  <div className=\"invalid-feedback\">{errors.no_sk}</div>\r\n                )}\r\n              </CFormGroup>\r\n              <CFormGroup>\r\n                <CLabel>File SK</CLabel>\r\n\r\n                <CInput\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  placeholder=\"Masukkan file SK\"\r\n                  onChange={(e) => setFieldValue(\"file\", e.target.files[0])}\r\n                  onBlur={handleBlur}\r\n                  className={errors.file && touched.file ? \"is-invalid\" : null}\r\n                />\r\n                {errors.file && touched.file && (\r\n                  <div className=\"invalid-feedback\">{errors.file}</div>\r\n                )}\r\n                <CFormText>File SK harus berekstensi PDF, DOC, DOCX</CFormText>\r\n              </CFormGroup>\r\n            </CModalBody>\r\n            <CModalFooter>\r\n              <CButton\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                disabled={loadingSubmit ? true : false}\r\n                onClick={() => {\r\n                  !values.id_pegawai\r\n                    ? setTouchedSelect(true)\r\n                    : setTouchedSelect(false);\r\n                }}\r\n              >\r\n                {loadingSubmit ? (\r\n                  <img\r\n                    width={21}\r\n                    src={LoadAnimationWhite}\r\n                    alt=\"load-animation\"\r\n                  />\r\n                ) : (\r\n                  \"Simpan\"\r\n                )}\r\n              </CButton>{\" \"}\r\n              <CButton\r\n                type=\"button\"\r\n                color=\"secondary\"\r\n                onClick={() => setModal(!modal)}\r\n              >\r\n                Batal\r\n              </CButton>\r\n            </CModalFooter>\r\n          </CForm>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TambahDataSK;\r\n",
    "import { cilPen, cilTrash } from \"@coreui/icons\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport {\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CModal,\r\n  CModalHeader,\r\n  CModalTitle,\r\n} from \"@coreui/react\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport customStyles from \"src/reusable/customStyles\";\r\nimport SubHeaderComponentMemo from \"src/reusable/SubHeaderComponentMemo\";\r\nimport EditDataSK from \"./EditDataSK\";\r\nimport TambahDataSK from \"./TambahDataSK\";\r\nimport { GlobalContext } from \"src/context/Provider\";\r\nimport { deleteSK, getSK } from \"src/context/actions/DataSK\";\r\nimport Loading from \"src/reusable/Loading\";\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport getFilename from \"src/helpers/getFilename\";\r\nimport getSK from \"src/context/actions/DownloadFile/getSK\";\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst DataSK = () => {\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  const [modalTambah, setModalTambah] = useState(false);\r\n  const [modalEdit, setModalEdit] = useState({\r\n    modal: false,\r\n    id: null,\r\n  });\r\n\r\n  const { dataSKState, dataSKDispatch } = useContext(GlobalContext);\r\n  const { data } = dataSKState;\r\n\r\n  useEffect(() => {\r\n    getSK(dataSKDispatch);\r\n  }, [dataSKDispatch]);\r\n\r\n  const filteredData = !data\r\n    ? []\r\n    : data.filter((item) => {\r\n        if (\r\n          item.nama.toLowerCase().includes(filterText.toLowerCase()) ||\r\n          item.no_sk.toLowerCase().includes(filterText.toLowerCase())\r\n        ) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n  const columns = [\r\n    {\r\n      name: \"No\",\r\n      selector: \"no\",\r\n      sortable: true,\r\n      width: \"80px\",\r\n    },\r\n    {\r\n      name: \"No. SK\",\r\n      selector: \"no_sk\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Pegawai\",\r\n      selector: \"nama\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      width: \"95px\",\r\n      selector: \"status_pegawai\",\r\n      sortable: true,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"File SK\",\r\n      selector: \"file\",\r\n      sortable: true,\r\n      wrap: true,\r\n      cell: (row) => (\r\n        <div>\r\n          <a\r\n            href={row.file ? getSK(row.file) : \".\"}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            {row.file ? getFilename(row.file) : \"File SK Belum Ada\"}\r\n          </a>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      wrap: true,\r\n      cell: (row) => (\r\n        <div data-tag=\"allowRowEvents\" className=\"my-1\">\r\n          <CButtonGroup className=\"mb-1\">\r\n            <CButton\r\n              color=\"info\"\r\n              className=\"btn btn-sm\"\r\n              onClick={() =>\r\n                setModalEdit({\r\n                  ...modalEdit,\r\n                  modal: true,\r\n                  id: row.id_riwayat_sk,\r\n                })\r\n              }\r\n            >\r\n              <CIcon content={cilPen} color=\"white\" />\r\n            </CButton>\r\n            <CButton\r\n              color=\"danger\"\r\n              className=\"btn btn-sm\"\r\n              onClick={() => handleDelete(row.id_pegawai, row.id_riwayat_sk)}\r\n            >\r\n              <CIcon content={cilTrash} color=\"danger\" />\r\n            </CButton>\r\n          </CButtonGroup>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // hapus data\r\n  const handleDelete = (idPegawai, idSK) => {\r\n    MySwal.fire({\r\n      icon: \"warning\",\r\n      title: \"Anda yakin ingin menghapus data ini ?\",\r\n      text: \"Jika yakin, klik YA\",\r\n      showConfirmButton: true,\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"YA\",\r\n    }).then((res) => {\r\n      if (res.isConfirmed) {\r\n        // Delete pesan\r\n        deleteSK(idPegawai, idSK, dataSKDispatch);\r\n        MySwal.fire({\r\n          icon: \"success\",\r\n          title: \"Terhapus\",\r\n          text: \"Data berhasil dihapus\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  // Handle Modal Upload\r\n  const handleTambahButton = () => {\r\n    setModalTambah(!modalTambah);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <h3>Data SK</h3>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          {!data ? (\r\n            <>\r\n              <Loading />\r\n            </>\r\n          ) : (\r\n            <DataTable\r\n              columns={columns}\r\n              data={filteredData}\r\n              noHeader\r\n              responsive={true}\r\n              customStyles={customStyles}\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle}\r\n              subHeader\r\n              subHeaderComponent={\r\n                <SubHeaderComponentMemo\r\n                  handleTambahButton={handleTambahButton}\r\n                  titleTombol=\"Upload SK\"\r\n                  titleCari=\"Cari SK\"\r\n                  filterText={filterText}\r\n                  setFilterText={setFilterText}\r\n                  resetPaginationToggle={resetPaginationToggle}\r\n                  setResetPaginationToggle={setResetPaginationToggle}\r\n                />\r\n              }\r\n              highlightOnHover\r\n            />\r\n          )}\r\n        </CCardBody>\r\n      </CCard>\r\n\r\n      {/* Modal Tambah */}\r\n      <CModal show={modalTambah} onClose={() => setModalTambah(!modalTambah)}>\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Upload SK</CModalTitle>\r\n        </CModalHeader>\r\n        <TambahDataSK\r\n          modal={modalTambah}\r\n          setModal={setModalTambah}\r\n          dispatch={dataSKDispatch}\r\n        />\r\n      </CModal>\r\n\r\n      {/* Modal Edit */}\r\n      <CModal\r\n        show={modalEdit.modal}\r\n        onClose={() =>\r\n          setModalEdit({ ...modalEdit, modal: !modalEdit.modal, id: null })\r\n        }\r\n      >\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Edit SK</CModalTitle>\r\n        </CModalHeader>\r\n        <EditDataSK\r\n          modal={modalEdit}\r\n          setModal={setModalEdit}\r\n          dispatch={dataSKDispatch}\r\n        />\r\n      </CModal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataSK;\r\n",
    "export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}",
    "import { CCol, CRow } from \"@coreui/react\";\r\nimport React from \"react\";\r\nimport { LoadAnimationBlue } from \"src/assets\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <CRow className=\"mb-3\">\r\n      <CCol className=\"text-center\">\r\n        <img\r\n          className=\"mt-4 ml-3\"\r\n          width={30}\r\n          src={LoadAnimationBlue}\r\n          alt=\"load-animation\"\r\n        />\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n",
    "import styled from \"styled-components\";\r\n\r\nconst ClearButton = styled.button`\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  height: 37px;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #3e5973;\r\n  border: none;\r\n  color: white;\r\n  padding: 0 10px;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #283c4f;\r\n  }\r\n`;\r\n\r\nexport default ClearButton;",
    "import styled from \"styled-components\";\r\n\r\nconst TextField = styled.input`\r\n  height: 37px;\r\n  width: 200px;\r\n  border-radius: 3px;\r\n  border-top-left-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  border: 1px solid #e5e5e5;\r\n  padding: 0 32px 0 16px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport default TextField;\r\n",
    "import React from \"react\";\r\nimport ClearButton from \"./ClearButton\";\r\nimport TextField from \"./TextField\";\r\n\r\nconst FilterComponent = ({\r\n  filterText,\r\n  onFilter,\r\n  onClear,\r\n  titleCari = \"Pencarian...\",\r\n}) => (\r\n  <>\r\n    <TextField\r\n      id=\"search\"\r\n      type=\"text\"\r\n      placeholder={titleCari}\r\n      aria-label=\"Search Input\"\r\n      value={filterText}\r\n      onChange={onFilter}\r\n    />\r\n    <ClearButton type=\"button\" onClick={onClear}>\r\n      Reset\r\n    </ClearButton>\r\n  </>\r\n);\r\n\r\nexport default FilterComponent;\r\n",
    "const getFilename = (value) => {\r\n  const arr = value.split(\"/\");\r\n  const arr_name = arr[arr.length - 1];\r\n\r\n  return arr_name;\r\n};\r\n\r\nexport default getFilename;\r\n",
    "export const cilPen = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M345.994,42.019,179.531,208.481A646.3,646.3,0,0,0,25.325,456.521a24.845,24.845,0,0,0,6,25.708l.087.087a24.84,24.84,0,0,0,17.611,7.342,25.172,25.172,0,0,0,8.1-1.344,646.283,646.283,0,0,0,248.04-154.207L471.62,167.646A88.831,88.831,0,0,0,345.994,42.019ZM282.531,311.48A614.445,614.445,0,0,1,60.419,453.221,614.435,614.435,0,0,1,202.158,231.108l99.162-99.161,80.372,80.372ZM448.993,145.019l-44.674,44.673L323.947,109.32l44.674-44.674a56.832,56.832,0,1,1,80.372,80.373Z' class='ci-primary'/>\"]",
    "const getSK = (file) => {\r\n  let arr_file = file.split(\"/\");\r\n  let name = arr_file[arr_file.length - 1];\r\n\r\n  return `${localStorage.baseURL}sk/${name}`;\r\n};\r\n\r\nexport default getSK;\r\n",
    "import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getSelectPegawai = (setData) => {\r\n  axiosInstance\r\n    .get(\"admin/pegawai/semua-pegawai\")\r\n    .then((res) => {\r\n      setData(res.data.data);\r\n      // console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      // console.log(err.response.data);\r\n    });\r\n};\r\n",
    "const customStyles = {\r\n  headCells: {\r\n    style: {\r\n      fontSize: \"1.15em\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default customStyles;\r\n"
  ],
  "sourceRoot": ""
}
