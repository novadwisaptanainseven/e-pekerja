{"version":3,"sources":["views/pages/Admin/MasterData/Agama/TambahAgama.js","context/actions/MasterData/Agama/insertAgama.js"],"names":["MySwal","withReactContent","swal2","TambahAgama","history","useHistory","useState","loading","setLoading","goBackToParent","goBack","showAlertSuccess","useCallback","fire","icon","title","showConfirmButton","timer","then","res","push","showAlertError","message","err_message","key","text","result","validationSchema","Yup","shape","agama","required","handleFormSubmit","values","formData","FormData","append","entries","pair","console","log","axiosInstance","post","header","_boundary","data","catch","err","response","errors","insertAgama","initialValues","onSubmit","touched","handleChange","handleBlur","handleSubmit","xs","md","htmlFor","type","id","placeholder","name","onChange","onBlur","value","className","color","disabled","width","src","LoadAnimationWhite","alt","onClick"],"mappings":"iTAsBMA,EAASC,IAAiBC,KA2IjBC,UAzIK,WAClB,IAAMC,EAAUC,cADQ,EAEMC,oBAAS,GAFf,mBAEjBC,EAFiB,KAERC,EAFQ,KAKlBC,EAAiB,WACrBL,EAAQM,UASJC,EAAmBC,uBAAY,WACnCZ,EAAOa,KAAK,CACVC,KAAM,UACNC,MAAO,uBACPC,mBAAmB,EACnBC,MAAO,OACNC,MAAK,SAACC,GACPf,EAAQgB,KAAK,0CAEd,CAAChB,IAGEiB,EAAiBT,uBACrB,SAACU,GACC,IAAIC,EAAc,GAElB,IAAK,IAAMC,KAAOF,EAChBC,GAAW,UAAOD,EAAQE,GAAf,MAGbxB,EAAOa,KAAK,CACVC,KAAM,QACNC,MAAO,oBACPU,KAAMF,IACLL,MAAK,SAACQ,GACPlB,GAAW,QAGf,IAIImB,EAAmBC,MAAaC,MAAM,CAC1CC,MAAOF,MAAaG,SAAS,wBAIzBC,EAAmB,SAACC,GACxB,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAASH,EAAOH,OAFG,oBAIlBI,EAASG,WAJS,IAInC,2BAAqC,CAAC,IAA7BC,EAA4B,QACnCC,QAAQC,IAAIF,IALqB,+BC1EZ,SACzBL,EACAzB,EACAG,EACAU,GAEAb,GAAW,GAEXiC,IACGC,KAAK,0BAA2BT,EAAQ,CACvCU,OAAQ,CACN,eAAe,iCAAf,OAAiDV,EAAOW,cAG3D1B,MAAK,SAACC,GACLoB,QAAQC,IAAIrB,EAAI0B,MAChBrC,GAAW,GACXG,OAEDmC,OAAM,SAACC,GACNR,QAAQC,IAAIO,EAAIC,SAASH,MACzBxB,EAAe0B,EAAIC,SAASH,KAAKI,WD8DnCC,CAAYhB,EAAU1B,EAAYG,EAAkBU,IAGtD,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,gDAEF,cAAC,IAAD,CACE8B,cA7DU,CAChBrB,MAAO,IA6DDH,iBAAkBA,EAClByB,SAAU,SAACnB,GAAD,OAAYD,EAAiBC,IAHzC,SAKG,gBACCA,EADD,EACCA,OACAgB,EAFD,EAECA,OACAI,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aAND,OAQC,eAAC,IAAD,CAAOJ,SAAUI,EAAjB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,IAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQC,QAAQ,QAAhB,mBACA,cAAC,IAAD,CACEC,KAAK,OACLC,GAAG,QACHC,YAAY,iBACZC,KAAK,QACLC,SAAUV,EACVW,OAAQV,EACRW,MAAOjC,EAAOH,MACdqC,UACElB,EAAOnB,OAASuB,EAAQvB,MAAQ,aAAe,OAGlDmB,EAAOnB,OAASuB,EAAQvB,OACvB,qBAAKqC,UAAU,mBAAf,SAAmClB,EAAOnB,iBAMpD,eAAC,IAAD,WACE,cAAC,IAAD,CACE8B,KAAK,SACLQ,MAAM,UACND,UAAU,OACVE,WAAU9D,EAJZ,SAMGA,EACC,qBACE+D,MAAO,GACPC,IAAKC,IACLC,IAAI,mBAGN,WAGJ,cAAC,IAAD,CAASb,KAAK,SAASQ,MAAM,SAASM,QAASjE,EAA/C","file":"static/js/87.f0fd3819.chunk.js","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CButton,\r\n  CForm,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\nimport { insertAgama } from \"src/context/actions/MasterData/Agama/insertAgama\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst TambahAgama = () => {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Kembali ke menu Agama\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  // Inisialisasi State Formik\r\n  const initState = {\r\n    agama: \"\",\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success tambah data\r\n  const showAlertSuccess = useCallback(() => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Tambah Data Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/admin/master-data/agama\");\r\n    });\r\n  }, [history]);\r\n\r\n  // Fungsi untuk menampilkan alert error tambah data\r\n  const showAlertError = useCallback(\r\n    (message) => {\r\n      let err_message = \"\";\r\n\r\n      for (const key in message) {\r\n        err_message += `${message[key]}, `;\r\n      }\r\n\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: \"Tambah Data Gagal\",\r\n        text: err_message,\r\n      }).then((result) => {\r\n        setLoading(false);\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // Setting validasi form menggunakan YUP & FORMIK\r\n  const validationSchema = Yup.object().shape({\r\n    agama: Yup.string().required(\"Agama harus diisi!\"),\r\n  });\r\n\r\n  // Handle form submit\r\n  const handleFormSubmit = (values) => {\r\n    const formData = new FormData();\r\n    formData.append(\"agama\", values.agama);\r\n\r\n    for (var pair of formData.entries()) {\r\n      console.log(pair);\r\n    }\r\n\r\n    // Insert Agama\r\n    insertAgama(formData, setLoading, showAlertSuccess, showAlertError);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <h3>Tambah Agama</h3>\r\n        </CCardHeader>\r\n        <Formik\r\n          initialValues={initState}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleFormSubmit(values)}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol xs=\"12\" md=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"agama\">Agama</CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"agama\"\r\n                        placeholder=\"Masukkan agama\"\r\n                        name=\"agama\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.agama}\r\n                        className={\r\n                          errors.agama && touched.agama ? \"is-invalid\" : null\r\n                        }\r\n                      />\r\n                      {errors.agama && touched.agama && (\r\n                        <div className=\"invalid-feedback\">{errors.agama}</div>\r\n                      )}\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter>\r\n                <CButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className=\"mr-1\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  {loading ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>\r\n                <CButton type=\"button\" color=\"danger\" onClick={goBackToParent}>\r\n                  Kembali\r\n                </CButton>\r\n              </CCardFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TambahAgama;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const insertAgama = (\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(\"admin/master-data/agama\", values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n"],"sourceRoot":""}