{"version":3,"sources":["views/pages/User/Akun/EditPassword.js","context/actions/UserPage/Akun/editPassword.js"],"names":["MySwal","withReactContent","swal2","EditPassword","match","history","useHistory","useState","loading","setLoading","showAlertSuccess","fire","icon","title","showConfirmButton","timer","then","res","push","showAlertError","message","err_message","key","text","result","validationSchema","Yup","shape","password_lama","required","password_baru","oneOf","konfirmasi_password","handleFormSubmit","values","axiosInstance","put","console","log","data","catch","err","response","errors","editPassword","className","color","onClick","goBack","initialValues","enableReinitialize","onSubmit","touched","handleChange","handleBlur","handleSubmit","setFieldValue","md","row","type","name","id","placeholder","onChange","onBlur","value","disabled","width","src","LoadAnimationWhite","alt"],"mappings":"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","file":"static/js/96.4919a4a7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CCardFooter,\r\n  CForm,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\nimport { editPassword } from \"src/context/actions/UserPage/Akun/editPassword\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst EditPassword = ({ match }) => {\r\n  // const params = match.params;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const initState = {\r\n    password_lama: \"\",\r\n    password_baru: \"\",\r\n    konfirmasi_password: \"\",\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success edit data\r\n  const showAlertSuccess = () => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Edit Password Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/user/akun\");\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert error edit data\r\n  const showAlertError = (message) => {\r\n    let err_message = \"\";\r\n\r\n    for (const key in message) {\r\n      err_message += `${message[key]}, `;\r\n    }\r\n\r\n    MySwal.fire({\r\n      icon: \"error\",\r\n      title: \"Edit Password Gagal\",\r\n      text: err_message,\r\n    }).then((result) => {\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    password_lama: Yup.string().required(\"Password lama harus diisi\"),\r\n    password_baru: Yup.string().oneOf(\r\n      [Yup.ref(\"konfirmasi_password\"), null],\r\n      \"Konfirmasi password tidak sesuai\"\r\n    ),\r\n    konfirmasi_password: Yup.string().oneOf(\r\n      [Yup.ref(\"password_baru\"), null],\r\n      \"Konfirmasi password tidak sesuai\"\r\n    ),\r\n  });\r\n\r\n  // Menangani value dari form submit\r\n  const handleFormSubmit = (values) => {\r\n    editPassword(values, setLoading, showAlertSuccess, showAlertError);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CCard>\r\n        <CCardHeader className=\"d-flex justify-content-between\">\r\n          <h3>Edit Password</h3>\r\n          <CButton\r\n            color=\"warning\"\r\n            className=\"text-white\"\r\n            onClick={goBackToParent}\r\n          >\r\n            Kembali\r\n          </CButton>\r\n        </CCardHeader>\r\n        <Formik\r\n          initialValues={initState}\r\n          enableReinitialize={true}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleFormSubmit(values)}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            setFieldValue,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol md=\"7\">\r\n                    <CFormGroup row>\r\n                      <CCol md=\"4\">\r\n                        <CLabel>Password lama</CLabel>\r\n                      </CCol>\r\n                      <CCol>\r\n                        <CInput\r\n                          type=\"password\"\r\n                          name=\"password_lama\"\r\n                          id=\"password_lama\"\r\n                          placeholder=\"Masukkan password lama\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          value={values.password_lama}\r\n                          className={\r\n                            errors.password_lama && touched.password_lama\r\n                              ? \"is-invalid\"\r\n                              : null\r\n                          }\r\n                        />\r\n                        {errors.password_lama && touched.password_lama && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.password_lama}\r\n                          </div>\r\n                        )}\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"4\">\r\n                        <CLabel>Password Baru</CLabel>\r\n                      </CCol>\r\n                      <CCol>\r\n                        <CInput\r\n                          type=\"password\"\r\n                          name=\"password_baru\"\r\n                          id=\"password_baru\"\r\n                          placeholder=\"Masukkan password baru\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          value={values.password_baru}\r\n                          className={\r\n                            errors.password_baru && touched.password_baru\r\n                              ? \"is-invalid\"\r\n                              : null\r\n                          }\r\n                        />\r\n                        {errors.password_baru && touched.password_baru && (\r\n                          <div className=\"invalid-feedback\">\r\n                            {errors.password_baru}\r\n                          </div>\r\n                        )}\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                    <CFormGroup row>\r\n                      <CCol md=\"4\">\r\n                        <CLabel>Konfirmasi Password</CLabel>\r\n                      </CCol>\r\n                      <CCol>\r\n                        <CInput\r\n                          type=\"password\"\r\n                          name=\"konfirmasi_password\"\r\n                          id=\"konfirmasi_password\"\r\n                          placeholder=\"Masukkan konfirmasi password\"\r\n                          onChange={handleChange}\r\n                          onBlur={handleBlur}\r\n                          value={values.konfirmasi_password}\r\n                          className={\r\n                            errors.konfirmasi_password &&\r\n                            touched.konfirmasi_password\r\n                              ? \"is-invalid\"\r\n                              : null\r\n                          }\r\n                        />\r\n                        {errors.konfirmasi_password &&\r\n                          touched.konfirmasi_password && (\r\n                            <div className=\"invalid-feedback\">\r\n                              {errors.konfirmasi_password}\r\n                            </div>\r\n                          )}\r\n                      </CCol>\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  {loading ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>\r\n              </CCardFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      </CCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPassword;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const editPassword = (\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .put(`user/akun-password`, values)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n"],"sourceRoot":""}