{"version":3,"sources":["views/pages/Admin/MasterData/SubBidang/TambahSubBidang.js","context/actions/MasterData/SubBidang/insertSubBidang.js","context/actions/MasterData/Bidang/getSelectBidang.js"],"names":["MySwal","withReactContent","swal2","TambahSubBidang","match","history","useHistory","useState","loading","setLoading","bidang","setBidang","useEffect","getSelectBidang","goBackToParent","goBack","showAlertSuccess","fire","icon","title","showConfirmButton","timer","then","res","push","showAlertError","message","err_message","key","text","result","validationSchema","Yup","shape","id_bidang","required","nama_sub_bidang","keterangan","handleFormSubmit","values","formData","FormData","append","entries","pair","console","log","axiosInstance","post","header","_boundary","catch","err","response","data","errors","insertSubBidang","initialValues","onSubmit","touched","handleChange","handleBlur","handleSubmit","xs","md","custom","name","id","onChange","onBlur","value","className","length","map","item","index","nama_bidang","htmlFor","placeholder","type","color","disabled","width","src","LoadAnimationWhite","alt","onClick","get"],"mappings":"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","file":"static/js/70.0e1d6f89.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\n\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CButton,\r\n  CForm,\r\n  CSelect,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getSelectBidang } from \"src/context/actions/MasterData/Bidang/getSelectBidang\";\r\nimport { insertSubBidang } from \"src/context/actions/MasterData/SubBidang/insertSubBidang\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst TambahSubBidang = ({ match }) => {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [bidang, setBidang] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Get bidang\r\n    getSelectBidang(setBidang);\r\n  }, []);\r\n\r\n  // Kembali ke menu agama\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  // Inisialisasi state formik\r\n  const initState = {\r\n    id_bidang: \"\",\r\n    nama_sub_bidang: \"\",\r\n    keterangan: \"\",\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success tambah data\r\n  const showAlertSuccess = () => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Tambah Data Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/admin/master-data/sub-bidang\");\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert error tambah data\r\n  const showAlertError = (message) => {\r\n    let err_message = \"\";\r\n\r\n    for (const key in message) {\r\n      err_message += `${message[key]}, `;\r\n    }\r\n\r\n    MySwal.fire({\r\n      icon: \"error\",\r\n      title: \"Tambah Data Gagal\",\r\n      text: err_message,\r\n    }).then((result) => {\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  // Setting validasi form menggunakan YUP & FORMIK\r\n  const validationSchema = Yup.object().shape({\r\n    id_bidang: Yup.string().required(\"Bidang harus dipilih!\"),\r\n    nama_sub_bidang: Yup.string().required(\"Sub Bidang harus diisi!\"),\r\n    keterangan: Yup.string().required(\"Keterangan harus diisi!\"),\r\n  });\r\n\r\n  // Menangani value dari form submit\r\n  const handleFormSubmit = (values) => {\r\n    const formData = new FormData();\r\n    formData.append(\"id_bidang\", values.id_bidang);\r\n    formData.append(\"nama_sub_bidang\", values.nama_sub_bidang);\r\n    formData.append(\"keterangan\", values.keterangan);\r\n\r\n    for (var pair of formData.entries()) {\r\n      console.log(pair);\r\n    }\r\n\r\n    // Memanggil method Insert Bidang untuk menambah data Bidang ke database\r\n    insertSubBidang(formData, setLoading, showAlertSuccess, showAlertError);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <h3>Tambah Sub Bidang</h3>\r\n        </CCardHeader>\r\n        <Formik\r\n          initialValues={initState}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleFormSubmit(values)}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol xs=\"12\" md=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel>Bidang</CLabel>\r\n                      <CSelect\r\n                        custom\r\n                        name=\"id_bidang\"\r\n                        id=\"id_bidang\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.id_bidang}\r\n                        className={\r\n                          errors.id_bidang && touched.id_bidang\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      >\r\n                        <option value=\"\">-- Pilih Bidang --</option>\r\n                        {bidang.length > 0 &&\r\n                          bidang.map((item, index) => (\r\n                            <option key={index} value={item.id_bidang}>\r\n                              {item.nama_bidang}\r\n                            </option>\r\n                          ))}\r\n                      </CSelect>\r\n                      {errors.id_bidang && touched.id_bidang && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.id_bidang}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"name\">Sub Bidang</CLabel>\r\n                      <CInput\r\n                        id=\"nama_sub_bidang\"\r\n                        name=\"nama_sub_bidang\"\r\n                        placeholder=\"Masukkan sub bidang\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.nama_sub_bidang}\r\n                        className={\r\n                          errors.nama_sub_bidang && touched.nama_sub_bidang\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.nama_sub_bidang && touched.nama_sub_bidang && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.nama_sub_bidang}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"name\">Keterangan</CLabel>\r\n                      <CInput\r\n                        id=\"keterangan\"\r\n                        name=\"keterangan\"\r\n                        placeholder=\"Masukkan keterangan\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.keterangan}\r\n                        className={\r\n                          errors.keterangan && touched.keterangan\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.keterangan && touched.keterangan && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.keterangan}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter>\r\n                <CButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className=\"mr-1\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  {loading ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>\r\n                <CButton type=\"button\" color=\"danger\" onClick={goBackToParent}>\r\n                  Kembali\r\n                </CButton>\r\n              </CCardFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TambahSubBidang;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const insertSubBidang = (\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(\"admin/master-data/sub-bidang\", values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      // console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      // console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getSelectBidang = (setBidang) => {\r\n  axiosInstance\r\n    .get(\"admin/master-data/bidang\")\r\n    .then((res) => {\r\n      setBidang(res.data.data);\r\n      // console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      // console.log(err.response.data);\r\n    });\r\n};\r\n"],"sourceRoot":""}