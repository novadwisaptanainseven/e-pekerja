{"version":3,"sources":["views/pages/Admin/DukPNS/EditDukPNS.js","context/actions/DUK/editDUK.js","context/actions/DUK/getDUKById.js"],"names":["MySwal","withReactContent","swal2","EditDukPNS","params","match","history","useHistory","useState","data","setData","loading","setLoading","useEffect","getDUKById","id","initState","catatan_mutasi","showAlertSuccess","fire","icon","title","showConfirmButton","timer","then","res","push","showAlertError","message","err_message","key","text","result","validationSchema","Yup","shape","required","handleFormSubmit","values","axiosInstance","post","console","log","catch","err","response","errors","editDUK","className","type","color","onClick","goBack","initialValues","enableReinitialize","onSubmit","touched","handleChange","handleBlur","handleSubmit","md","sm","row","name","placeholder","onChange","onBlur","value","disabled","width","src","LoadAnimationWhite","alt","LoadAnimationBlue","setDUK","get"],"mappings":"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","file":"static/js/70.333d53c2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { LoadAnimationBlue, LoadAnimationWhite } from \"src/assets\";\r\n\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCardFooter,\r\n  CCol,\r\n  CRow,\r\n  CForm,\r\n  CLabel,\r\n  CFormGroup,\r\n  CInput,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getDUKById } from \"src/context/actions/DUK/getDUKById\";\r\nimport { editDUK } from \"src/context/actions/DUK/editDUK\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst EditDukPNS = ({ match }) => {\r\n  const params = match.params;\r\n  const history = useHistory();\r\n  const [data, setData] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Get DUK By Id\r\n    getDUKById(params.id, setData);\r\n  }, [params]);\r\n\r\n  const initState = {\r\n    catatan_mutasi: data ? data.catatan_mutasi : \"\",\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success Edit data\r\n  const showAlertSuccess = () => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Edit Data Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/admin/duk\");\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert error Edit data\r\n  const showAlertError = (message) => {\r\n    let err_message = \"\";\r\n\r\n    for (const key in message) {\r\n      err_message += `${message[key]}, `;\r\n    }\r\n\r\n    MySwal.fire({\r\n      icon: \"error\",\r\n      title: \"Edit Data Gagal\",\r\n      text: err_message,\r\n    }).then((result) => {\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  // Setting validasi form menggunakan YUP & FORMIK\r\n  const validationSchema = Yup.object().shape({\r\n    catatan_mutasi: Yup.string().required(\"Catatan mutasi harus diisi\"),\r\n  });\r\n\r\n  const handleFormSubmit = (values) => {\r\n    editDUK(params.id, values, setLoading, showAlertSuccess, showAlertError);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader className=\"d-flex justify-content-between\">\r\n          <h3>Edit DUK PNS</h3>\r\n          <CButton\r\n            type=\"button\"\r\n            color=\"warning\"\r\n            className=\"text-white\"\r\n            onClick={goBackToParent}\r\n          >\r\n            Kembali\r\n          </CButton>\r\n        </CCardHeader>\r\n\r\n        {data ? (\r\n          <Formik\r\n            initialValues={initState}\r\n            enableReinitialize={true}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values) => handleFormSubmit(values)}\r\n          >\r\n            {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit,\r\n            }) => (\r\n              <CForm onSubmit={handleSubmit} className=\"form-horizontal\">\r\n                <CCardBody>\r\n                  <CRow>\r\n                    <CCol md=\"8\" sm=\"12\">\r\n                      <CFormGroup row>\r\n                        <CCol>\r\n                          <CLabel>Catatan Mutasi Kepegawaian</CLabel>\r\n                        </CCol>\r\n                        <CCol md=\"9\" sm=\"12\">\r\n                          <CInput\r\n                            type=\"text\"\r\n                            name=\"catatan_mutasi\"\r\n                            id=\"catatan_mutasi\"\r\n                            placeholder=\"Masukkan catatan mutasi kepegawaian\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.catatan_mutasi}\r\n                            className={\r\n                              errors.catatan_mutasi && touched.catatan_mutasi\r\n                                ? \"is-invalid\"\r\n                                : null\r\n                            }\r\n                          />\r\n                          {errors.catatan_mutasi && touched.catatan_mutasi && (\r\n                            <div className=\"invalid-feedback\">\r\n                              {errors.catatan_mutasi}\r\n                            </div>\r\n                          )}\r\n                        </CCol>\r\n                      </CFormGroup>\r\n                    </CCol>\r\n                  </CRow>\r\n                </CCardBody>\r\n                <CCardFooter>\r\n                  <CButton\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1\"\r\n                    disabled={loading ? true : false}\r\n                  >\r\n                    {loading ? (\r\n                      <img\r\n                        width={21}\r\n                        src={LoadAnimationWhite}\r\n                        alt=\"load-animation\"\r\n                      />\r\n                    ) : (\r\n                      \"Simpan\"\r\n                    )}\r\n                  </CButton>\r\n                  <CButton color=\"danger\" type=\"reset\" className=\"mr-1\">\r\n                    Reset\r\n                  </CButton>\r\n                </CCardFooter>\r\n              </CForm>\r\n            )}\r\n          </Formik>\r\n        ) : (\r\n          <div className=\"mb-3\">\r\n            <CRow>\r\n              <CCol className=\"text-center\">\r\n                <img\r\n                  className=\"mt-4 ml-3\"\r\n                  width={30}\r\n                  src={LoadAnimationBlue}\r\n                  alt=\"load-animation\"\r\n                />\r\n              </CCol>\r\n            </CRow>\r\n          </div>\r\n        )}\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditDukPNS;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const editDUK = (\r\n  id,\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(`admin/duk-pegawai/${id}`, values)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getDUKById = (id, setDUK) => {\r\n  axiosInstance\r\n    .get(`admin/duk-pegawai/${id}`)\r\n    .then((res) => {\r\n      setDUK(res.data.data);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n"],"sourceRoot":""}