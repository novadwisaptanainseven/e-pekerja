{"version":3,"sources":["views/pages/Admin/MasterData/StatusPegawai/EditStatusPegawai.js","context/actions/StatusPegawai/getStatusPegawaiById.js","context/actions/StatusPegawai/editStatusPegawai.js"],"names":["MySwal","withReactContent","swal2","EditStatusPegawai","match","history","useHistory","params","useState","loading","setLoading","statusPegawai","setStatusPegawai","goBackToParent","goBack","useEffect","id","axiosInstance","get","then","res","data","console","log","catch","err","response","getStatusPegawaiById","initState","status_pegawai","keterangan","showAlertSuccess","useCallback","fire","icon","title","showConfirmButton","timer","push","showAlertError","message","err_message","key","text","result","validationSchema","Yup","shape","required","handleFormSubmit","values","put","editStatusPegawai","initialValues","enableReinitialize","onSubmit","errors","touched","handleChange","handleBlur","handleSubmit","xs","md","htmlFor","name","placeholder","onChange","onBlur","value","className","type","color","disabled","width","src","LoadAnimationWhite","alt","onClick"],"mappings":"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","file":"static/js/91.e0c74f33.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport { Formik } from \"formik\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\nimport { editStatusPegawai } from \"src/context/actions/StatusPegawai/editStatusPegawai\";\r\nimport { getStatusPegawaiById } from \"src/context/actions/StatusPegawai/getStatusPegawaiById\";\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst EditStatusPegawai = ({ match }) => {\r\n  const history = useHistory();\r\n  const params = match.params;\r\n  const [loading, setLoading] = useState(false);\r\n  const [statusPegawai, setStatusPegawai] = useState(null);\r\n\r\n  // Kembali ke menu sebelumnya\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Get Data By ID\r\n    getStatusPegawaiById(params.id, setStatusPegawai);\r\n\r\n    return () => setStatusPegawai(null);\r\n  }, [params]);\r\n\r\n  // Inisialisasi State Formik\r\n  const initState = {\r\n    status_pegawai: statusPegawai ? statusPegawai.status_pegawai : \"\",\r\n    keterangan: statusPegawai ? statusPegawai.keterangan : \"\",\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success tambah data\r\n  const showAlertSuccess = useCallback(() => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Edit Data Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/admin/master-data/status-pegawai\");\r\n    });\r\n  }, [history]);\r\n\r\n  // Fungsi untuk menampilkan alert error Edit data\r\n  const showAlertError = useCallback(\r\n    (message) => {\r\n      let err_message = \"\";\r\n\r\n      for (const key in message) {\r\n        err_message += `${message[key]}, `;\r\n      }\r\n\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: \"Tambah Data Gagal\",\r\n        text: err_message,\r\n      }).then((result) => {\r\n        setLoading(false);\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // Setting validasi form menggunakan YUP & FORMIK\r\n  const validationSchema = Yup.object().shape({\r\n    status_pegawai: Yup.string().required(\"Status pegawai harus diisi!\"),\r\n    keterangan: Yup.string().required(\"Keterangan harus diisi\"),\r\n  });\r\n\r\n  // Menangani value form submit\r\n  const handleFormSubmit = (values) => {\r\n    editStatusPegawai(\r\n      params.id,\r\n      values,\r\n      setLoading,\r\n      showAlertSuccess,\r\n      showAlertError\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <h3>Ubah Data Status Pegawai</h3>\r\n        </CCardHeader>\r\n        <Formik\r\n          initialValues={initState}\r\n          validationSchema={validationSchema}\r\n          enableReinitialize={true}\r\n          onSubmit={(values) => handleFormSubmit(values)}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol xs=\"12\" md=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"name\">Status Pegawai</CLabel>\r\n                      <CInput\r\n                        id=\"status_pegawai\"\r\n                        name=\"status_pegawai\"\r\n                        placeholder=\"Masukkan status pegawai\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.status_pegawai}\r\n                        className={\r\n                          errors.status_pegawai && touched.status_pegawai\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.status_pegawai && touched.status_pegawai && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.status_pegawai}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"name\">Keterangan</CLabel>\r\n                      <CInput\r\n                        id=\"keterangan\"\r\n                        name=\"keterangan\"\r\n                        placeholder=\"Masukkan keterangan\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.keterangan}\r\n                        className={\r\n                          errors.keterangan && touched.keterangan\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.keterangan && touched.keterangan && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.keterangan}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter>\r\n                <CButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className=\"mr-1\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  {loading ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>\r\n                <CButton type=\"button\" color=\"danger\" onClick={goBackToParent}>\r\n                  Kembali\r\n                </CButton>\r\n              </CCardFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditStatusPegawai;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getStatusPegawaiById = (id, setStatusPegawai) => {\r\n  axiosInstance\r\n    .get(`admin/master-data/status-pegawai/${id}`)\r\n    .then((res) => {\r\n      setStatusPegawai(res.data.data);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const editStatusPegawai = (\r\n  id,\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .put(`admin/master-data/status-pegawai/${id}`, values)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError();\r\n    });\r\n};\r\n"],"sourceRoot":""}