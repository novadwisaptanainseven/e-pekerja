{
  "version": 3,
  "sources": [
    "../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js",
    "context/actions/DownloadFile/Excel/Pegawai/exportExcel.js",
    "../node_modules/webpack/buildin/module.js",
    "context/actions/Absensi/getRekapAbsensiPerTahun.js",
    "context/actions/Absensi/getRiwayatAbsensiPegawai.js",
    "../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js",
    "../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js",
    "../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js",
    "../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js",
    "context/actions/Pegawai/PNS/getPNS.js",
    "context/actions/DownloadFile/printAbsensi.js",
    "views/pages/Admin/Absensi/TambahAbsen.js",
    "context/actions/Absensi/insertOrUpdateAbsensi.js",
    "context/actions/Absensi/insertAbsensi.js",
    "views/pages/Admin/Absensi/ExpandableComponent.js",
    "context/actions/Absensi/getAbsensiByPegawai.js",
    "views/pages/Admin/Absensi/AbsensiPNS.js"
  ],
  "names": [
    "_taggedTemplateLiteral",
    "strings",
    "raw",
    "slice",
    "Object",
    "freeze",
    "defineProperties",
    "value",
    "exportExcel",
    "data",
    "request",
    "type",
    "params",
    "startDate",
    "endDate",
    "window",
    "open",
    "localStorage",
    "baseURL",
    "bulan",
    "tahun",
    "module",
    "exports",
    "webpackPolyfill",
    "deprecate",
    "paths",
    "children",
    "defineProperty",
    "enumerable",
    "get",
    "l",
    "i",
    "getRekapAbsensiPerTahun",
    "idPegawai",
    "setLoading",
    "setData",
    "axiosInstance",
    "then",
    "res",
    "console",
    "log",
    "catch",
    "err",
    "response",
    "getRiwayatAbsensiPegawai",
    "values",
    "_toConsumableArray",
    "arr",
    "Array",
    "isArray",
    "arrayLikeToArray",
    "iter",
    "Symbol",
    "iterator",
    "from",
    "unsupportedIterableToArray",
    "TypeError",
    "getPNS",
    "dispatch",
    "LOADING",
    "SUCCESS",
    "payload",
    "ERROR",
    "message",
    "printRekapAbsensiByStatusPegawai",
    "status",
    "TambahAbsen",
    "modal",
    "setRiwayatAbsen",
    "setRekapAbsensi",
    "setLoadingRiwayatAbsen",
    "setLoadingRekapAbsensi",
    "formattedDateRiwayatAbsen",
    "useState",
    "tglAbsen",
    "setTglAbsen",
    "absen",
    "setAbsen",
    "keterangan",
    "setKeterangan",
    "namaHari",
    "setNamaHari",
    "loading",
    "getNamaHari",
    "useCallback",
    "$tgl",
    "hari",
    "format",
    "Date",
    "filterYear",
    "filterMonth",
    "tgl",
    "useEffect",
    "tgl_absen",
    "handleOnSubmit",
    "e",
    "preventDefault",
    "id_pegawai",
    "saveData",
    "id_absensi",
    "parseInt",
    "trigger",
    "setModal",
    "post",
    "header",
    "_boundary",
    "prevState",
    "insertOrUpdateAbsensi",
    "setTriggerUpdateData",
    "insertAbsensi",
    "onSubmit",
    "row",
    "md",
    "name",
    "id",
    "onChange",
    "target",
    "placeholder",
    "readOnly",
    "custom",
    "required",
    "disabled",
    "selected",
    "color",
    "onClick",
    "document",
    "getElementById",
    "setAttribute",
    "ExpandableComponent",
    "days",
    "setDays",
    "current_year",
    "getFullYear",
    "current_month",
    "getMonth",
    "setFilterYear",
    "setFilterMonth",
    "dayAbsen",
    "setDayAbsen",
    "increment",
    "triggerUpdateData",
    "getAbsensiByPegawai",
    "length",
    "forEach",
    "item",
    "years",
    "old_year",
    "range_year",
    "push",
    "months",
    "getDaysInMonth",
    "month",
    "year",
    "getDate",
    "style",
    "padding",
    "className",
    "handleChangeYear",
    "defaultValue",
    "map",
    "index",
    "handleChangeMonth",
    "arr_index",
    "getDays",
    "data_keterangan",
    "data_absen_index",
    "data_absen",
    "includes",
    "toString",
    "lg",
    "sm",
    "xs",
    "show",
    "onClose",
    "size",
    "closeButton",
    "TextField",
    "styled",
    "input",
    "ClearButton",
    "button",
    "FilterComponent",
    "filterText",
    "onFilter",
    "onClear",
    "aria-label",
    "AbsensiPNS",
    "history",
    "useHistory",
    "setFilterText",
    "resetPaginationToggle",
    "setResetPaginationToggle",
    "useContext",
    "GlobalContext",
    "pnsState",
    "pnsDispatch",
    "filteredData",
    "filter",
    "nama",
    "nip",
    "toLowerCase",
    "columns",
    "selector",
    "sortable",
    "wrap",
    "maxWidth",
    "cell",
    "data-tag",
    "goToRiwayat",
    "customStyles",
    "headCells",
    "fontSize",
    "SubHeaderComponentMemo",
    "React",
    "useMemo",
    "content",
    "utton",
    "cilPrint",
    "noHeader",
    "responsive",
    "pagination",
    "paginationResetDefaultPage",
    "subHeader",
    "subHeaderComponent",
    "expandableRows",
    "highlightOnHover",
    "expandOnRowClicked",
    "expandableRowsComponent",
    "width",
    "src",
    "LoadAnimationBlue",
    "alt"
  ],
  "mappings": "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",
  "file": "static/js/16.684375e9.chunk.js",
  "sourcesContent": [
    "export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}",
    "const exportExcel = (data, request = null, type = \"\") => {\r\n  if (!type) {\r\n    window.open(`${localStorage.baseURL}${data}/export`, \"_self\");\r\n  } else if (type === \"filter_tanggal\") {\r\n    let params = `first_date=${request.startDate}&last_date=${request.endDate}`;\r\n    window.open(`${localStorage.baseURL}${data}/export/?${params}`, \"_self\");\r\n  } else if (type === \"filter_tahun\") {\r\n    let params = `tahun=${request}`;\r\n    window.open(`${localStorage.baseURL}${data}/export/?${params}`, \"_self\");\r\n  } else if (type === \"filter_bulan_tahun\") {\r\n    let params = `bulan=${request.bulan}&tahun=${request.tahun}`;\r\n    window.open(`${localStorage.baseURL}${data}/export?${params}`, \"_self\");\r\n  }\r\n};\r\n\r\nexport default exportExcel;\r\n",
    "module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n",
    "import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getRekapAbsensiPerTahun = (idPegawai, setLoading, setData) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .get(`admin/pegawai/${idPegawai}/rekap-absensi`)\r\n    .then((res) => {\r\n      setData(res.data.data);\r\n      setLoading(false);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n",
    "import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getRiwayatAbsensiPegawai = (\r\n  idPegawai,\r\n  setLoading,\r\n  setData,\r\n  values\r\n) => {\r\n  setLoading(true);\r\n\r\n  console.log(values);\r\n\r\n  axiosInstance\r\n    .get(\r\n      `admin/pegawai/${idPegawai}/absensi?first_date=${values.startDate}&last_date=${values.endDate}`\r\n    )\r\n    .then((res) => {\r\n      setData(res.data.data);\r\n      setLoading(false);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n",
    "import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}",
    "import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}",
    "export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}",
    "export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}",
    "import { ERROR, LOADING, SUCCESS } from \"src/context/actionTypes\";\r\nimport axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getPNS = (dispatch) => {\r\n  dispatch({\r\n    type: LOADING,\r\n  });\r\n\r\n  axiosInstance\r\n    .get(\"admin/pegawai/pns\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n      // console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ERROR,\r\n        payload: err.response.data.message,\r\n      });\r\n      // console.log(err.response.data);\r\n    });\r\n};\r\n",
    "export const printRekapAbsensiByStatusPegawai = (status, tahun = \"\") => {\r\n  window.open(\r\n    `${localStorage.baseURL}print-rekap-absensi/${status}?tahun=${tahun}`,\r\n    \"_blank\"\r\n  );\r\n};\r\n",
    "import React, { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n  CCol,\r\n  CSelect,\r\n  CForm,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport { format } from \"date-fns\";\r\nimport { insertOrUpdateAbsensi } from \"src/context/actions/Absensi/insertOrUpdateAbsensi\";\r\nimport { insertAbsensi } from \"src/context/actions/Absensi/insertAbsensi\";\r\n\r\nconst TambahAbsen = ({\r\n  data,\r\n  modal,\r\n  idPegawai,\r\n  setRiwayatAbsen,\r\n  setRekapAbsensi,\r\n  setLoadingRiwayatAbsen,\r\n  setLoadingRekapAbsensi,\r\n  formattedDateRiwayatAbsen,\r\n}) => {\r\n  const [tglAbsen, setTglAbsen] = useState(\"\");\r\n  const [absen, setAbsen] = useState(\"\");\r\n  const [keterangan, setKeterangan] = useState(\"\");\r\n  const [namaHari, setNamaHari] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const getNamaHari = useCallback(\r\n    ($tgl = null) => {\r\n      let hari = \"\";\r\n      if (data) {\r\n        hari = format(\r\n          new Date(data.filterYear, data.filterMonth, data.tgl),\r\n          \"EEEEEE\"\r\n        );\r\n      } else {\r\n        hari = format(new Date(), \"EEEEEE\");\r\n      }\r\n\r\n      if ($tgl) {\r\n        hari = format(new Date($tgl), \"EEEEEE\");\r\n      }\r\n\r\n      switch (hari) {\r\n        case \"Su\":\r\n          hari = \"minggu\";\r\n          break;\r\n        case \"Mo\":\r\n          hari = \"senin\";\r\n          break;\r\n        case \"Tu\":\r\n          hari = \"selasa\";\r\n          break;\r\n        case \"We\":\r\n          hari = \"rabu\";\r\n          break;\r\n        case \"Th\":\r\n          hari = \"kamis\";\r\n          break;\r\n        case \"Fr\":\r\n          hari = \"jumat\";\r\n          break;\r\n        case \"Sa\":\r\n          hari = \"sabtu\";\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      return hari;\r\n    },\r\n    [data]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let tgl_absen = null;\r\n\r\n    // Cek apakah data dan properti tgl ada\r\n    if (!data) {\r\n      tgl_absen = format(new Date(), \"yyyy-MM-dd\");\r\n      setTglAbsen(tgl_absen);\r\n      // Get Nama Hari\r\n      setNamaHari(getNamaHari());\r\n    }\r\n    if (data && data.tgl) {\r\n      tgl_absen = format(\r\n        new Date(data.filterYear, data.filterMonth, data.tgl),\r\n        \"yyyy-MM-dd\"\r\n      );\r\n      setTglAbsen(tgl_absen);\r\n      setAbsen(data.absen);\r\n      setKeterangan(data.keterangan);\r\n      // Get Nama Hari\r\n      setNamaHari(getNamaHari());\r\n    }\r\n  }, [data, getNamaHari]);\r\n\r\n  useEffect(() => {\r\n    setNamaHari(getNamaHari(tglAbsen));\r\n  }, [tglAbsen, getNamaHari]);\r\n\r\n  // Handle kosongkan input keterangan ketika tombol close modal diklik\r\n  const handleCloseModal = () => {\r\n    setKeterangan(\"\");\r\n    modal.setModal(!modal.modal);\r\n\r\n    let inputKeterangan = document.getElementById(\"keterangan\");\r\n    inputKeterangan.setAttribute(\"value\", \"\");\r\n  };\r\n\r\n  // Handle ketika data disimpan\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // let valTanggal = document.getElementById(\"tgl_absen\").getAttribute(\"value\");\r\n    // let valHari = document.getElementById(\"hari\").getAttribute(\"value\");\r\n    // let valAbsen = document.getElementById(\"absen\").getAttribute(\"value\");\r\n\r\n    // let valKeterangan = document\r\n    //   .getElementById(\"keterangan\")\r\n    //   .getAttribute(\"value\");\r\n\r\n    let id_pegawai = data ? data.id_pegawai : idPegawai;\r\n\r\n    const saveData = {\r\n      // id_pegawai: idPegawai ? idPegawai : data.id_pegawai,\r\n      id_absensi: data ? data.id_absensi : \"\",\r\n      tgl_absen: tglAbsen,\r\n      hari: namaHari,\r\n      absen: absen === \"empty\" ? \"\" : parseInt(absen),\r\n      keterangan: keterangan,\r\n    };\r\n\r\n    console.log(saveData);\r\n    // Insert or Update Absensi\r\n\r\n    if (data) {\r\n      insertOrUpdateAbsensi(\r\n        id_pegawai,\r\n        setLoading,\r\n        saveData,\r\n        data.setTriggerUpdateData,\r\n        modal.setModal\r\n      );\r\n    } else {\r\n      insertAbsensi(\r\n        id_pegawai,\r\n        setLoading,\r\n        saveData,\r\n        modal.setModal,\r\n        setRiwayatAbsen,\r\n        setRekapAbsensi,\r\n        setLoadingRiwayatAbsen,\r\n        setLoadingRekapAbsensi,\r\n        formattedDateRiwayatAbsen\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CForm onSubmit={(e) => handleOnSubmit(e)}>\r\n        <CModalBody>\r\n          <CFormGroup row>\r\n            <CCol md=\"2\">\r\n              <CLabel>Tanggal Absen</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n              <CInput\r\n                type=\"date\"\r\n                name=\"tgl_absen\"\r\n                id=\"tgl_absen\"\r\n                value={tglAbsen || \"\"}\r\n                onChange={(e) => setTglAbsen(e.target.value)}\r\n                placeholder=\"Masukkan tanggal absen\"\r\n                readOnly={data && data.tgl ? true : false}\r\n              />\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"2\">\r\n              <CLabel>Hari</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n              {data ? (\r\n                // Jika ada nama hari\r\n                <CInput\r\n                  name=\"hari\"\r\n                  id=\"hari\"\r\n                  value={namaHari || \"\"}\r\n                  onChange={(e) => setNamaHari(e.target.value)}\r\n                  readOnly={data && data.tgl ? true : false}\r\n                />\r\n              ) : (\r\n                // Jika Tidak Ada nama hari\r\n                <CSelect\r\n                  custom\r\n                  name=\"hari\"\r\n                  id=\"hari\"\r\n                  required\r\n                  value={namaHari || \"\"}\r\n                  onChange={(e) => setNamaHari(e.target.value)}\r\n                  disabled\r\n                >\r\n                  <option value=\"\">-- Pilih Hari --</option>\r\n                  <option value=\"senin\">Senin</option>\r\n                  <option value=\"selasa\">Selasa</option>\r\n                  <option value=\"rabu\">Rabu</option>\r\n                  <option value=\"kamis\">Kamis</option>\r\n                  <option value=\"jumat\">Jumat</option>\r\n                  <option value=\"sabtu\">Sabtu</option>\r\n                  <option value=\"minggu\">Minggu</option>\r\n                </CSelect>\r\n              )}\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"2\">\r\n              <CLabel>Absen</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n              {data ? (\r\n                <CSelect\r\n                  custom\r\n                  name=\"absen\"\r\n                  id=\"absen\"\r\n                  onChange={(e) => setAbsen(e.target.value)}\r\n                  required={true}\r\n                >\r\n                  <option value=\"\" selected={absen === \"empty\" ? true : false}>\r\n                    -- Pilih Absen --\r\n                  </option>\r\n                  <option value=\"5\" selected={absen === 5 ? true : false}>\r\n                    Tanpa Keterangan\r\n                  </option>\r\n                  <option value=\"1\" selected={absen === 1 ? true : false}>\r\n                    Hadir\r\n                  </option>\r\n                  <option value=\"2\" selected={absen === 2 ? true : false}>\r\n                    Izin\r\n                  </option>\r\n                  <option value=\"3\" selected={absen === 3 ? true : false}>\r\n                    Sakit\r\n                  </option>\r\n                  <option value=\"4\" selected={absen === 4 ? true : false}>\r\n                    Cuti\r\n                  </option>\r\n                </CSelect>\r\n              ) : (\r\n                <CSelect\r\n                  custom\r\n                  name=\"absen\"\r\n                  id=\"absen\"\r\n                  required\r\n                  value={absen}\r\n                  onChange={(e) => setAbsen(e.target.value)}\r\n                >\r\n                  <option value=\"\">-- Pilih Absen --</option>\r\n                  <option value=\"5\">Tanpa Keterangan</option>\r\n                  <option value=\"1\">Hadir</option>\r\n                  <option value=\"2\">Izin</option>\r\n                  <option value=\"3\">Sakit</option>\r\n                  <option value=\"4\">Cuti</option>\r\n                </CSelect>\r\n              )}\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"2\">\r\n              <CLabel>Keterangan</CLabel>\r\n            </CCol>\r\n            <CCol>\r\n              {keterangan ? (\r\n                <CInput\r\n                  type=\"text\"\r\n                  name=\"keterangan\"\r\n                  id=\"keterangan\"\r\n                  value={keterangan || \"\"}\r\n                  onChange={(e) => setKeterangan(e.target.value)}\r\n                  required\r\n                />\r\n              ) : (\r\n                <CInput\r\n                  type=\"text\"\r\n                  name=\"keterangan\"\r\n                  id=\"keterangan\"\r\n                  value={keterangan || \"\"}\r\n                  onChange={(e) => setKeterangan(e.target.value)}\r\n                  required\r\n                />\r\n              )}\r\n            </CCol>\r\n          </CFormGroup>\r\n        </CModalBody>\r\n        <CModalFooter>\r\n          <CButton\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            disabled={loading ? true : false}\r\n          >\r\n            {loading ? \"Sedang menyimpan...\" : \"Simpan\"}\r\n          </CButton>{\" \"}\r\n          <CButton type=\"button\" color=\"secondary\" onClick={handleCloseModal}>\r\n            Batal\r\n          </CButton>\r\n        </CModalFooter>\r\n      </CForm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TambahAbsen;\r\n",
    "import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const insertOrUpdateAbsensi = (\r\n  idPegawai,\r\n  setLoading,\r\n  values,\r\n  trigger,\r\n  setModal\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(`admin/pegawai/${idPegawai}/absensi/insert-update`, values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      setLoading(false);\r\n      trigger((prevState) => !prevState);\r\n      setModal((prevState) => {\r\n        return {\r\n          ...prevState,\r\n          modal: !prevState.modal,\r\n        };\r\n      });\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n",
    "import axiosInstance from \"src/helpers/axios\";\r\nimport { getRekapAbsensiPerTahun } from \"./getRekapAbsensiPerTahun\";\r\nimport { getRiwayatAbsensiPegawai } from \"./getRiwayatAbsensiPegawai\";\r\n\r\nexport const insertAbsensi = (\r\n  idPegawai,\r\n  setLoading,\r\n  values,\r\n  setModal,\r\n  setRiwayatAbsen,\r\n  setRekapAbsensi,\r\n  setLoadingRiwayatAbsen,\r\n  setLoadingRekapAbsensi,\r\n  formattedDateRiwayatAbsen\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(`admin/pegawai/${idPegawai}/absensi`, values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      setLoading(false);\r\n      setModal(false);\r\n      getRiwayatAbsensiPegawai(\r\n        idPegawai,\r\n        setLoadingRiwayatAbsen,\r\n        setRiwayatAbsen,\r\n        formattedDateRiwayatAbsen\r\n      );\r\n      getRekapAbsensiPerTahun(\r\n        idPegawai,\r\n        setLoadingRekapAbsensi,\r\n        setRekapAbsensi\r\n      );\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n",
    "import {\r\n  CForm,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CCol,\r\n  CRow,\r\n  CInput,\r\n  CButton,\r\n  CInputGroupText,\r\n  CModal,\r\n  CModalHeader,\r\n  CSelect,\r\n  CFormGroup,\r\n  CModalTitle,\r\n} from \"@coreui/react\";\r\nimport { format } from \"date-fns\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getAbsensiByPegawai } from \"src/context/actions/Absensi/getAbsensiByPegawai\";\r\nimport TambahAbsen from \"./TambahAbsen\";\r\n\r\n// Expandable Component\r\nconst ExpandableComponent = ({ data }) => {\r\n  const [modal, setModal] = useState({\r\n    modal: false,\r\n    tgl: null,\r\n    absen: null,\r\n    keterangan: null,\r\n  });\r\n  const [days, setDays] = useState([]);\r\n  const current_year = new Date().getFullYear();\r\n  const current_month = new Date().getMonth();\r\n  const [filterYear, setFilterYear] = useState(current_year);\r\n  const [filterMonth, setFilterMonth] = useState(current_month);\r\n  const [absen, setAbsen] = useState([]);\r\n  const [dayAbsen, setDayAbsen] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  console.log(loading);\r\n  let increment = 0;\r\n  // State untuk mentrigger komponen absen agar terupdate setelah proses tambah/update absen berhasil\r\n  const [triggerUpdateData, setTriggerUpdateData] = useState(true);\r\n  // const [saveDay, setSaveDay] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Trigger Update Data\r\n    if (triggerUpdateData === true || triggerUpdateData === false) {\r\n      // Get absensi by id pegawai\r\n      getAbsensiByPegawai(data.id_pegawai, setLoading, setAbsen, {\r\n        tahun: filterYear,\r\n        bulan: filterMonth + 1,\r\n      });\r\n    }\r\n  }, [data, triggerUpdateData, filterYear, filterMonth]);\r\n\r\n  useEffect(() => {\r\n    if (absen.length > 0) {\r\n      absen.forEach((item) => {\r\n        setDayAbsen((prevState) => [\r\n          ...prevState,\r\n          format(new Date(item.tgl_absen), \"d\"),\r\n        ]);\r\n      });\r\n    }\r\n  }, [absen]);\r\n\r\n  // Get Years\r\n  const years = [];\r\n  const old_year = 2015;\r\n  let range_year = current_year - old_year;\r\n\r\n  // Isi tahun dari 2015 sd tahun sekarang\r\n  for (let i = 0; i <= range_year; i++) {\r\n    years.push(old_year + i);\r\n  }\r\n\r\n  // Get Months\r\n  const months = [];\r\n\r\n  // Isi bulan dari Januari sd Desember\r\n  for (let i = 0; i < 12; i++) {\r\n    months.push(format(new Date(old_year, i, 1), \"MMMM\"));\r\n  }\r\n\r\n  // Get total days\r\n  const getDays = (month, year) => {\r\n    let arr_index = [];\r\n    for (let i = 1; i <= getDaysInMonth(month + 1, year); i++) {\r\n      arr_index.push(i);\r\n    }\r\n    setDays(arr_index);\r\n  };\r\n\r\n  // Dapatkan jumlah tanggal setiap bulan berdasarkan tahun\r\n  const getDaysInMonth = (month, year) => {\r\n    return new Date(year, month, 0).getDate();\r\n  };\r\n\r\n  // Tangani perubahan nilai pada select\r\n  const handleChangeYear = (e) => {\r\n    setDays([]);\r\n    setDayAbsen([]);\r\n    setFilterYear(parseInt(e.target.value));\r\n  };\r\n\r\n  const handleChangeMonth = (e) => {\r\n    setDays([]);\r\n    setDayAbsen([]);\r\n    setFilterMonth(parseInt(e.target.value));\r\n  };\r\n\r\n  const getDaysOnTampil = () => {\r\n    getDays(filterMonth, filterYear);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ padding: \"10px 63px\" }}>\r\n        <CForm>\r\n          <CRow>\r\n            <CCol>\r\n              <CFormGroup row>\r\n                <CCol md=\"2\" className=\"mb-2\">\r\n                  <CSelect\r\n                    custom\r\n                    name=\"year\"\r\n                    id=\"year\"\r\n                    onChange={(e) => handleChangeYear(e)}\r\n                    // onClick={(e) => handleChangeYear(e)}\r\n                    defaultValue={current_year}\r\n                  >\r\n                    {years.map((item, index) => (\r\n                      <option key={index} value={item}>\r\n                        {item}\r\n                      </option>\r\n                    ))}\r\n                  </CSelect>\r\n                </CCol>\r\n                <CCol md=\"2\" className=\"mb-2\">\r\n                  <CSelect\r\n                    custom\r\n                    name=\"month\"\r\n                    id=\"month\"\r\n                    onChange={(e) => handleChangeMonth(e)}\r\n                    // onClick={(e) => handleChangeMonth(e)}\r\n                    defaultValue={current_month}\r\n                  >\r\n                    {months.map((item, index) => (\r\n                      <option key={index} value={index}>\r\n                        {item}\r\n                      </option>\r\n                    ))}\r\n                  </CSelect>\r\n                </CCol>\r\n                <CCol>\r\n                  <CButton\r\n                    type=\"button\"\r\n                    color=\"info\"\r\n                    onClick={getDaysOnTampil}\r\n                    className=\"mr-2\"\r\n                  >\r\n                    Tampilkan Absen\r\n                  </CButton>\r\n                </CCol>\r\n              </CFormGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow>\r\n            {days.length > 0 &&\r\n              days.map((item, index) => {\r\n                // Get filter tanggal\r\n                // let filter_tgl = format(\r\n                //   new Date(filterYear, filterMonth, 1),\r\n                //   \"yyyy-MM\"\r\n                // );\r\n\r\n                // Get tgl absen ketika modal muncul\r\n                // let data_tgl = absen[index]\r\n                //   ? format(new Date(absen[index].tgl_absen), \"yyyy-MM\")\r\n                //   : null;\r\n\r\n                let id_absensi = \"\";\r\n                let data_keterangan = \"\";\r\n                let data_absen_index = \"\";\r\n                let data_absen = \"\";\r\n\r\n                // Get keterangan\r\n                // let data_keterangan =\r\n                //   filter_tgl === data_tgl ? absen[index].keterangan : \"\";\r\n\r\n                // let data_absen_index =\r\n                //   filter_tgl === data_tgl ? absen[index].absen : \"empty\";\r\n\r\n                // let data_absen =\r\n                //   filter_tgl === data_tgl ? absen[index].absen : \"\";\r\n\r\n                if (dayAbsen.includes(item.toString())) {\r\n                  id_absensi = absen[increment].id_absensi;\r\n                  data_keterangan = absen[increment].keterangan;\r\n\r\n                  data_absen_index = absen[increment].absen;\r\n\r\n                  data_absen = absen[increment].absen;\r\n\r\n                  increment++;\r\n                } else {\r\n                  id_absensi = \"\";\r\n                  data_keterangan = \"\";\r\n\r\n                  data_absen_index = \"empty\";\r\n\r\n                  data_absen = \"\";\r\n                }\r\n                // Ubah data absen dari integer menjadi String text\r\n                switch (data_absen) {\r\n                  case 5:\r\n                    data_absen = \"TK\";\r\n                    break;\r\n                  case 1:\r\n                    data_absen = \"Hadir\";\r\n                    break;\r\n                  case 2:\r\n                    data_absen = \"Izin\";\r\n                    break;\r\n                  case 3:\r\n                    data_absen = \"Sakit\";\r\n                    break;\r\n                  case 4:\r\n                    data_absen = \"Cuti\";\r\n                    break;\r\n\r\n                  default:\r\n                    data_absen = \"\";\r\n                    break;\r\n                }\r\n\r\n                return (\r\n                  <>\r\n                    <CCol\r\n                      lg=\"2\"\r\n                      md=\"3\"\r\n                      sm=\"3\"\r\n                      xs=\"6\"\r\n                      key={index}\r\n                      className=\"mb-2\"\r\n                    >\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>{item}</CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput\r\n                          type=\"text\"\r\n                          name={item}\r\n                          id={item}\r\n                          readOnly\r\n                          value={data_absen}\r\n                          onClick={() =>\r\n                            setModal({\r\n                              ...modal,\r\n                              modal: !modal.modal,\r\n                              tgl: item,\r\n                              id_absensi: id_absensi,\r\n                              absen: data_absen_index,\r\n                              keterangan: data_keterangan,\r\n                            })\r\n                          }\r\n                        />\r\n                      </CInputGroup>\r\n                    </CCol>\r\n                  </>\r\n                );\r\n              })}\r\n          </CRow>\r\n        </CForm>\r\n      </div>\r\n\r\n      {/* Modal */}\r\n      <CModal\r\n        show={modal.modal}\r\n        onClose={() => setModal({ ...modal, modal: !modal.modal })}\r\n        size=\"lg\"\r\n      >\r\n        <CModalHeader closeButton>\r\n          <CModalTitle>Tambah Absensi Pegawai</CModalTitle>\r\n        </CModalHeader>\r\n\r\n        <TambahAbsen\r\n          data={{\r\n            filterMonth: filterMonth,\r\n            filterYear: filterYear,\r\n            id_pegawai: data.id_pegawai,\r\n            tgl: modal.tgl,\r\n            id_absensi: modal.id_absensi,\r\n            absen: modal.absen,\r\n            keterangan: modal.keterangan,\r\n            setDayAbsen: setDayAbsen,\r\n            setTriggerUpdateData: setTriggerUpdateData,\r\n          }}\r\n          modal={{\r\n            setModal: setModal,\r\n            modal: modal,\r\n          }}\r\n        />\r\n      </CModal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExpandableComponent;\r\n",
    "import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getAbsensiByPegawai = (idPegawai, setLoading, setData, values) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .get(\r\n      `admin/pegawai/${idPegawai}/absensi-params?tahun=${values.tahun}&bulan=${values.bulan}`\r\n    )\r\n    .then((res) => {\r\n      setData(res.data.data);\r\n      setLoading(false);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      setLoading(false);\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n",
    "import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CButton,\r\n  CPopover,\r\n  CRow,\r\n  CCol,\r\n} from \"@coreui/react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { cilPrint } from \"@coreui/icons\";\r\nimport ExpandableComponent from \"./ExpandableComponent\";\r\nimport { GlobalContext } from \"src/context/Provider\";\r\n// import { getAllPegawai } from \"src/context/actions/Pegawai/SemuaPegawai/getAllPegawai\";\r\nimport { LoadAnimationBlue } from \"src/assets\";\r\nimport { printRekapAbsensiByStatusPegawai } from \"src/context/actions/DownloadFile/printAbsensi\";\r\nimport { getPNS } from \"src/context/actions/Pegawai/PNS/getPNS\";\r\nimport exportExcel from \"src/context/actions/DownloadFile/Excel/Pegawai/exportExcel\";\r\n// const TambahAbsen = React.lazy(() => import(\"./TambahAbsen\"));\r\n\r\nconst TextField = styled.input`\r\n  height: 37px;\r\n  width: 200px;\r\n  border-radius: 3px;\r\n  border-top-left-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  border: 1px solid #e5e5e5;\r\n  padding: 0 32px 0 16px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ClearButton = styled.button`\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  height: 37px;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #3e5973;\r\n  border: none;\r\n  color: white;\r\n  padding: 0 10px;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #283c4f;\r\n  }\r\n`;\r\n\r\n// Handle filter pencarian\r\n\r\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\r\n  <>\r\n    <TextField\r\n      id=\"search\"\r\n      type=\"text\"\r\n      placeholder=\"Cari pegawai\"\r\n      aria-label=\"Search Input\"\r\n      value={filterText}\r\n      onChange={onFilter}\r\n    />\r\n    <ClearButton type=\"button\" onClick={onClear}>\r\n      Reset\r\n    </ClearButton>\r\n  </>\r\n);\r\n\r\nconst AbsensiPNS = () => {\r\n  const history = useHistory();\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  const { pnsState, pnsDispatch } = useContext(GlobalContext);\r\n  const { data, loading } = pnsState;\r\n\r\n  useEffect(() => {\r\n    // Get All Pegawai\r\n    getPNS(pnsDispatch);\r\n  }, [pnsDispatch]);\r\n\r\n  // const data = [\r\n  //   {\r\n  //     no: 1,\r\n  //     id: 1,\r\n  //     nip: \"19651127 199301 1 001\",\r\n  //     nama: \"Ir. H. Dadang Airlangga N, MMT\",\r\n  //     jabatan: \"Kepala Dinas\",\r\n  //     absen: [\r\n  //       {\r\n  //         tgl: \"2021-02-01\",\r\n  //         hari: \"senin\",\r\n  //         absen: 1,\r\n  //         keterangan: \"\",\r\n  //       },\r\n  //       {\r\n  //         tgl: \"2021-02-02\",\r\n  //         hari: \"selasa\",\r\n  //         absen: 1,\r\n  //         keterangan: \"\",\r\n  //       },\r\n  //       {\r\n  //         tgl: \"2021-02-03\",\r\n  //         hari: \"rabu\",\r\n  //         absen: 2,\r\n  //         keterangan: \"Ada acara pernikahan keluarga\",\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     no: 2,\r\n  //     id: 2,\r\n  //     nip: \"19651127 199301 1 001\",\r\n  //     nama: \"Nova Dwi Sapta\",\r\n  //     jabatan: \"Programmer\",\r\n  //     absen: [\r\n  //       {\r\n  //         tgl: \"2021-02-01\",\r\n  //         hari: \"senin\",\r\n  //         absen: 1,\r\n  //         keterangan: \"\",\r\n  //       },\r\n  //       {\r\n  //         tgl: \"2021-02-02\",\r\n  //         hari: \"selasa\",\r\n  //         absen: 1,\r\n  //         keterangan: \"\",\r\n  //       },\r\n  //       {\r\n  //         tgl: \"2021-02-03\",\r\n  //         hari: \"rabu\",\r\n  //         absen: 2,\r\n  //         keterangan: \"Ada acara pernikahan keluarga\",\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     no: 3,\r\n  //     id: 3,\r\n  //     nip: \"19651127 199301 1 001\",\r\n  //     nama: \"Ikwal Ramadhani\",\r\n  //     jabatan: \"IT Support\",\r\n  //     absen: [\r\n  //       {\r\n  //         tgl: \"2021-02-01\",\r\n  //         hari: \"senin\",\r\n  //         absen: 1,\r\n  //         keterangan: \"\",\r\n  //       },\r\n  //       {\r\n  //         tgl: \"2021-02-02\",\r\n  //         hari: \"selasa\",\r\n  //         absen: 1,\r\n  //         keterangan: \"\",\r\n  //       },\r\n  //       {\r\n  //         tgl: \"2021-02-03\",\r\n  //         hari: \"rabu\",\r\n  //         absen: 2,\r\n  //         keterangan: \"Ada acara pernikahan keluarga\",\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  //   {\r\n  //     no: 4,\r\n  //     id: 4,\r\n  //     nip: \"19651127 199301 1 001\",\r\n  //     nama: \"Iqbal Wahyudi\",\r\n  //     jabatan: \"Programmer\",\r\n  //     absen: [\r\n  //       {\r\n  //         tgl: \"2021-02-01\",\r\n  //         hari: \"senin\",\r\n  //         absen: 1,\r\n  //         keterangan: \"\",\r\n  //       },\r\n  //       {\r\n  //         tgl: \"2021-02-02\",\r\n  //         hari: \"selasa\",\r\n  //         absen: 1,\r\n  //         keterangan: \"\",\r\n  //       },\r\n  //       {\r\n  //         tgl: \"2021-02-03\",\r\n  //         hari: \"rabu\",\r\n  //         absen: 2,\r\n  //         keterangan: \"Ada acara pernikahan keluarga\",\r\n  //       },\r\n  //     ],\r\n  //   },\r\n  // ];\r\n\r\n  const filteredData = data.filter((item) =>\r\n    // (\r\n    //   item.nama && item.sub_bidang &&\r\n    //   item.nama.toLowerCase().includes(filterText.toLowerCase())\r\n\r\n    // )\r\n    {\r\n      if (item.nama && item.nip) {\r\n        if (\r\n          item.nama.toLowerCase().includes(filterText.toLowerCase()) ||\r\n          item.nip.toLowerCase().includes(filterText.toLowerCase())\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      name: \"NIP\",\r\n      selector: \"nip\",\r\n      sortable: true,\r\n      // maxWidth: \"200px\",\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Nama\",\r\n      selector: \"nama\",\r\n      sortable: true,\r\n      // maxWidth: \"200px\",\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Jabatan\",\r\n      selector: \"jabatan\",\r\n      sortable: true,\r\n      // maxWidth: \"200px\",\r\n      wrap: true,\r\n    },\r\n    {\r\n      maxWidth: \"150px\",\r\n      name: \"Action\",\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <div data-tag=\"allowRowEvents\">\r\n          <CButton\r\n            color=\"success\"\r\n            className=\"btn btn-sm\"\r\n            onClick={() => goToRiwayat(row.id_pegawai)}\r\n          >\r\n            Absensi\r\n          </CButton>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headCells: {\r\n      style: {\r\n        fontSize: \"1.15em\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const SubHeaderComponentMemo = React.useMemo(() => {\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <FilterComponent\r\n          onFilter={(e) => setFilterText(e.target.value)}\r\n          onClear={handleClear}\r\n          filterText={filterText}\r\n        />\r\n\r\n        <CPopover content=\"Cetak Rekapan Absensi Pegawai\">\r\n          <CButton\r\n            utton\r\n            type=\"button\"\r\n            color=\"info\"\r\n            className=\"ml-2\"\r\n            onClick={() => printRekapAbsensiByStatusPegawai(\"pns\")}\r\n          >\r\n            <span className=\"my-text-button\">Cetak Rekapan Absensi</span>{\" \"}\r\n            <CIcon content={cilPrint} />\r\n          </CButton>\r\n        </CPopover>\r\n        <CPopover content=\"Export Rekap Absensi ke Excel\">\r\n          <CButton\r\n            utton\r\n            type=\"button\"\r\n            color=\"success\"\r\n            className=\"ml-2\"\r\n            onClick={() => exportExcel(\"absensi-pegawai/pns\")}\r\n          >\r\n            <span className=\"my-text-button\">Excel</span>{\" \"}\r\n            <CIcon content={cilPrint} />\r\n          </CButton>\r\n        </CPopover>\r\n      </>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  const goToRiwayat = (id) => {\r\n    history.push(`/epekerja/admin/absensi/riwayat-absensi/${id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <h3>Absensi Pegawai Negeri Sipil (PNS)</h3>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          {data.length > 0 ? (\r\n            <DataTable\r\n              columns={columns}\r\n              data={filteredData}\r\n              noHeader\r\n              responsive={true}\r\n              customStyles={customStyles}\r\n              pagination\r\n              // paginationRowsPerPageOptions={[5, 10, 15]}\r\n              // paginationPerPage={5}\r\n              paginationResetDefaultPage={resetPaginationToggle}\r\n              subHeader\r\n              subHeaderComponent={SubHeaderComponentMemo}\r\n              expandableRows\r\n              highlightOnHover\r\n              expandOnRowClicked\r\n              expandableRowsComponent={<ExpandableComponent />}\r\n            />\r\n          ) : loading ? (\r\n            <div>\r\n              <CRow>\r\n                <CCol className=\"text-center\">\r\n                  <img\r\n                    className=\"mt-4 ml-3\"\r\n                    width={30}\r\n                    src={LoadAnimationBlue}\r\n                    alt=\"load-animation\"\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            </div>\r\n          ) : (\r\n            <DataTable\r\n              columns={columns}\r\n              data={filteredData}\r\n              noHeader\r\n              responsive={true}\r\n              customStyles={customStyles}\r\n              pagination\r\n              paginationResetDefaultPage={resetPaginationToggle}\r\n              subHeader\r\n              subHeaderComponent={SubHeaderComponentMemo}\r\n              highlightOnHover\r\n            />\r\n          )}\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AbsensiPNS;\r\n"
  ],
  "sourceRoot": ""
}
