{"version":3,"sources":["views/pages/Admin/Users/TambahUser.js","context/actions/User/insertUser.js"],"names":["MySwal","withReactContent","swal2","TambahUser","history","useHistory","useState","loading","setLoading","selectedFile","setSelectedFile","preview","setPreview","handleSelectedFile","useCallback","objectUrl","URL","createObjectURL","revokeObjectURL","useEffect","initState","name","username","password","foto_profil","undefined","showAlertSuccess","fire","icon","title","showConfirmButton","timer","then","res","push","showAlertError","message","err_message","key","text","result","FOTO_PROFIL_SUPPORTED_FORMATS","validationSchema","Yup","shape","required","test","value","size","includes","type","className","color","onClick","goBack","initialValues","onSubmit","values","formData","FormData","append","entries","pair","console","log","insertUser","handleFormSubmit","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","md","id","placeholder","onChange","onBlur","e","target","files","length","onSelectFile","src","alt","width","disabled","LoadAnimationWhite","axiosInstance","post","header","_boundary","data","catch","err","response"],"mappings":"iTAwBMA,EAASC,IAAiBC,KAsRjBC,UApRI,WACjB,IAAMC,EAAUC,cADO,EAEOC,oBAAS,GAFhB,mBAEhBC,EAFgB,KAEPC,EAFO,OAGiBF,qBAHjB,mBAGhBG,EAHgB,KAGFC,EAHE,OAIOJ,qBAJP,mBAIhBK,EAJgB,KAIPC,EAJO,KAWjBC,EAAqBC,uBAAY,WACrC,GAAKL,EAAL,CAKA,IAAMM,EAAYC,IAAIC,gBAAgBR,GAItC,OAHAG,EAAWG,GAGJ,WACLC,IAAIE,gBAAgBH,IATpBH,EAAW,QAWZ,CAACH,IAEJU,qBAAU,WACRN,MACC,CAACA,IAEJ,IAUMO,EAAY,CAChBC,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,iBAAaC,GAITC,EAAmB,WACvB1B,EAAO2B,KAAK,CACVC,KAAM,UACNC,MAAO,uBACPC,mBAAmB,EACnBC,MAAO,OACNC,MAAK,SAACC,GACP7B,EAAQ8B,KAAK,6BAKXC,EAAiB,SAACC,GACtB,IAAIC,EAAc,GAElB,IAAK,IAAMC,KAAOF,EAChBC,GAAW,UAAOD,EAAQE,GAAf,MAGbtC,EAAO2B,KAAK,CACVC,KAAM,QACNC,MAAO,oBACPU,KAAMF,IACLL,MAAK,SAACQ,GACPhC,GAAW,OAMTiC,EAAgC,CACpC,YACA,aACA,aAEIC,EAAmBC,MAAaC,MAAM,CAC1CvB,KAAMsB,MAAaE,SAAS,oBAC5BvB,SAAUqB,MAAaE,SAAS,wBAChCtB,SAAUoB,MAAaE,SAAS,wBAChCrB,YAAamB,MACVE,SAAS,sBACTC,KACC,OACA,gCACA,SAACC,GAAD,OAAWA,GAASA,EAAMC,MAfP,UAiBpBF,KACC,OACA,wDACA,SAACC,GAAD,OAAWA,GAASN,EAA8BQ,SAASF,EAAMG,WAoBvE,OACE,mCACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAaC,UAAU,iCAAvB,UACE,sDACA,cAAC,IAAD,CACED,KAAK,SACLE,MAAM,UACND,UAAU,aACVE,QAxHa,WACrBjD,EAAQkD,UAmHF,wBASF,cAAC,IAAD,CACEC,cAAenC,EACfsB,iBAAkBA,EAClBc,SAAU,SAACC,GAAD,OAhCO,SAACA,GACxB,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAQH,EAAOpC,MAC/BqC,EAASE,OAAO,WAAYH,EAAOnC,UACnCoC,EAASE,OAAO,WAAYH,EAAOlC,UACnCmC,EAASE,OAAO,QAAS,GACzBF,EAASE,OAAO,cAAeH,EAAOjC,aANH,oBAQlBkC,EAASG,WARS,IAQnC,2BAAqC,CAAC,IAA7BC,EAA4B,QACnCC,QAAQC,IAAIF,IATqB,8BAYnCG,YAAWP,EAAUlD,EAAYkB,EAAkBS,GAoBvB+B,CAAiBT,IAHzC,SAKG,gBACCA,EADD,EACCA,OACAU,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,cAPD,OASC,eAAC,IAAD,CAAOhB,SAAUe,EAAjB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAME,GAAG,IAAT,UACE,eAAC,IAAD,WACE,cAAC,IAAD,mBACA,cAAC,IAAD,CACEvB,KAAK,OACLwB,GAAG,OACHrD,KAAK,OACLsD,YAAY,mCACZC,SAAUP,EACVQ,OAAQP,EACRvB,MAAOU,EAAOpC,MAAQ,GACtB8B,UACEgB,EAAO9C,MAAQ+C,EAAQ/C,KAAO,aAAe,OAGhD8C,EAAO9C,MAAQ+C,EAAQ/C,MACtB,qBAAK8B,UAAU,mBAAf,SAAmCgB,EAAO9C,UAG9C,eAAC,IAAD,WACE,cAAC,IAAD,uBACA,cAAC,IAAD,CACE6B,KAAK,OACLwB,GAAG,WACHrD,KAAK,WACLsD,YAAY,oBACZC,SAAUP,EACVQ,OAAQP,EACRvB,MAAOU,EAAOnC,UAAY,GAC1B6B,UACEgB,EAAO7C,UAAY8C,EAAQ9C,SACvB,aACA,OAGP6C,EAAO7C,UAAY8C,EAAQ9C,UAC1B,qBAAK6B,UAAU,mBAAf,SACGgB,EAAO7C,cAId,eAAC,IAAD,WACE,cAAC,IAAD,uBACA,cAAC,IAAD,CACE4B,KAAK,WACLwB,GAAG,WACHrD,KAAK,WACLsD,YAAY,oBACZC,SAAUP,EACVQ,OAAQP,EACRvB,MAAOU,EAAOlC,UAAY,GAC1B4B,UACEgB,EAAO5C,UAAY6C,EAAQ7C,SACvB,aACA,OAGP4C,EAAO5C,UAAY6C,EAAQ7C,UAC1B,qBAAK4B,UAAU,mBAAf,SACGgB,EAAO5C,cAId,eAAC,IAAD,WACE,cAAC,IAAD,0BACA,cAAC,IAAD,CACE2B,KAAK,OACLwB,GAAG,cACHrD,KAAK,cACLsD,YAAY,uBACZC,SAAU,SAACE,IA5LZ,SAACA,GACfA,EAAEC,OAAOC,OAAmC,IAA1BF,EAAEC,OAAOC,MAAMC,OAKtCvE,EAAgBoE,EAAEC,OAAOC,MAAM,IAJ7BtE,OAAgBe,GA2LIyD,CAAaJ,GACbN,EAAc,cAAeM,EAAEC,OAAOC,MAAM,KAE9CH,OAAQP,EACRnB,UACEgB,EAAO3C,aAAe4C,EAAQ5C,YAC1B,aACA,OAGP2C,EAAO3C,aAAe4C,EAAQ5C,aAC7B,qBAAK2B,UAAU,mBAAf,SACGgB,EAAO3C,cAGXb,GACC,qBACEwE,IAAKxE,EACLyE,IAAKzE,EACLwC,UAAU,0BACVkC,MAAO,MAGX,cAAC,IAAD,CAAWlC,UAAU,aAArB,6FAQR,cAAC,IAAD,UACE,cAAC,IAAD,CACED,KAAK,SACLE,MAAM,UACND,UAAU,OACVmC,WAAU/E,EAJZ,SAMGA,EACC,qBACE8E,MAAO,GACPF,IAAKI,IACLH,IAAI,mBAGN,0B,iCClSpB,+CAEanB,EAAa,SACxBR,EACAjD,EACAkB,EACAS,GAEA3B,GAAW,GAEXgF,IACGC,KADH,cACuBhC,EAAQ,CAC3BiC,OAAQ,CACN,eAAe,iCAAf,OAAiDjC,EAAOkC,cAG3D3D,MAAK,SAACC,GACL8B,QAAQC,IAAI/B,EAAI2D,MAChBpF,GAAW,GACXkB,OAEDmE,OAAM,SAACC,GACN/B,QAAQC,IAAI8B,EAAIC,SAASH,MACzBzD,EAAe2D,EAAIC,SAASH,KAAKzB","file":"static/js/78.d1d47b10.chunk.js","sourcesContent":["import swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CForm,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CFormText,\r\n} from \"@coreui/react\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Formik } from \"formik\";\r\nimport { insertUser } from \"src/context/actions/User/insertUser\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst TambahUser = () => {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  // Menangani preview input gambar setelah dipilih\r\n  const handleSelectedFile = useCallback(() => {\r\n    if (!selectedFile) {\r\n      setPreview(null);\r\n      return;\r\n    }\r\n\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n\r\n    // Free memory when ever this component is unmounted\r\n    return () => {\r\n      URL.revokeObjectURL(objectUrl);\r\n    };\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    handleSelectedFile();\r\n  }, [handleSelectedFile]);\r\n\r\n  const onSelectFile = (e) => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      return;\r\n    }\r\n\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  // Inisialisasi State Formik\r\n  const initState = {\r\n    name: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    foto_profil: undefined,\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success tambah data\r\n  const showAlertSuccess = () => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Tambah Data Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/admin/users\");\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert error tambah data\r\n  const showAlertError = (message) => {\r\n    let err_message = \"\";\r\n\r\n    for (const key in message) {\r\n      err_message += `${message[key]}, `;\r\n    }\r\n\r\n    MySwal.fire({\r\n      icon: \"error\",\r\n      title: \"Tambah Data Gagal\",\r\n      text: err_message,\r\n    }).then((result) => {\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  // Setting validasi form menggunakan YUP & FORMIK\r\n  const FOTO_PROFIL_SIZE = 2048000; // Bytes => 2 mb x 1000 kb x 1000 bytes\r\n  const FOTO_PROFIL_SUPPORTED_FORMATS = [\r\n    \"image/jpg\",\r\n    \"image/jpeg\",\r\n    \"image/png\",\r\n  ];\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Nama harus diisi\"),\r\n    username: Yup.string().required(\"Username harus diisi\"),\r\n    password: Yup.string().required(\"Password harus diisi\"),\r\n    foto_profil: Yup.mixed()\r\n      .required(\"File belum dipilih\")\r\n      .test(\r\n        \"size\",\r\n        \"Kapasitas file maksimal 2 mb\",\r\n        (value) => value && value.size <= FOTO_PROFIL_SIZE\r\n      )\r\n      .test(\r\n        \"type\",\r\n        \"Ekstensi yang diperbolehkan hanya jpg, jpeg, dan png\",\r\n        (value) => value && FOTO_PROFIL_SUPPORTED_FORMATS.includes(value.type)\r\n      ),\r\n  });\r\n\r\n  // Menangani value dari form submit\r\n  const handleFormSubmit = (values) => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"username\", values.username);\r\n    formData.append(\"password\", values.password);\r\n    formData.append(\"level\", 1);\r\n    formData.append(\"foto_profil\", values.foto_profil);\r\n\r\n    for (var pair of formData.entries()) {\r\n      console.log(pair);\r\n    }\r\n\r\n    insertUser(formData, setLoading, showAlertSuccess, showAlertError);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader className=\"d-flex justify-content-between\">\r\n          <h3>Tambah Administrator</h3>\r\n          <CButton\r\n            type=\"button\"\r\n            color=\"warning\"\r\n            className=\"text-white\"\r\n            onClick={goBackToParent}\r\n          >\r\n            Kembali\r\n          </CButton>\r\n        </CCardHeader>\r\n        <Formik\r\n          initialValues={initState}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleFormSubmit(values)}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            setFieldValue,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol md=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel>Nama</CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Masukkan nama user administrator\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.name || \"\"}\r\n                        className={\r\n                          errors.name && touched.name ? \"is-invalid\" : null\r\n                        }\r\n                      />\r\n                      {errors.name && touched.name && (\r\n                        <div className=\"invalid-feedback\">{errors.name}</div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel>Username</CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        placeholder=\"Masukkan username\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.username || \"\"}\r\n                        className={\r\n                          errors.username && touched.username\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.username && touched.username && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.username}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel>Password</CLabel>\r\n                      <CInput\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Masukkan password\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.password || \"\"}\r\n                        className={\r\n                          errors.password && touched.password\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.password && touched.password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel>Foto Profil</CLabel>\r\n                      <CInput\r\n                        type=\"file\"\r\n                        id=\"foto_profil\"\r\n                        name=\"foto_profil\"\r\n                        placeholder=\"Masukkan foto profil\"\r\n                        onChange={(e) => {\r\n                          onSelectFile(e);\r\n                          setFieldValue(\"foto_profil\", e.target.files[0]);\r\n                        }}\r\n                        onBlur={handleBlur}\r\n                        className={\r\n                          errors.foto_profil && touched.foto_profil\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.foto_profil && touched.foto_profil && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.foto_profil}\r\n                        </div>\r\n                      )}\r\n                      {preview && (\r\n                        <img\r\n                          src={preview}\r\n                          alt={preview}\r\n                          className=\"img-thumbnail mt-2 mb-1\"\r\n                          width={200}\r\n                        />\r\n                      )}\r\n                      <CFormText className=\"help-block\">\r\n                        File harus bertipe jpg, jpeg, atau png dengan ukuran\r\n                        kurang dari 2 MB\r\n                      </CFormText>\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter>\r\n                <CButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className=\"mr-1\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  {loading ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>\r\n              </CCardFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TambahUser;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const insertUser = (\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(`admin/users`, values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n"],"sourceRoot":""}