{"version":3,"sources":["views/pages/Admin/MasterData/Agama/EditAgama.js","context/actions/MasterData/Agama/getAgamaById.js","context/actions/MasterData/Agama/editAgama.js"],"names":["MySwal","withReactContent","swal2","EditAgama","params","match","history","useHistory","useState","loading","setLoading","agama","setAgama","useEffect","id","axiosInstance","get","then","res","data","console","log","catch","err","response","getAgamaById","goBackToParent","goBack","initState","showAlertSuccess","useCallback","fire","icon","title","showConfirmButton","timer","push","showAlertError","message","err_message","key","text","result","validationSchema","Yup","shape","required","handleFormSubmit","values","put","errors","editAgama","initialValues","enableReinitialize","onSubmit","touched","handleChange","handleBlur","handleSubmit","xs","md","htmlFor","type","name","placeholder","onChange","onBlur","value","className","color","disabled","width","src","LoadAnimationWhite","alt","onClick"],"mappings":"ySAuBMA,EAASC,IAAiBC,KA6IjBC,UA3IG,SAAC,GAAe,IAC1BC,EADyB,EAAZC,MACED,OACfE,EAAUC,cAFe,EAGDC,oBAAS,GAHR,mBAGxBC,EAHwB,KAGfC,EAHe,OAILF,mBAAS,MAJJ,mBAIxBG,EAJwB,KAIjBC,EAJiB,KAM/BC,qBAAU,WAIR,OCjCwB,SAACC,EAAIF,GAC/BG,IACGC,IADH,kCACkCF,IAC/BG,MAAK,SAACC,GACLN,EAASM,EAAIC,KAAKA,MAClBC,QAAQC,IAAIH,EAAIC,SAEjBG,OAAM,SAACC,GACNH,QAAQC,IAAIE,EAAIC,SAASL,SDuB3BM,CAAarB,EAAOU,GAAIF,GAEjB,kBAAMA,EAAS,SACrB,CAACR,IAGJ,IAAMsB,EAAiB,WACrBpB,EAAQqB,UAIJC,EAAY,CAChBjB,MAAOA,EAAQA,EAAMA,MAAQ,IAIzBkB,EAAmBC,uBAAY,WACnC9B,EAAO+B,KAAK,CACVC,KAAM,UACNC,MAAO,qBACPC,mBAAmB,EACnBC,MAAO,OACNlB,MAAK,SAACC,GACPZ,EAAQ8B,KAAK,0CAEd,CAAC9B,IAGE+B,EAAiBP,uBACrB,SAACQ,GACC,IAAIC,EAAc,GAElB,IAAK,IAAMC,KAAOF,EAChBC,GAAW,UAAOD,EAAQE,GAAf,MAGbxC,EAAO+B,KAAK,CACVC,KAAM,QACNC,MAAO,oBACPQ,KAAMF,IACLtB,MAAK,SAACyB,GACPhC,GAAW,QAGf,IAIIiC,EAAmBC,MAAaC,MAAM,CAC1ClC,MAAOiC,MAAaE,SAAS,wBAIzBC,EAAmB,SAACC,IEpFH,SACvBlC,EACAkC,EACAtC,EACAmB,EACAQ,GAEA3B,GAAW,GAEXK,IACGkC,IADH,kCACkCnC,GAAMkC,GACrC/B,MAAK,SAACC,GACLE,QAAQC,IAAIH,EAAIC,MAChBT,GAAW,GACXmB,OAEDP,OAAM,SAACC,GACNH,QAAQC,IAAIE,EAAIC,SAASL,MACzBkB,EAAed,EAAIC,SAASL,KAAK+B,WFmEnCC,CAAU/C,EAAOU,GAAIkC,EAAQtC,EAAYmB,EAAkBQ,IAG7D,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,mDAEF,cAAC,IAAD,CACEe,cAAexB,EACfe,iBAAkBA,EAClBU,oBAAoB,EACpBC,SAAU,SAACN,GAAD,OAAYD,EAAiBC,IAJzC,SAMG,gBACCA,EADD,EACCA,OACAE,EAFD,EAECA,OACAK,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aAND,OAQC,eAAC,IAAD,CAAOJ,SAAUI,EAAjB,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,IAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAQC,QAAQ,QAAhB,mBACA,cAAC,IAAD,CACEC,KAAK,OACLhD,GAAG,QACHiD,KAAK,QACLC,YAAY,iBACZC,SAAUT,EACVU,OAAQT,EACRU,MAAOnB,EAAOrC,MACdyD,UACElB,EAAOvC,OAAS4C,EAAQ5C,MAAQ,aAAe,OAGlDuC,EAAOvC,OAAS4C,EAAQ5C,OACvB,qBAAKyD,UAAU,mBAAf,SAAmClB,EAAOvC,iBAMpD,eAAC,IAAD,WACE,cAAC,IAAD,CACEmD,KAAK,SACLO,MAAM,UACND,UAAU,OACVE,WAAU7D,EAJZ,SAMGA,EACC,qBACE8D,MAAO,GACPC,IAAKC,IACLC,IAAI,mBAGN,WAGJ,cAAC,IAAD,CAASZ,KAAK,SAASO,MAAM,SAASM,QAASjD,EAA/C","file":"static/js/81.4b8c7bdb.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CButton,\r\n  CForm,\r\n} from \"@coreui/react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { getAgamaById } from \"src/context/actions/MasterData/Agama/getAgamaById\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\nimport { editAgama } from \"src/context/actions/MasterData/Agama/editAgama\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst EditAgama = ({ match }) => {\r\n  const params = match.params;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [agama, setAgama] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Get Agama By ID\r\n    getAgamaById(params.id, setAgama);\r\n\r\n    return () => setAgama(null);\r\n  }, [params]);\r\n\r\n  // Kembali ke menu agama\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  // Inisialisasi State Formik\r\n  const initState = {\r\n    agama: agama ? agama.agama : \"\",\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success tambah data\r\n  const showAlertSuccess = useCallback(() => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Edit Data Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/admin/master-data/agama\");\r\n    });\r\n  }, [history]);\r\n\r\n  // Fungsi untuk menampilkan alert error Edit data\r\n  const showAlertError = useCallback(\r\n    (message) => {\r\n      let err_message = \"\";\r\n\r\n      for (const key in message) {\r\n        err_message += `${message[key]}, `;\r\n      }\r\n\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: \"Tambah Data Gagal\",\r\n        text: err_message,\r\n      }).then((result) => {\r\n        setLoading(false);\r\n      });\r\n    },\r\n    []\r\n  );\r\n\r\n  // Setting validasi form menggunakan YUP & FORMIK\r\n  const validationSchema = Yup.object().shape({\r\n    agama: Yup.string().required(\"Agama harus diisi!\"),\r\n  });\r\n\r\n  // Menangani value form submit\r\n  const handleFormSubmit = (values) => {\r\n    editAgama(params.id, values, setLoading, showAlertSuccess, showAlertError);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <h3>Ubah Data Agama</h3>\r\n        </CCardHeader>\r\n        <Formik\r\n          initialValues={initState}\r\n          validationSchema={validationSchema}\r\n          enableReinitialize={true}\r\n          onSubmit={(values) => handleFormSubmit(values)}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol xs=\"12\" md=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"agama\">Agama</CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"agama\"\r\n                        name=\"agama\"\r\n                        placeholder=\"Masukkan agama\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.agama}\r\n                        className={\r\n                          errors.agama && touched.agama ? \"is-invalid\" : null\r\n                        }\r\n                      />\r\n                      {errors.agama && touched.agama && (\r\n                        <div className=\"invalid-feedback\">{errors.agama}</div>\r\n                      )}\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter>\r\n                <CButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className=\"mr-1\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  {loading ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>\r\n                <CButton type=\"button\" color=\"danger\" onClick={goBackToParent}>\r\n                  Kembali\r\n                </CButton>\r\n              </CCardFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditAgama;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getAgamaById = (id, setAgama) => {\r\n  axiosInstance\r\n    .get(`admin/master-data/agama/${id}`)\r\n    .then((res) => {\r\n      setAgama(res.data.data);\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const editAgama = (\r\n  id,\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .put(`admin/master-data/agama/${id}`, values)\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n"],"sourceRoot":""}