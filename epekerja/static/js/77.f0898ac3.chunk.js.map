{"version":3,"sources":["views/pages/Admin/Akun/EditAkun.js","context/actions/User/editUser.js"],"names":["MySwal","withReactContent","swal2","EditAkun","params","match","history","useHistory","useState","loading","setLoading","selectedFile","setSelectedFile","preview","setPreview","useContext","GlobalContext","userState","userDispatch","data","useEffect","objectUrl","URL","createObjectURL","revokeObjectURL","getImage","foto_profil","initState","name","username","password","undefined","showAlertSuccess","fire","icon","title","showConfirmButton","timer","then","res","push","showAlertError","message","err_message","key","text","result","FOTO_PROFIL_SUPPORTED_FORMATS","validationSchema","Yup","shape","required","test","value","size","includes","type","handleFormSubmit","values","formData","FormData","append","entries","pair","console","log","id_user","axiosInstance","post","header","_boundary","payload","edited_data","catch","err","response","errors","editUser","id","className","color","onClick","goBack","initialValues","enableReinitialize","onSubmit","touched","handleChange","handleBlur","handleSubmit","setFieldValue","md","placeholder","onChange","onBlur","e","target","files","length","onSelectFile","src","alt","width","disabled","LoadAnimationWhite"],"mappings":"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","file":"static/js/77.f0898ac3.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CButton,\r\n  CCardFooter,\r\n  CForm,\r\n  CFormText,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GlobalContext } from \"src/context/Provider\";\r\nimport { getImage } from \"src/context/actions/DownloadFile\";\r\nimport { Formik } from \"formik\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\nimport { editUser } from \"src/context/actions/User/editUser\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst EditAkun = ({ match }) => {\r\n  const params = match.params;\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const { userState, userDispatch } = useContext(GlobalContext);\r\n  const { data } = userState;\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(data ? getImage(data.foto_profil) : \"\");\r\n      return;\r\n    }\r\n\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n\r\n    // Free memory when ever this component is unmounted\r\n    return () => URL.revokeObjectURL(objectUrl);\r\n  }, [selectedFile, data]);\r\n\r\n  const onSelectFile = (e) => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      return;\r\n    }\r\n\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  // Inisialisasi State Formik\r\n  const initState = {\r\n    name: data ? data.name : \"\",\r\n    username: data ? data.username : \"\",\r\n    password: data ? data.password : \"\",\r\n    foto_profil: undefined,\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success edit data\r\n  const showAlertSuccess = () => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Edit Akun Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/admin/akun\");\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert error tambah data\r\n  const showAlertError = (message) => {\r\n    let err_message = \"\";\r\n\r\n    for (const key in message) {\r\n      err_message += `${message[key]}, `;\r\n    }\r\n\r\n    MySwal.fire({\r\n      icon: \"error\",\r\n      title: \"Edit Akun Gagal\",\r\n      text: err_message,\r\n    }).then((result) => {\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  // Setting validasi form menggunakan YUP & FORMIK\r\n  const FOTO_PROFIL_SIZE = 2048000; // Bytes => 2 mb x 1000 kb x 1000 bytes\r\n  const FOTO_PROFIL_SUPPORTED_FORMATS = [\r\n    \"image/jpg\",\r\n    \"image/jpeg\",\r\n    \"image/png\",\r\n  ];\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Nama harus diisi\"),\r\n    username: Yup.string().required(\"Username harus diisi\"),\r\n    foto_profil: Yup.mixed()\r\n      .test(\"size\", \"Kapasitas file maksimal 2 mb\", (value) => {\r\n        if (value) {\r\n          return value && value.size <= FOTO_PROFIL_SIZE;\r\n        }\r\n        return true;\r\n      })\r\n      .test(\r\n        \"type\",\r\n        \"Ekstensi yang diperbolehkan hanya jpg, jpeg, dan png\",\r\n        (value) => {\r\n          if (value) {\r\n            return value && FOTO_PROFIL_SUPPORTED_FORMATS.includes(value.type);\r\n          }\r\n          return true;\r\n        }\r\n      ),\r\n  });\r\n\r\n  // Menangani value dari form submit\r\n  const handleFormSubmit = (values) => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", values.name);\r\n    formData.append(\"username\", values.username);\r\n    if (values.foto_profil) {\r\n      formData.append(\"foto_profil\", values.foto_profil);\r\n    }\r\n\r\n    for (var pair of formData.entries()) {\r\n      console.log(pair);\r\n    }\r\n\r\n    editUser(\r\n      params.id,\r\n      formData,\r\n      setLoading,\r\n      showAlertSuccess,\r\n      showAlertError,\r\n      userDispatch\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CCard>\r\n        <CCardHeader className=\"d-flex justify-content-between\">\r\n          <h3>Edit Akun</h3>\r\n          <CButton\r\n            color=\"warning\"\r\n            className=\"text-white\"\r\n            onClick={goBackToParent}\r\n          >\r\n            Kembali\r\n          </CButton>\r\n        </CCardHeader>\r\n        <Formik\r\n          initialValues={initState}\r\n          enableReinitialize={true}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleFormSubmit(values)}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            setFieldValue,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol md=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel>Nama</CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        placeholder=\"Masukkan nama user administrator\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.name || \"\"}\r\n                        className={\r\n                          errors.name && touched.name ? \"is-invalid\" : null\r\n                        }\r\n                      />\r\n                      {errors.name && touched.name && (\r\n                        <div className=\"invalid-feedback\">{errors.name}</div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel>Username</CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        placeholder=\"Masukkan username\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.username || \"\"}\r\n                        className={\r\n                          errors.username && touched.username\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.username && touched.username && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.username}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n\r\n                    <CFormGroup>\r\n                      <CLabel>Foto Profil</CLabel>\r\n                      <CInput\r\n                        type=\"file\"\r\n                        id=\"foto_profil\"\r\n                        name=\"foto_profil\"\r\n                        placeholder=\"Masukkan foto profil\"\r\n                        onChange={(e) => {\r\n                          onSelectFile(e);\r\n                          setFieldValue(\"foto_profil\", e.target.files[0]);\r\n                        }}\r\n                        onBlur={handleBlur}\r\n                        className={\r\n                          errors.foto_profil && touched.foto_profil\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.foto_profil && touched.foto_profil && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.foto_profil}\r\n                        </div>\r\n                      )}\r\n                      {preview && (\r\n                        <img\r\n                          src={preview}\r\n                          alt={preview}\r\n                          className=\"img-thumbnail mt-2 mb-1\"\r\n                          width={200}\r\n                        />\r\n                      )}\r\n                      <CFormText className=\"help-block\">\r\n                        File harus bertipe jpg, jpeg, atau png dengan ukuran\r\n                        kurang dari 2 MB\r\n                      </CFormText>\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter>\r\n                <CButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className=\"mr-1\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  {loading ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>\r\n              </CCardFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      </CCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditAkun;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const editUser = (\r\n  id_user,\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError,\r\n  userDispatch\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(`admin/users/${id_user}`, values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      userDispatch({\r\n        type: \"SAVE_USER\",\r\n        payload: res.data.edited_data,\r\n      });\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n"],"sourceRoot":""}