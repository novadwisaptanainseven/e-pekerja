{"version":3,"sources":["views/pages/Admin/Users/TambahAkunPegawai.js","../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","context/actions/Pegawai/SemuaPegawai/getSelectPegawai.js","reusable/customStylesSelect.js","context/actions/User/insertUser.js"],"names":["MySwal","withReactContent","swal2","TambahAkunPegawai","history","useHistory","useState","loading","setLoading","pegawai","setPegawai","touchedSelect","setTouchedSelect","useEffect","getSelectPegawai","optionsData","React","useMemo","options","forEach","item","push","value","id_pegawai","label","nama","getDataOptions","showAlertSuccess","fire","icon","title","showConfirmButton","timer","then","res","showAlertError","message","err_message","key","text","result","validationSchema","Yup","shape","required","username","password","className","type","color","onClick","goBack","initialValues","onSubmit","values","formData","FormData","append","entries","pair","console","log","insertUser","handleFormSubmit","errors","touched","handleChange","handleBlur","handleSubmit","setFieldValue","md","styles","customStylesSelect","name","id","onChange","opt","onBlur","placeholder","isSearchable","isClearable","style","fontSize","disabled","width","src","LoadAnimationWhite","alt","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","setData","axiosInstance","get","data","catch","err","control","provided","state","border","post","header","_boundary","response"],"mappings":"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","file":"static/js/50.ddde0dc2.chunk.js","sourcesContent":["import swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CForm,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n} from \"@coreui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Formik } from \"formik\";\r\nimport { insertUser } from \"src/context/actions/User/insertUser\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\nimport { getSelectPegawai } from \"src/context/actions/Pegawai/SemuaPegawai/getSelectPegawai\";\r\nimport Select from \"react-select\";\r\nimport customStylesSelect from \"src/reusable/customStylesSelect\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst TambahAkunPegawai = () => {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [pegawai, setPegawai] = useState([]);\r\n  const [touchedSelect, setTouchedSelect] = useState(false);\r\n\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  // Get select pegawai\r\n  useEffect(() => {\r\n    getSelectPegawai(setPegawai);\r\n  }, []);\r\n\r\n  // Get select options from pegawai\r\n  const getDataOptions = (pegawai) => {\r\n    let options = [];\r\n\r\n    pegawai.forEach((item) => {\r\n      options.push({\r\n        value: item.id_pegawai,\r\n        label: item.nama,\r\n      });\r\n    });\r\n\r\n    return options;\r\n  };\r\n\r\n  const optionsData = React.useMemo(() => getDataOptions(pegawai), [pegawai]);\r\n\r\n  // Inisialisasi State Formik\r\n  const initState = {\r\n    id_pegawai: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success tambah data\r\n  const showAlertSuccess = () => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Tambah Data Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/admin/users\");\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert error tambah data\r\n  const showAlertError = (message) => {\r\n    let err_message = \"\";\r\n\r\n    for (const key in message) {\r\n      err_message += `${message[key]}, `;\r\n    }\r\n\r\n    MySwal.fire({\r\n      icon: \"error\",\r\n      title: \"Tambah Data Gagal\",\r\n      text: err_message,\r\n    }).then((result) => {\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    id_pegawai: Yup.string().required(\"Pegawai harus diisi\"),\r\n    username: Yup.string().required(\"Username harus diisi\"),\r\n    password: Yup.string().required(\"Password harus diisi\"),\r\n  });\r\n\r\n  // Menangani value dari form submit\r\n  const handleFormSubmit = (values) => {\r\n    const formData = new FormData();\r\n    formData.append(\"id_pegawai\", values.id_pegawai);\r\n    formData.append(\"username\", values.username);\r\n    formData.append(\"password\", values.password);\r\n    formData.append(\"level\", 2);\r\n\r\n    for (var pair of formData.entries()) {\r\n      console.log(pair);\r\n    }\r\n\r\n    insertUser(formData, setLoading, showAlertSuccess, showAlertError);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader className=\"d-flex justify-content-between\">\r\n          <h3>Tambah Akun Pegawai</h3>\r\n          <CButton\r\n            type=\"button\"\r\n            color=\"warning\"\r\n            className=\"text-white\"\r\n            onClick={goBackToParent}\r\n          >\r\n            Kembali\r\n          </CButton>\r\n        </CCardHeader>\r\n        <Formik\r\n          initialValues={initState}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleFormSubmit(values)}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            setFieldValue,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol md=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel>Pegawai</CLabel>\r\n                      <Select\r\n                        styles={customStylesSelect(touchedSelect)}\r\n                        name=\"id_pegawai\"\r\n                        id=\"id_pegawai\"\r\n                        onChange={(opt) => {\r\n                          setTouchedSelect(false);\r\n                          setFieldValue(\"id_pegawai\", opt ? opt.value : \"\");\r\n                        }}\r\n                        onBlur={() =>\r\n                          values.id_pegawai\r\n                            ? setTouchedSelect(false)\r\n                            : setTouchedSelect(true)\r\n                        }\r\n                        // onFocus={() => setTouchedSelect(true)}\r\n                        placeholder=\"-- Pilih Pegawai --\"\r\n                        isSearchable\r\n                        isClearable\r\n                        options={optionsData}\r\n                      />\r\n                      {!values.id_pegawai && touchedSelect && (\r\n                        <div\r\n                          className=\"text-danger mt-1\"\r\n                          style={{ fontSize: \"0.8em\" }}\r\n                        >\r\n                          Nama penerima harus diisi\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel>Username</CLabel>\r\n                      <CInput\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        placeholder=\"Masukkan username\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.username || \"\"}\r\n                        className={\r\n                          errors.username && touched.username\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.username && touched.username && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.username}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel>Password</CLabel>\r\n                      <CInput\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Masukkan password\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.password || \"\"}\r\n                        className={\r\n                          errors.password && touched.password\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.password && touched.password && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.password}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter>\r\n                <CButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className=\"mr-1\"\r\n                  disabled={loading ? true : false}\r\n                  onClick={() => {\r\n                    !values.id_pegawai\r\n                      ? setTouchedSelect(true)\r\n                      : setTouchedSelect(false);\r\n                  }}\r\n                >\r\n                  {loading ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>\r\n              </CCardFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TambahAkunPegawai;\r\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getSelectPegawai = (setData) => {\r\n  axiosInstance\r\n    .get(\"admin/pegawai/semua-pegawai\")\r\n    .then((res) => {\r\n      setData(res.data.data);\r\n      // console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      // console.log(err.response.data);\r\n    });\r\n};\r\n","const customStylesSelect = (touchedSelect) => {\r\n  return {\r\n    control: (provided, state) => ({\r\n      ...provided,\r\n      border: !touchedSelect ? provided.border : \"1px solid #e55353\",\r\n    }),\r\n  };\r\n};\r\n\r\nexport default customStylesSelect;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const insertUser = (\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(`admin/users`, values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n"],"sourceRoot":""}