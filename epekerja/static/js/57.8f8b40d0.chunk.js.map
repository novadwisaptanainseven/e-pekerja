{"version":3,"sources":["views/pages/Admin/Penghargaan/TambahPenghargaan.js","context/actions/Penghargaan/insertPengharaan.js","../node_modules/@emotion/unitless/dist/unitless.browser.esm.js","context/actions/Pegawai/SemuaPegawai/getSelectPegawai.js"],"names":["MySwal","withReactContent","swal2","TambahPenghargaan","history","useHistory","useState","pegawai","setPegawai","selectedFile","setSelectedFile","loading","setLoading","preview","setPreview","touchedSelect","setTouchedSelect","useEffect","getSelectPegawai","optionsData","React","useMemo","options","forEach","item","push","value","id_pegawai","label","nama","getDataOptions","handleSelectedFile","useCallback","filename","name","initState","nama_penerima","nama_penghargaan","pemberi","tgl_penghargaan","dokumentasi","undefined","showAlertSuccess","fire","icon","title","showConfirmButton","timer","then","res","showAlertError","message","err_message","key","text","result","DOKUMENTASI_SUPPORTED_FORMATS","validationSchema","Yup","shape","required","test","size","includes","type","handleFormSubmit","values","formData","FormData","append","entries","pair","console","log","axiosInstance","post","header","_boundary","data","catch","err","response","errors","insertPenghargaan","customStyles","control","provided","state","border","className","color","onClick","goBack","initialValues","onSubmit","touched","handleChange","handleBlur","handleSubmit","setFieldValue","row","md","styles","id","onChange","opt","onFocus","placeholder","isSearchable","isClearable","style","fontSize","onBlur","e","target","files","length","onSelectFile","disabled","width","src","LoadAnimationWhite","alt","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","setData","get"],"mappings":"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","file":"static/js/57.8f8b40d0.chunk.js","sourcesContent":["import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CLabel,\r\n} from \"@coreui/react\";\r\nimport { Formik } from \"formik\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\nimport { getSelectPegawai } from \"src/context/actions/Pegawai/SemuaPegawai/getSelectPegawai\";\r\nimport { insertPenghargaan } from \"src/context/actions/Penghargaan/insertPengharaan\";\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst TambahPenghargaan = () => {\r\n  const history = useHistory();\r\n\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const [pegawai, setPegawai] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [preview, setPreview] = useState();\r\n  const [touchedSelect, setTouchedSelect] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Get Select Pegawai\r\n    getSelectPegawai(setPegawai);\r\n  }, []);\r\n\r\n  const getDataOptions = (pegawai) => {\r\n    let options = [];\r\n\r\n    pegawai.forEach((item) => {\r\n      options.push({\r\n        value: item.id_pegawai,\r\n        label: item.nama,\r\n      });\r\n    });\r\n    return options;\r\n  };\r\n\r\n  const optionsData = React.useMemo(() => getDataOptions(pegawai), [pegawai]);\r\n\r\n  // Menangani preview input gambar setelah dipilih\r\n  const handleSelectedFile = useCallback(() => {\r\n    if (!selectedFile) {\r\n      setPreview(null);\r\n      return;\r\n    }\r\n\r\n    const filename = selectedFile.name;\r\n    setPreview(filename);\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    handleSelectedFile();\r\n  }, [handleSelectedFile]);\r\n\r\n  const onSelectFile = (e) => {\r\n    if (!e.target.files || e.target.files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      return;\r\n    }\r\n\r\n    setSelectedFile(e.target.files[0]);\r\n  };\r\n\r\n  // Inisialisasi State Formik\r\n  const initState = {\r\n    id_pegawai: \"\",\r\n    nama_penerima: \"\",\r\n    nama_penghargaan: \"\",\r\n    pemberi: \"\",\r\n    tgl_penghargaan: \"\",\r\n    dokumentasi: undefined,\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success tambah data\r\n  const showAlertSuccess = () => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Tambah Data Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/admin/penghargaan\");\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert error tambah data\r\n  const showAlertError = (message) => {\r\n    let err_message = \"\";\r\n\r\n    for (const key in message) {\r\n      err_message += `${message[key]}, `;\r\n    }\r\n\r\n    MySwal.fire({\r\n      icon: \"error\",\r\n      title: \"Tambah Data Gagal\",\r\n      text: err_message,\r\n    }).then((result) => {\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  // Setting validasi form menggunakan YUP & FORMIK\r\n  const DOKUMENTASI_SIZE = 2048000; // Bytes => 2 mb x 1000 kb x 1000 bytes\r\n  const DOKUMENTASI_SUPPORTED_FORMATS = [\r\n    \"application/pdf\",\r\n    \"image/jpg\",\r\n    \"image/jpeg\",\r\n    \"image/png\",\r\n  ];\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    id_pegawai: Yup.string().required(\"Penerima harus diisi\"),\r\n    nama_penghargaan: Yup.string().required(\"Nama penghargaan harus diisi!\"),\r\n    pemberi: Yup.string().required(\"Pemberi harus diisi!\"),\r\n    tgl_penghargaan: Yup.string().required(\"Tanggal penghargaan harus diisi!\"),\r\n    dokumentasi: Yup.mixed()\r\n      .required(\"File belum dipilih\")\r\n      .test(\r\n        \"size\",\r\n        \"Kapasitas file maksimal 2 mb\",\r\n        (value) => value && value.size <= DOKUMENTASI_SIZE\r\n      )\r\n      .test(\r\n        \"type\",\r\n        \"Ekstensi yang diperbolehkan hanya pdf, jpg, jpeg, dan png\",\r\n        (value) => value && DOKUMENTASI_SUPPORTED_FORMATS.includes(value.type)\r\n      ),\r\n  });\r\n\r\n  // Menangani value dari form submit\r\n  const handleFormSubmit = (values) => {\r\n    const formData = new FormData();\r\n    formData.append(\"id_pegawai\", values.id_pegawai);\r\n    formData.append(\"nama_penghargaan\", values.nama_penghargaan);\r\n    formData.append(\"pemberi\", values.pemberi);\r\n    formData.append(\"tgl_penghargaan\", values.tgl_penghargaan);\r\n    formData.append(\"dokumentasi\", values.dokumentasi);\r\n\r\n    for (var pair of formData.entries()) {\r\n      console.log(pair);\r\n    }\r\n\r\n    insertPenghargaan(formData, setLoading, showAlertSuccess, showAlertError);\r\n  };\r\n\r\n  const customStyles = {\r\n    control: (provided, state) => ({\r\n      // none of react-select's styles are passed to <Control />\r\n      ...provided,\r\n      border: !touchedSelect ? provided.border : \"1px solid #e55353\",\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader className=\"d-flex justify-content-between\">\r\n          <h3>Tambah Penghargaan</h3>\r\n          <CButton\r\n            type=\"button\"\r\n            color=\"warning\"\r\n            className=\"text-white\"\r\n            onClick={goBackToParent}\r\n          >\r\n            Kembali\r\n          </CButton>\r\n        </CCardHeader>\r\n        <Formik\r\n          initialValues={initState}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleFormSubmit(values)}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            setFieldValue,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit} className=\"form-horizontal\">\r\n              <CCardBody>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel>Nama penerima</CLabel>\r\n                  </CCol>\r\n                  <CCol>\r\n                    {/* <CSelect\r\n                      custom\r\n                      name=\"id_pegawai\"\r\n                      id=\"id_pegawai\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.id_pegawai}\r\n                      className={\r\n                        errors.id_pegawai && touched.id_pegawai\r\n                          ? \"is-invalid\"\r\n                          : null\r\n                      }\r\n                    >\r\n                      <option value=\"\">-- Pilih Pegawai --</option>\r\n                      {pegawai.map((item, index) => (\r\n                        <option key={index} value={item.id_pegawai}>\r\n                          {item.nama}\r\n                        </option>\r\n                      ))}\r\n                    </CSelect> */}\r\n                    <Select\r\n                      styles={customStyles}\r\n                      name=\"id_pegawai\"\r\n                      id=\"id_pegawai\"\r\n                      onChange={(opt) => {\r\n                        setTouchedSelect(false);\r\n                        setFieldValue(\"id_pegawai\", opt ? opt.value : \"\");\r\n                      }}\r\n                      onFocus={() => setTouchedSelect(true)}\r\n                      placeholder=\"-- Pilih Pegawai --\"\r\n                      isSearchable\r\n                      isClearable\r\n                      options={optionsData}\r\n                    />\r\n                    {!values.id_pegawai && touchedSelect && (\r\n                      <div\r\n                        className=\"text-danger mt-1\"\r\n                        style={{ fontSize: \"0.8em\" }}\r\n                      >\r\n                        Nama penerima harus diisi\r\n                      </div>\r\n                    )}\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel>Nama Penghargaan</CLabel>\r\n                  </CCol>\r\n                  <CCol>\r\n                    <CInput\r\n                      type=\"text\"\r\n                      name=\"nama_penghargaan\"\r\n                      id=\"nama_penghargaan\"\r\n                      placeholder=\"Masukkan nama penghargaan \"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.nama_penghargaan}\r\n                      className={\r\n                        errors.nama_penghargaan && touched.nama_penghargaan\r\n                          ? \"is-invalid\"\r\n                          : null\r\n                      }\r\n                    />\r\n                    {errors.nama_penghargaan && touched.nama_penghargaan && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.nama_penghargaan}\r\n                      </div>\r\n                    )}\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel>Pemberi</CLabel>\r\n                  </CCol>\r\n                  <CCol>\r\n                    <CInput\r\n                      type=\"text\"\r\n                      name=\"pemberi\"\r\n                      id=\"pemberi\"\r\n                      placeholder=\"Masukkan nama penghargaan \"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.pemberi}\r\n                      className={\r\n                        errors.pemberi && touched.pemberi ? \"is-invalid\" : null\r\n                      }\r\n                    />\r\n                    {errors.pemberi && touched.pemberi && (\r\n                      <div className=\"invalid-feedback\">{errors.pemberi}</div>\r\n                    )}\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel>Tgl. Penghargaan</CLabel>\r\n                  </CCol>\r\n                  <CCol>\r\n                    <CInput\r\n                      type=\"date\"\r\n                      id=\"tgl_penghargaan\"\r\n                      name=\"tgl_penghargaan\"\r\n                      placeholder=\"Masukkan tanggal penghargaan\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.tgl_penghargaan}\r\n                      className={\r\n                        errors.tgl_penghargaan && touched.tgl_penghargaan\r\n                          ? \"is-invalid\"\r\n                          : null\r\n                      }\r\n                    />\r\n                    {errors.tgl_penghargaan && touched.tgl_penghargaan && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.tgl_penghargaan}\r\n                      </div>\r\n                    )}\r\n                  </CCol>\r\n                </CFormGroup>\r\n                <CFormGroup row>\r\n                  <CCol md=\"3\">\r\n                    <CLabel>\r\n                      File Dokumentasi Penghargaan <br />\r\n                      {/* (Jika Ada) */}\r\n                    </CLabel>\r\n                  </CCol>\r\n                  <CCol>\r\n                    <CInput\r\n                      type=\"file\"\r\n                      name=\"dokumentasi\"\r\n                      id=\"dokumentasi\"\r\n                      // custom\r\n                      onChange={(e) => {\r\n                        onSelectFile(e);\r\n                        setFieldValue(\"dokumentasi\", e.target.files[0]);\r\n                      }}\r\n                      onBlur={handleBlur}\r\n                      className={\r\n                        errors.dokumentasi && touched.dokumentasi\r\n                          ? \"is-invalid\"\r\n                          : null\r\n                      }\r\n                    />\r\n                    {errors.dokumentasi && touched.dokumentasi && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.dokumentasi}\r\n                      </div>\r\n                    )}\r\n\r\n                    {preview && <p className=\"mt-1\">{preview}</p>}\r\n                    <CFormText className=\"help-block\">\r\n                      File harus bertipe pdf, jpg, jpeg, atau png dengan ukuran\r\n                      kurang dari 2 MB\r\n                    </CFormText>\r\n                  </CCol>\r\n                </CFormGroup>\r\n              </CCardBody>\r\n              <CCardFooter>\r\n                <CButton\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1\"\r\n                  disabled={loading ? true : false}\r\n                  onClick={() => {\r\n                    !values.id_pegawai\r\n                      ? setTouchedSelect(true)\r\n                      : setTouchedSelect(false);\r\n                  }}\r\n                >\r\n                  {loading ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>\r\n              </CCardFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TambahPenghargaan;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const insertPenghargaan = (\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(\"admin/penghargaan\", values, {\r\n      header: {\r\n        \"Content-Type\": `multipart/form-data; boundary=${values._boundary}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n","var unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexport default unitlessKeys;\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getSelectPegawai = (setData) => {\r\n  axiosInstance\r\n    .get(\"admin/pegawai/semua-pegawai\")\r\n    .then((res) => {\r\n      setData(res.data.data);\r\n      // console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      // console.log(err.response.data);\r\n    });\r\n};\r\n"],"sourceRoot":""}