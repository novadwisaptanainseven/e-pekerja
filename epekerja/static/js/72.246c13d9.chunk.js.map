{"version":3,"sources":["views/pages/Admin/MasterData/SubBidang/EditSubBidang.js","context/actions/MasterData/SubBidang/getSubBidangById.js","context/actions/MasterData/SubBidang/editSubBidang.js","context/actions/MasterData/Bidang/getSelectBidang.js"],"names":["MySwal","withReactContent","swal2","EditSubBidang","match","history","useHistory","params","useState","loading","setLoading","bidang","setBidang","subBidang","setSubBidang","useEffect","getSelectBidang","id","axiosInstance","get","then","res","data","catch","err","getSubBidangById","goBackToParent","goBack","initState","id_bidang","nama_sub_bidang","keterangan","showAlertSuccess","fire","icon","title","showConfirmButton","timer","push","showAlertError","message","err_message","key","text","result","validationSchema","Yup","shape","required","handleFormSubmit","values","post","response","errors","editSubBidang","initialValues","enableReinitialize","onSubmit","touched","handleChange","handleBlur","handleSubmit","xs","md","custom","name","onChange","onBlur","value","className","length","map","item","index","nama_bidang","htmlFor","placeholder","type","color","disabled","width","src","LoadAnimationWhite","alt","onClick"],"mappings":"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","file":"static/js/72.246c13d9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport swal2 from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { LoadAnimationWhite } from \"src/assets\";\r\n\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CRow,\r\n  CCol,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CCardFooter,\r\n  CButton,\r\n  CForm,\r\n  CSelect,\r\n} from \"@coreui/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getSelectBidang } from \"src/context/actions/MasterData/Bidang/getSelectBidang\";\r\nimport { getSubBidangById } from \"src/context/actions/MasterData/SubBidang/getSubBidangById\";\r\nimport { editSubBidang } from \"src/context/actions/MasterData/SubBidang/editSubBidang\";\r\n\r\nconst MySwal = withReactContent(swal2);\r\n\r\nconst EditSubBidang = ({ match }) => {\r\n  const history = useHistory();\r\n  const params = match.params;\r\n  const [loading, setLoading] = useState(false);\r\n  const [bidang, setBidang] = useState([]);\r\n  const [subBidang, setSubBidang] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Get all bidang\r\n    getSelectBidang(setBidang);\r\n    // Get sub bidang by id\r\n    getSubBidangById(params.id, setSubBidang);\r\n  }, [params]);\r\n\r\n  // Kembali ke menu agama\r\n  const goBackToParent = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  // Inisialisasi state formik\r\n  const initState = {\r\n    id_bidang: subBidang ? subBidang.id_bidang : \"\",\r\n    nama_sub_bidang: subBidang ? subBidang.nama_sub_bidang : \"\",\r\n    keterangan: subBidang ? subBidang.keterangan : \"\",\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert success edit data\r\n  const showAlertSuccess = () => {\r\n    MySwal.fire({\r\n      icon: \"success\",\r\n      title: \"Edit Data Berhasil\",\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n    }).then((res) => {\r\n      history.push(\"/epekerja/admin/master-data/sub-bidang\");\r\n    });\r\n  };\r\n\r\n  // Fungsi untuk menampilkan alert error edit data\r\n  const showAlertError = (message) => {\r\n    let err_message = \"\";\r\n\r\n    for (const key in message) {\r\n      err_message += `${message[key]}, `;\r\n    }\r\n\r\n    MySwal.fire({\r\n      icon: \"error\",\r\n      title: \"Edit Data Gagal\",\r\n      text: err_message,\r\n    }).then((result) => {\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  // Setting validasi form menggunakan YUP & FORMIK\r\n  const validationSchema = Yup.object().shape({\r\n    id_bidang: Yup.string().required(\"Bidang harus dipilih!\"),\r\n    nama_sub_bidang: Yup.string().required(\"Sub Bidang harus diisi!\"),\r\n    keterangan: Yup.string().required(\"Keterangan harus diisi!\"),\r\n  });\r\n\r\n  // Menangani value form submit\r\n  const handleFormSubmit = (values) => {\r\n    // Memanggil method editSubBidang untuk mengubah data SubBidang\r\n    editSubBidang(\r\n      params.id,\r\n      values,\r\n      setLoading,\r\n      showAlertSuccess,\r\n      showAlertError\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader>\r\n          <h3>Ubah Sub Bidang</h3>\r\n        </CCardHeader>\r\n        <Formik\r\n          initialValues={initState}\r\n          validationSchema={validationSchema}\r\n          enableReinitialize={true}\r\n          onSubmit={(values) => handleFormSubmit(values)}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n          }) => (\r\n            <CForm onSubmit={handleSubmit}>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol xs=\"12\" md=\"6\">\r\n                    <CFormGroup>\r\n                      <CLabel>Bidang</CLabel>\r\n                      <CSelect\r\n                        custom\r\n                        name=\"id_bidang\"\r\n                        id=\"id_bidang\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.id_bidang}\r\n                        className={\r\n                          errors.id_bidang && touched.id_bidang\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      >\r\n                        <option value=\"\">-- Pilih Bidang --</option>\r\n                        {bidang.length > 0 &&\r\n                          bidang.map((item, index) => (\r\n                            <option key={index} value={item.id_bidang}>\r\n                              {item.nama_bidang}\r\n                            </option>\r\n                          ))}\r\n                      </CSelect>\r\n                      {errors.id_bidang && touched.id_bidang && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.id_bidang}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"name\">Sub Bidang</CLabel>\r\n                      <CInput\r\n                        id=\"nama_sub_bidang\"\r\n                        name=\"nama_sub_bidang\"\r\n                        placeholder=\"Masukkan sub bidang\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.nama_sub_bidang}\r\n                        className={\r\n                          errors.nama_sub_bidang && touched.nama_sub_bidang\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.nama_sub_bidang && touched.nama_sub_bidang && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.nama_sub_bidang}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                    <CFormGroup>\r\n                      <CLabel htmlFor=\"name\">Keterangan</CLabel>\r\n                      <CInput\r\n                        id=\"keterangan\"\r\n                        name=\"keterangan\"\r\n                        placeholder=\"Masukkan keterangan\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.keterangan}\r\n                        className={\r\n                          errors.keterangan && touched.keterangan\r\n                            ? \"is-invalid\"\r\n                            : null\r\n                        }\r\n                      />\r\n                      {errors.keterangan && touched.keterangan && (\r\n                        <div className=\"invalid-feedback\">\r\n                          {errors.keterangan}\r\n                        </div>\r\n                      )}\r\n                    </CFormGroup>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n              <CCardFooter>\r\n                <CButton\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  className=\"mr-1\"\r\n                  disabled={loading ? true : false}\r\n                >\r\n                  {loading ? (\r\n                    <img\r\n                      width={21}\r\n                      src={LoadAnimationWhite}\r\n                      alt=\"load-animation\"\r\n                    />\r\n                  ) : (\r\n                    \"Simpan\"\r\n                  )}\r\n                </CButton>\r\n                <CButton type=\"button\" color=\"danger\" onClick={goBackToParent}>\r\n                  Kembali\r\n                </CButton>\r\n              </CCardFooter>\r\n            </CForm>\r\n          )}\r\n        </Formik>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditSubBidang;\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getSubBidangById = (id, setSubBidang) => {\r\n  axiosInstance\r\n    .get(`admin/master-data/sub-bidang/${id}`)\r\n    .then((res) => {\r\n      setSubBidang(res.data.data);\r\n      // console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      // console.log(err.response.data);\r\n    });\r\n};\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const editSubBidang = (\r\n  id,\r\n  values,\r\n  setLoading,\r\n  showAlertSuccess,\r\n  showAlertError\r\n) => {\r\n  setLoading(true);\r\n\r\n  axiosInstance\r\n    .post(`admin/master-data/sub-bidang/${id}`, values)\r\n    .then((res) => {\r\n      //console.log(res.data);\r\n      setLoading(false);\r\n      showAlertSuccess();\r\n    })\r\n    .catch((err) => {\r\n      //console.log(err.response.data);\r\n      showAlertError(err.response.data.errors);\r\n    });\r\n};\r\n","import axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getSelectBidang = (setBidang) => {\r\n  axiosInstance\r\n    .get(\"admin/master-data/bidang\")\r\n    .then((res) => {\r\n      setBidang(res.data.data);\r\n      // console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      // console.log(err.response.data);\r\n    });\r\n};\r\n"],"sourceRoot":""}