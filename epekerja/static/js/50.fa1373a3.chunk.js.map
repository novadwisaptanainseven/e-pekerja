{"version":3,"sources":["views/pages/Admin/Absensi/RekapAbsensi.js","context/actions/Absensi/getAllRekapAbsensiPerTahun.js","context/actions/Absensi/getAllRekapAbsensiByDate.js","context/actions/DownloadFile/printAbsensiByDate.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","context/actions/DownloadFile/printAbsensi.js","context/actions/DownloadFile/printAbsensiByIdPegawai.js"],"names":["TextField","styled","input","ClearButton","button","FilterComponent","filterText","onFilter","onClear","id","type","placeholder","aria-label","value","onChange","onClick","Kalender","handleDateChange","state","editableDateInputs","item","moveRangeOnFirstSelection","ranges","MemoizeKalender","React","memo","RekapAbsensi","useState","setFilterText","resetPaginationToggle","setResetPaginationToggle","Date","getFullYear","dataTahun","setDataTahun","collapse2","setCollapse2","useContext","GlobalContext","rekapAbsensiState","rekapAbsensiDispatch","data","loading","startDate","endDate","key","setState","formattedDate","setFormattedDate","useEffect","dispatch","tahun","LOADING","axiosInstance","get","then","res","SUCCESS","payload","console","log","catch","err","ERROR","response","values","filteredData","filter","nama","toLowerCase","includes","columns","name","selector","sortable","wrap","maxWidth","cell","row","data-tag","color","className","size","printRekapAbsensiByIdPegawai","id_pegawai","content","cilPrint","exportExcel","SubHeaderComponentMemo","useMemo","e","target","useCallback","selection","timestampStartDate","parse","timestampEndDate","format","md","show","costum","handleChangeFilterTahun","current_year","arr","i","push","filterTahun","map","index","width","src","LoadAnimationBlue","alt","printRekapAbsensiByStatusPegawai","status","window","open","localStorage","baseURL","length","noHeader","responsive","customStyles","headCells","style","fontSize","pagination","subHeader","subHeaderComponent","highlightOnHover","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","idPegawai"],"mappings":"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","file":"static/js/50.fa1373a3.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardHeader,\r\n  CCardBody,\r\n  CButton,\r\n  CForm,\r\n  CRow,\r\n  CCol,\r\n  CCollapse,\r\n  CCardFooter,\r\n  CPopover,\r\n  CFormGroup,\r\n  CLabel,\r\n  CSelect,\r\n} from \"@coreui/react\";\r\nimport DataTable from \"react-data-table-component\";\r\n// import styled from \"styled-components\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport { cilPrint } from \"@coreui/icons\";\r\nimport \"react-date-range/dist/styles.css\"; // main css file\r\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\r\nimport { DateRange } from \"react-date-range\";\r\nimport { format } from \"date-fns\";\r\nimport styled from \"styled-components\";\r\nimport { GlobalContext } from \"src/context/Provider\";\r\nimport { getAllRekapAbsensiPerTahun } from \"src/context/actions/Absensi/getAllRekapAbsensiPerTahun\";\r\nimport { LoadAnimationBlue } from \"src/assets\";\r\nimport { printRekapAbsensiByStatusPegawai } from \"src/context/actions/DownloadFile/printAbsensi\";\r\nimport { printRekapAbsensiByIdPegawai } from \"src/context/actions/DownloadFile/printAbsensiByIdPegawai\";\r\nimport { getAllRekapAbsensiByDate } from \"src/context/actions/Absensi/getAllRekapAbsensiByDate\";\r\nimport { printRekapAbsensiByDate } from \"src/context/actions/DownloadFile/printAbsensiByDate\";\r\nimport exportExcel from \"src/context/actions/DownloadFile/Excel/Pegawai/exportExcel\";\r\n\r\nconst TextField = styled.input`\r\n  height: 37px;\r\n  width: 200px;\r\n  border-radius: 3px;\r\n  border-top-left-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  border: 1px solid #e5e5e5;\r\n  padding: 0 32px 0 16px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ClearButton = styled.button`\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  height: 37px;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #3e5973;\r\n  border: none;\r\n  color: white;\r\n  padding: 0 10px;\r\n  transition: 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #283c4f;\r\n  }\r\n`;\r\n\r\n// Handle filter pencarian\r\n\r\nconst FilterComponent = ({ filterText, onFilter, onClear }) => (\r\n  <>\r\n    <TextField\r\n      id=\"search\"\r\n      type=\"text\"\r\n      placeholder=\"Cari pegawai\"\r\n      aria-label=\"Search Input\"\r\n      value={filterText}\r\n      onChange={onFilter}\r\n    />\r\n    <ClearButton type=\"button\" onClick={onClear}>\r\n      Reset\r\n    </ClearButton>\r\n  </>\r\n);\r\n\r\n// Komponen Kalender\r\nconst Kalender = ({ handleDateChange, state }) => {\r\n  return (\r\n    <>\r\n      <DateRange\r\n        editableDateInputs={true}\r\n        onChange={(item) => handleDateChange(item)}\r\n        moveRangeOnFirstSelection={false}\r\n        ranges={state}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst MemoizeKalender = React.memo(Kalender);\r\n\r\nconst RekapAbsensi = () => {\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\r\n  const [dataTahun, setDataTahun] = useState(new Date().getFullYear());\r\n  const [collapse2, setCollapse2] = useState(false);\r\n  const { rekapAbsensiState, rekapAbsensiDispatch } = useContext(GlobalContext);\r\n  const { data, loading } = rekapAbsensiState;\r\n  const [state, setState] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n  const [formattedDate, setFormattedDate] = useState({\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Get rekap absensi per tahun\r\n    if (dataTahun) {\r\n      getAllRekapAbsensiPerTahun(rekapAbsensiDispatch, dataTahun);\r\n      setFormattedDate({\r\n        startDate: \"\",\r\n        endDate: \"\",\r\n      });\r\n    }\r\n  }, [rekapAbsensiDispatch, dataTahun]);\r\n\r\n  useEffect(() => {\r\n    if (formattedDate.startDate && formattedDate.endDate) {\r\n      getAllRekapAbsensiByDate(rekapAbsensiDispatch, formattedDate);\r\n      setDataTahun(\"\");\r\n    }\r\n  }, [formattedDate, rekapAbsensiDispatch]);\r\n\r\n  const filteredData = data.filter((item) => {\r\n    if (item.nama) {\r\n      if (item.nama.toLowerCase().includes(filterText.toLowerCase())) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Nama\",\r\n      selector: \"nama\",\r\n      sortable: true,\r\n      // maxWidth: \"150px\",\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: \"Jabatan\",\r\n      selector: \"jabatan\",\r\n      sortable: true,\r\n      wrap: true,\r\n      // maxWidth: \"150px\",\r\n    },\r\n    {\r\n      name: \"Hadir\",\r\n      selector: \"hadir\",\r\n      sortable: true,\r\n      wrap: true,\r\n      maxWidth: \"80px\",\r\n    },\r\n    {\r\n      name: \"Izin\",\r\n      selector: \"izin\",\r\n      sortable: true,\r\n      wrap: true,\r\n      maxWidth: \"80px\",\r\n    },\r\n    {\r\n      name: \"Sakit\",\r\n      selector: \"sakit\",\r\n      sortable: true,\r\n      wrap: true,\r\n      maxWidth: \"80px\",\r\n    },\r\n    {\r\n      name: \"Cuti\",\r\n      selector: \"cuti\",\r\n      sortable: true,\r\n      wrap: true,\r\n      maxWidth: \"80px\",\r\n    },\r\n    {\r\n      name: \"Tanpa Keterangan\",\r\n      selector: \"tanpa_keterangan\",\r\n      sortable: true,\r\n      wrap: true,\r\n      maxWidth: \"200px\",\r\n    },\r\n    {\r\n      maxWidth: \"180px\",\r\n      name: \"Action\",\r\n      sortable: true,\r\n      cell: (row) => (\r\n        <div data-tag=\"allowRowEvents\">\r\n          <CButton\r\n            color=\"warning\"\r\n            className=\"text-white mr-1\"\r\n            size=\"sm\"\r\n            onClick={() => printRekapAbsensiByIdPegawai(row.id_pegawai)}\r\n          >\r\n            PDF <CIcon content={cilPrint} />\r\n          </CButton>\r\n          <CButton\r\n            color=\"success\"\r\n            className=\"text-white\"\r\n            size=\"sm\"\r\n            onClick={() => exportExcel(\"absensi-per-tahun/\" + row.id_pegawai)}\r\n          >\r\n            Excel <CIcon content={cilPrint} />\r\n          </CButton>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headCells: {\r\n      style: {\r\n        fontSize: \"1.15em\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const SubHeaderComponentMemo = React.useMemo(() => {\r\n    // const cetakRekapAbsensi = () => {\r\n    //   printRekapAbsensiByStatusPegawai(\"semua\", dataTahun);\r\n    // };\r\n\r\n    const handleClear = () => {\r\n      if (filterText) {\r\n        setResetPaginationToggle(!resetPaginationToggle);\r\n        setFilterText(\"\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <FilterComponent\r\n          onFilter={(e) => setFilterText(e.target.value)}\r\n          onClear={handleClear}\r\n          filterText={filterText}\r\n        />\r\n        {/* <CPopover content=\"Cetak Rekapan Absensi Pegawai\">\r\n          <CButton\r\n            type=\"button\"\r\n            color=\"info\"\r\n            className=\"ml-2\"\r\n            onClick={() => cetakRekapAbsensi()}\r\n          >\r\n            <span className=\"my-text-button\">Cetak Rekapan Absensi</span>{\" \"}\r\n            <CIcon content={cilPrint} />\r\n          </CButton>\r\n        </CPopover> */}\r\n      </>\r\n    );\r\n  }, [filterText, resetPaginationToggle]);\r\n\r\n  const handleDateChange = React.useCallback(\r\n    (item) => {\r\n      setState([item.selection]);\r\n      let timestampStartDate = Date.parse(item.selection.startDate);\r\n      let timestampEndDate = Date.parse(item.selection.endDate);\r\n\r\n      let startDate = format(timestampStartDate, \"Y-MM-dd\");\r\n      let endDate = format(timestampEndDate, \"Y-MM-dd\");\r\n\r\n      setFormattedDate({\r\n        ...formattedDate,\r\n        startDate: startDate,\r\n        endDate: endDate,\r\n      });\r\n    },\r\n    [formattedDate]\r\n  );\r\n\r\n  // Mencetak option - option dari select filter tahun\r\n  const filterTahun = () => {\r\n    let first_year = 2015;\r\n    let current_year = new Date().getFullYear();\r\n    // let range_year = current_year - first_year;\r\n    let arr = [];\r\n\r\n    for (let i = first_year; i <= current_year; i++) {\r\n      arr.push(i);\r\n    }\r\n\r\n    return arr;\r\n  };\r\n\r\n  // handle change of Filter Tahun\r\n  const handleChangeFilterTahun = (e) => {\r\n    setDataTahun(e.target.value);\r\n  };\r\n\r\n  // Tombol untuk menampilkan data berdasarkan filter Tahun\r\n  // const handleOnTampilkanDataTahun = () => {\r\n  //   console.log(dataTahun);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <CCard>\r\n        <CCardHeader className=\"d-flex justify-content-between my-card-header\">\r\n          <div className=\"title mb-2\">\r\n            <h3>Rekap Absensi Pegawai</h3>\r\n          </div>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol md=\"6\">\r\n              <CCard className=\"shadow\">\r\n                <CCardHeader className=\"bg-dark\">\r\n                  <h5 className=\"mb-0\">Filter berdasarkan per Tahun</h5>\r\n                </CCardHeader>\r\n                <CCollapse show={collapse2}>\r\n                  <CCardBody>\r\n                    <CForm>\r\n                      <CFormGroup>\r\n                        <CLabel>Masukkan tahun</CLabel>\r\n                        <CSelect\r\n                          costum\r\n                          name=\"filter_tahun\"\r\n                          id=\"filter_tahun\"\r\n                          value={dataTahun}\r\n                          onChange={(e) => handleChangeFilterTahun(e)}\r\n                        >\r\n                          <option value=\"\">--- Pilih Tahun ---</option>\r\n                          {filterTahun().map((item, index) => (\r\n                            <option value={item}>{item}</option>\r\n                          ))}\r\n                        </CSelect>\r\n                      </CFormGroup>\r\n                      {loading && (\r\n                        <div>\r\n                          <CRow>\r\n                            <CCol className=\"text-center\">\r\n                              <img\r\n                                className=\"mt-4 ml-3\"\r\n                                width={30}\r\n                                src={LoadAnimationBlue}\r\n                                alt=\"load-animation\"\r\n                              />\r\n                            </CCol>\r\n                          </CRow>\r\n                        </div>\r\n                      )}\r\n                    </CForm>\r\n                  </CCardBody>\r\n                </CCollapse>\r\n                <CCardFooter className=\"d-flex justify-content-between\">\r\n                  <CButton\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    onClick={() => setCollapse2(!collapse2)}\r\n                  >\r\n                    {!collapse2 ? \"Klik untuk melihat\" : \"Tutup\"}\r\n                  </CButton>\r\n                  <div>\r\n                    <CPopover content=\"Cetak Rekapan Absensi Pegawai Berdasarkan Tahun\">\r\n                      <CButton\r\n                        type=\"button\"\r\n                        color=\"info\"\r\n                        className=\"ml-2\"\r\n                        onClick={() =>\r\n                          printRekapAbsensiByStatusPegawai(\"semua\", dataTahun)\r\n                        }\r\n                      >\r\n                        <span className=\"my-text-button\">\r\n                          Cetak Rekapan Absensi\r\n                        </span>{\" \"}\r\n                        <CIcon content={cilPrint} />\r\n                      </CButton>\r\n                    </CPopover>\r\n                    <CPopover content=\"Export Rekapan Absensi Pegawai ke Excel\">\r\n                      <CButton\r\n                        type=\"button\"\r\n                        color=\"success\"\r\n                        className=\"ml-2\"\r\n                        onClick={() =>\r\n                          exportExcel(\r\n                            \"rekap-absensi-semua-pegawai/tahun\",\r\n                            dataTahun,\r\n                            \"filter_tahun\"\r\n                          )\r\n                        }\r\n                      >\r\n                        <span className=\"my-text-button\">Excel</span>{\" \"}\r\n                        <CIcon content={cilPrint} />\r\n                      </CButton>\r\n                    </CPopover>\r\n                  </div>\r\n                </CCardFooter>\r\n              </CCard>\r\n            </CCol>\r\n            <CCol md=\"6\">\r\n              <CCard className=\"shadow\">\r\n                <CCardHeader className=\"bg-dark\">\r\n                  <h5 className=\"mb-0\">Filter berdasarkan tanggal</h5>\r\n                </CCardHeader>\r\n                <CCollapse show={collapse2}>\r\n                  <CCardBody>\r\n                    <MemoizeKalender\r\n                      state={state}\r\n                      handleDateChange={handleDateChange}\r\n                    />\r\n                    {loading && (\r\n                      <div>\r\n                        <CRow>\r\n                          <CCol className=\"text-center\">\r\n                            <img\r\n                              className=\"mt-4 ml-3\"\r\n                              width={30}\r\n                              src={LoadAnimationBlue}\r\n                              alt=\"load-animation\"\r\n                            />\r\n                          </CCol>\r\n                        </CRow>\r\n                      </div>\r\n                    )}\r\n                  </CCardBody>\r\n                </CCollapse>\r\n                <CCardFooter className=\"d-flex justify-content-between\">\r\n                  <CButton\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    onClick={() => setCollapse2(!collapse2)}\r\n                  >\r\n                    {!collapse2 ? \"Klik untuk melihat\" : \"Tutup\"}\r\n                  </CButton>\r\n                  <div>\r\n                    <CPopover content=\"Cetak Rekapan Absensi Pegawai Berdasarkan Filter Tanggal\">\r\n                      <CButton\r\n                        type=\"button\"\r\n                        color=\"info\"\r\n                        className=\"ml-2\"\r\n                        onClick={() =>\r\n                          printRekapAbsensiByDate(\"semua\", formattedDate)\r\n                        }\r\n                      >\r\n                        <span className=\"my-text-button\">\r\n                          Cetak Rekapan Absensi\r\n                        </span>{\" \"}\r\n                        <CIcon content={cilPrint} />\r\n                      </CButton>\r\n                    </CPopover>\r\n                    <CPopover content=\"Export Rekapan Absensi Pegawai ke Excel\">\r\n                      <CButton\r\n                        type=\"button\"\r\n                        color=\"success\"\r\n                        className=\"ml-2\"\r\n                        onClick={() =>\r\n                          exportExcel(\r\n                            \"rekap-absensi-semua-pegawai/tanggal\",\r\n                            formattedDate,\r\n                            \"filter_tanggal\"\r\n                          )\r\n                        }\r\n                      >\r\n                        <span className=\"my-text-button\">Excel</span>{\" \"}\r\n                        <CIcon content={cilPrint} />\r\n                      </CButton>\r\n                    </CPopover>\r\n                  </div>\r\n                </CCardFooter>\r\n              </CCard>\r\n            </CCol>\r\n          </CRow>\r\n\r\n          {data.length > 0 ? (\r\n            <DataTable\r\n              columns={columns}\r\n              data={filteredData}\r\n              noHeader\r\n              responsive={true}\r\n              customStyles={customStyles}\r\n              pagination\r\n              // paginationResetDefaultPage={resetPaginationToggle}\r\n              subHeader\r\n              subHeaderComponent={SubHeaderComponentMemo}\r\n              highlightOnHover\r\n            />\r\n          ) : (\r\n            <div>\r\n              <CRow>\r\n                <CCol className=\"text-center\">\r\n                  <img\r\n                    className=\"mt-4 ml-3\"\r\n                    width={30}\r\n                    src={LoadAnimationBlue}\r\n                    alt=\"load-animation\"\r\n                  />\r\n                </CCol>\r\n              </CRow>\r\n            </div>\r\n          )}\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RekapAbsensi;\r\n","import { ERROR, LOADING, SUCCESS } from \"src/context/actionTypes\";\r\nimport axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getAllRekapAbsensiPerTahun = (dispatch, tahun) => {\r\n  dispatch({\r\n    type: LOADING,\r\n  });\r\n\r\n  axiosInstance\r\n    .get(`admin/pegawai/rekap-absensi?tahun=${tahun}`)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ERROR,\r\n      });\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n","import { ERROR, LOADING, SUCCESS } from \"src/context/actionTypes\";\r\nimport axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getAllRekapAbsensiByDate = (dispatch, values) => {\r\n  dispatch({\r\n    type: LOADING,\r\n  });\r\n\r\n  axiosInstance\r\n    .get(\r\n      `admin/pegawai/rekap-absensi-tanggal?first_date=${values.startDate}&last_date=${values.endDate}`\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: ERROR,\r\n      });\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n","export const printRekapAbsensiByDate = (status, values) => {\r\n  window.open(\r\n    `${localStorage.baseURL}print-rekap-absensi-tanggal/${status}?first_date=${values.startDate}&last_date=${values.endDate}`,\r\n    \"_blank\"\r\n  );\r\n};\r\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","export const printRekapAbsensiByStatusPegawai = (status, tahun = \"\") => {\r\n  window.open(\r\n    `${localStorage.baseURL}print-rekap-absensi/${status}?tahun=${tahun}`,\r\n    \"_blank\"\r\n  );\r\n};\r\n","export const printRekapAbsensiByIdPegawai = (idPegawai) => {\r\n  window.open(\r\n    `${localStorage.baseURL}print-rekap-absensi-pegawai/${idPegawai}`,\r\n    \"_blank\"\r\n  );\r\n};\r\n"],"sourceRoot":""}