{"version":3,"sources":["views/dashboard/Dashboard.js","context/actions/UserPage/Dashboard/getDashboardInformation.js"],"names":["Dashboard","useContext","GlobalContext","userState","dashboardState","dashboardDispatch","data","dataDashboard","useEffect","dispatch","type","DASHBOARD_LOADING","axiosInstance","get","then","res","DASHBOARD_SUCCESS","payload","console","log","catch","err","DASHBOARD_ERROR","response","message","name","xs","sm","lg","className","width","src","getImage","foto_pegawai","alt","text","header","total_keluarga","toString","color","iconPadding","content","cilGroup","gaji_pokok","toLocaleString","style","currency","cilMoney","status_pegawai"],"mappings":"+QA+HeA,UArHG,WAAO,IAAD,EAEpBC,qBAAWC,KADLC,EADc,EACdA,UAAWC,EADG,EACHA,eAAgBC,EADb,EACaA,kBAE3BC,EAASH,EAATG,KACMC,EAAkBH,EAAxBE,KASR,OAPAE,qBAAU,WCT2B,IAACC,EDW/BF,KCX+BE,EDYVJ,GCXnB,CACPK,KAAMC,sBAGRC,IACGC,IAAI,kBACJC,MAAK,SAACC,GACLN,EAAS,CACPC,KAAMM,oBACNC,QAASF,EAAIT,KAAKA,OAEpBY,QAAQC,IAAIJ,EAAIT,SAEjBc,OAAM,SAACC,GACNZ,EAAS,CACPC,KAAMY,kBACNL,QAASI,EAAIE,SAASjB,KAAKkB,UAE7BN,QAAQC,IAAIE,EAAIE,SAASjB,YDL1B,CAACC,EAAeF,IAGjB,qCACE,iDAAoBC,GAAQA,EAAKmB,KAAjC,mBACA,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAxB,SACE,qBACEC,UAAU,qBACVC,MAAO,IACPC,IAAKxB,EAAgByB,YAASzB,EAAc0B,cAAgB,GAC5DC,IAAI,mBAGR,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEC,KAAK,kBACLC,OACE7B,EACIA,EAAc8B,eAAeC,WAC7B,MAENC,MAAM,UACNC,aAAa,EARf,SAUE,cAAC,IAAD,CAAOV,MAAO,GAAIW,QAASC,UAG/B,cAAC,IAAD,UACE,cAAC,KAAD,CACEP,KAAK,aACLC,OACE7B,EACIA,EAAcoC,WAAWC,eAAe,KAAM,CAC5CC,MAAO,WACPC,SAAU,QAEZ,MAENP,MAAM,UACNC,aAAa,EAXf,SAaE,cAAC,IAAD,CAAOV,MAAO,GAAIW,QAASM,UAG/B,cAAC,IAAD,UACE,cAAC,KAAD,CACEZ,KAAK,iBACLC,OAAQ7B,EAAgBA,EAAcyC,eAAiB,MACvDT,MAAM,OACNC,aAAa,EAJf,SAME,cAAC,IAAD,CAAOV,MAAO,GAAIL,KAAK","file":"static/js/74.267a97eb.chunk.js","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { CCol, CRow, CWidgetIcon } from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\n// import { CChartPie } from \"@coreui/react-chartjs\";\r\nimport { cilGroup, cilMoney } from \"@coreui/icons\";\r\nimport { GlobalContext } from \"src/context/Provider\";\r\nimport { getImage } from \"src/context/actions/DownloadFile\";\r\nimport { getDashboardInformation } from \"src/context/actions/UserPage/Dashboard/getDashboardInformation\";\r\n\r\nconst Dashboard = () => {\r\n  const { userState, dashboardState, dashboardDispatch } =\r\n    useContext(GlobalContext);\r\n  const { data } = userState;\r\n  const { data: dataDashboard } = dashboardState;\r\n\r\n  useEffect(() => {\r\n    // Get dashboard information\r\n    if (!dataDashboard) {\r\n      getDashboardInformation(dashboardDispatch);\r\n    }\r\n  }, [dataDashboard, dashboardDispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Selamat Datang {data && data.name} di E-Pekerja</h1>\r\n      <hr />\r\n      <CRow>\r\n        <CCol xs=\"12\" sm=\"4\" lg=\"4\">\r\n          <img\r\n            className=\"img-thumbnail mb-4\"\r\n            width={400}\r\n            src={dataDashboard ? getImage(dataDashboard.foto_pegawai) : \"\"}\r\n            alt=\"foto-pegawai\"\r\n          />\r\n        </CCol>\r\n        <CCol>\r\n          <CRow>\r\n            <CCol>\r\n              <CWidgetIcon\r\n                text=\"Jumlah Keluarga\"\r\n                header={\r\n                  dataDashboard\r\n                    ? dataDashboard.total_keluarga.toString()\r\n                    : \"...\"\r\n                }\r\n                color=\"primary\"\r\n                iconPadding={false}\r\n              >\r\n                <CIcon width={24} content={cilGroup} />\r\n              </CWidgetIcon>\r\n            </CCol>\r\n            <CCol>\r\n              <CWidgetIcon\r\n                text=\"Gaji Pokok\"\r\n                header={\r\n                  dataDashboard\r\n                    ? dataDashboard.gaji_pokok.toLocaleString(\"id\", {\r\n                        style: \"currency\",\r\n                        currency: \"IDR\",\r\n                      })\r\n                    : \"...\"\r\n                }\r\n                color=\"success\"\r\n                iconPadding={false}\r\n              >\r\n                <CIcon width={24} content={cilMoney} />\r\n              </CWidgetIcon>\r\n            </CCol>\r\n            <CCol>\r\n              <CWidgetIcon\r\n                text=\"Status Pegawai\"\r\n                header={dataDashboard ? dataDashboard.status_pegawai : \"...\"}\r\n                color=\"info\"\r\n                iconPadding={false}\r\n              >\r\n                <CIcon width={24} name=\"cil-user\" />\r\n              </CWidgetIcon>\r\n            </CCol>\r\n          </CRow>\r\n          {/* <CRow>\r\n            <CCol>\r\n              <CCard>\r\n                <CCardHeader>Informasi Absensi Pegawai</CCardHeader>\r\n                <CCardBody>\r\n                  <CChartPie\r\n                    datasets={[\r\n                      {\r\n                        backgroundColor: [\r\n                          \"#41B883\",\r\n                          \"#FFCE56\",\r\n                          \"#e55353\",\r\n                          \"#00D8FF\",\r\n                          \"#636f83\",\r\n                        ],\r\n                        data: [\r\n                          absen.totHadir,\r\n                          absen.totIzin,\r\n                          absen.totSakit,\r\n                          absen.totCuti,\r\n                          absen.totTK,\r\n                        ],\r\n                      },\r\n                    ]}\r\n                    labels={[\r\n                      \"Hadir\",\r\n                      \"Izin\",\r\n                      \"Sakit\",\r\n                      \"Cuti\",\r\n                      \"Tanpa Keterangan\",\r\n                    ]}\r\n                    options={{\r\n                      tooltips: {\r\n                        enabled: true,\r\n                      },\r\n                    }}\r\n                  />\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCol>\r\n          </CRow> */}\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import {\r\n  DASHBOARD_ERROR,\r\n  DASHBOARD_LOADING,\r\n  DASHBOARD_SUCCESS,\r\n} from \"src/context/actionTypes\";\r\nimport axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const getDashboardInformation = (dispatch) => {\r\n  dispatch({\r\n    type: DASHBOARD_LOADING,\r\n  });\r\n\r\n  axiosInstance\r\n    .get(\"user/dashboard\")\r\n    .then((res) => {\r\n      dispatch({\r\n        type: DASHBOARD_SUCCESS,\r\n        payload: res.data.data,\r\n      });\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: DASHBOARD_ERROR,\r\n        payload: err.response.data.message,\r\n      });\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n"],"sourceRoot":""}