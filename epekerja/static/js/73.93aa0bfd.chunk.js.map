{"version":3,"sources":["views/pages/login/Login.js","helpers/checkToken.js","context/actions/Auth/login.js","../node_modules/@coreui/icons/js/free/cil-info.js"],"names":["Login","history","useHistory","useContext","GlobalContext","loginState","loginDispatch","loading","data","error","useState","tokenAlert","setTokenAlert","useEffect","localStorage","token","push","checkToken","level","window","location","href","type","LOGIN_CLEAN_UP","validationSchema","Yup","shape","username","required","password","handleFormSubmit","values","dispatch","LOGIN_LOADING","axiosInstance","post","then","res","user","id_user","id","loginTimestamp","Date","getTime","LOGIN_SUCCESS","payload","console","log","catch","err","LOGIN_ERROR","response","message","login","style","marginTop","className","width","src","LogoKotaSamarinda","alt","fontSize","md","closeButton","fade","content","cilInfo","color","initialValues","onSubmit","errors","touched","handleSubmit","handleChange","handleBlur","name","placeholder","autoComplete","onChange","onBlur","value","xs","disabled","LoadAnimationBlue"],"mappings":"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","file":"static/js/73.93aa0bfd.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  CAlert,\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { GlobalContext } from \"src/context/Provider\";\r\nimport { login } from \"src/context/actions/Auth/login\";\r\nimport { cilInfo } from \"@coreui/icons\";\r\nimport { LoadAnimationBlue, LogoKotaSamarinda } from \"src/assets\";\r\nimport { LOGIN_CLEAN_UP } from \"src/context/actionTypes\";\r\nimport { checkToken } from \"src/helpers/checkToken\";\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const { loginState, loginDispatch } = useContext(GlobalContext);\r\n  const { loading, data, error } = loginState;\r\n  const [tokenAlert, setTokenAlert] = useState(true);\r\n\r\n  // Inisialisasi state untuk handle login\r\n  const initState = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  // Jika login berhasil, redirect ke dashboard\r\n  useEffect(() => {\r\n    if (tokenAlert) {\r\n      checkToken(history);\r\n    }\r\n\r\n    if (data) {\r\n      // Jika level user adalah admin, maka redirect ke dashboard admin\r\n      if (data.level === 1) {\r\n        window.location.href = \"/epekerja/admin/\";\r\n      }\r\n      // Jika tidak, maka rediret ke dashboard user\r\n      else {\r\n        window.location.href = \"/epekerja/user\";\r\n      }\r\n    }\r\n\r\n    // Untuk menampilkan alert ketika user belum logout\r\n\r\n    return () => {\r\n      loginDispatch({\r\n        type: LOGIN_CLEAN_UP,\r\n      });\r\n    };\r\n  }, [data, tokenAlert, history, loginDispatch]);\r\n\r\n  // Set rules of form validation using Yup\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required(\"Username harus diisi\"),\r\n    password: Yup.string().required(\"Password harus diisi\"),\r\n  });\r\n\r\n  const handleFormSubmit = (values) => {\r\n    // Lakukan proses login\r\n    setTokenAlert(false);\r\n    login(values, loginDispatch);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{ marginTop: \"100px\" }}\r\n      className=\"c-app c-default-layout flex-row\"\r\n    >\r\n      <CContainer>\r\n        <CRow className=\"mb-3\">\r\n          <CCol className=\"text-center\">\r\n            <img\r\n              width={150}\r\n              className=\"mb-3\"\r\n              src={LogoKotaSamarinda}\r\n              alt=\"logo-kota-samarinda\"\r\n            />\r\n            <h1 style={{ fontSize: \"3.5em\" }}>E-Pekerja</h1>\r\n            <h1 className=\"font-weight-normal\">\r\n              Dinas Perumahan dan Kawasan Permukiman Samarinda\r\n            </h1>\r\n          </CCol>\r\n        </CRow>\r\n        <CRow className=\"justify-content-center\">\r\n          <CCol md=\"5\">\r\n            <CCardGroup>\r\n              <CCard className=\"p-4\">\r\n                <CCardBody>\r\n                  <h1>Login</h1>\r\n                  <p className=\"text-muted\">Login ke akun Anda</p>\r\n                  {error && (\r\n                    <CAlert closeButton className=\"alert-danger\" fade>\r\n                      <span className=\"alert-inner--icon\">\r\n                        <CIcon content={cilInfo} color=\"white\" />\r\n                      </span>{\" \"}\r\n                      <span className=\"alert-inner--text ml-2\">{error} !</span>\r\n                    </CAlert>\r\n                  )}\r\n                  <Formik\r\n                    initialValues={initState}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values) => handleFormSubmit(values)}\r\n                  >\r\n                    {({\r\n                      values,\r\n                      errors,\r\n                      touched,\r\n                      handleSubmit,\r\n                      handleChange,\r\n                      handleBlur,\r\n                    }) => (\r\n                      <CForm onSubmit={handleSubmit}>\r\n                        <CInputGroup\r\n                          className={`mb-1 ${\r\n                            errors.username && touched.username\r\n                              ? \"input-error\"\r\n                              : null\r\n                          }`}\r\n                        >\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText>\r\n                              <CIcon\r\n                                name=\"cil-user\"\r\n                                className={\r\n                                  errors.username && touched.username\r\n                                    ? \"text-danger\"\r\n                                    : null\r\n                                }\r\n                              />\r\n                            </CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CInput\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            name=\"username\"\r\n                            placeholder=\"Username\"\r\n                            autoComplete=\"username\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.username || \"\"}\r\n                          />\r\n                        </CInputGroup>\r\n                        {errors.username && touched.username && (\r\n                          <div className=\"text-danger text-error\">\r\n                            {errors.username}\r\n                          </div>\r\n                        )}\r\n                        <CInputGroup\r\n                          className={`mt-3 mb-1 ${\r\n                            errors.password && touched.password\r\n                              ? \"input-error\"\r\n                              : null\r\n                          }`}\r\n                        >\r\n                          <CInputGroupPrepend>\r\n                            <CInputGroupText>\r\n                              <CIcon\r\n                                name=\"cil-lock-locked\"\r\n                                className={\r\n                                  errors.password && touched.password\r\n                                    ? \"text-danger\"\r\n                                    : null\r\n                                }\r\n                              />\r\n                            </CInputGroupText>\r\n                          </CInputGroupPrepend>\r\n                          <CInput\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.password || \"\"}\r\n                          />\r\n                        </CInputGroup>\r\n                        {errors.password && touched.password && (\r\n                          <div className=\"text-danger text-error\">\r\n                            {errors.password}\r\n                          </div>\r\n                        )}\r\n                        <CRow>\r\n                          <CCol xs=\"6\">\r\n                            <CButton\r\n                              color=\"primary\"\r\n                              className=\"px-4 mt-4\"\r\n                              type=\"submit\"\r\n                              disabled={loading ? true : false}\r\n                            >\r\n                              Login\r\n                            </CButton>\r\n\r\n                            {loading && (\r\n                              <img\r\n                                className=\"mt-4 ml-3\"\r\n                                width={30}\r\n                                src={LoadAnimationBlue}\r\n                                alt=\"load-animation\"\r\n                              />\r\n                            )}\r\n                          </CCol>\r\n                        </CRow>\r\n                      </CForm>\r\n                    )}\r\n                  </Formik>\r\n                </CCardBody>\r\n              </CCard>\r\n              {/* <CCard\r\n                className=\"text-white bg-primary py-5 d-md-down-none\"\r\n                style={{ width: \"44%\" }}\r\n              >\r\n                <CCardBody className=\"text-center\">\r\n                  <div>\r\n                    <h2>Registrasi</h2>\r\n                    <p>\r\n                      Buat akun kepegawaian sebagai user pegawai DISPERKIM untuk\r\n                      melihat data diri Anda\r\n                    </p>\r\n                    <Link to=\"/epekerja/register\">\r\n                      <CButton\r\n                        color=\"primary\"\r\n                        className=\"mt-3\"\r\n                        active\r\n                        tabIndex={-1}\r\n                      >\r\n                        Buat Akun!\r\n                      </CButton>\r\n                    </Link>\r\n                  </div>\r\n                </CCardBody>\r\n              </CCard> */}\r\n            </CCardGroup>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","// import Swal from \"sweetalert2\";\r\n// import withReactContent from \"sweetalert2-react-content\";\r\n\r\n// const MySwal = withReactContent(Swal);\r\n\r\nexport const checkToken = (history) => {\r\n  if (localStorage.token) {\r\n    // MySwal.fire({\r\n    //   icon: \"error\",\r\n    //   title: \"Akses Dilarang\",\r\n    //   text: \"Anda harus logout terlebih dahulu!\",\r\n    //   showConfirmButton: true,\r\n    // }).then((result) => {\r\n    //   if (result.isConfirmed) {\r\n    //     history.goBack();\r\n    //   }\r\n    // });\r\n    history.push(`/epekerja/admin/dashboard`);\r\n  }\r\n};\r\n","import {\r\n  LOGIN_ERROR,\r\n  LOGIN_LOADING,\r\n  LOGIN_SUCCESS,\r\n} from \"src/context/actionTypes\";\r\nimport axiosInstance from \"src/helpers/axios\";\r\n\r\nexport const login = (values, dispatch) => {\r\n  dispatch({\r\n    type: LOGIN_LOADING,\r\n  });\r\n\r\n  axiosInstance\r\n    .post(\"login\", values)\r\n    .then((res) => {\r\n      localStorage.token = res.data.token;\r\n      localStorage.level = res.data.user.level;\r\n      localStorage.id_user = res.data.user.id;\r\n      localStorage.loginTimestamp = new Date().getTime();\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data.user,\r\n      });\r\n      console.log(res.data);\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: LOGIN_ERROR,\r\n        payload: err.response.data.message,\r\n      });\r\n      console.log(err.response.data);\r\n    });\r\n};\r\n","export const cilInfo = [\"512 512\",\"<rect width='34.924' height='34.924' x='256' y='95.998' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M16,496H496V16H16ZM48,48H464V464H48Z' class='ci-primary'/><path fill='var(--ci-primary-color, currentColor)' d='M285.313,359.032a18.123,18.123,0,0,1-15.6,8.966,18.061,18.061,0,0,1-17.327-23.157l35.67-121.277A49.577,49.577,0,0,0,194.7,190.572l-11.718,28.234,29.557,12.266,11.718-28.235a17.577,17.577,0,0,1,33.1,11.7l-35.67,121.277A50.061,50.061,0,0,0,269.709,400a50.227,50.227,0,0,0,43.25-24.853l15.1-25.913-27.646-16.115Z' class='ci-primary'/>\"]"],"sourceRoot":""}